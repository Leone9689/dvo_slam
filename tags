!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	dvo_core/include/dvo/core/least_squares.h	/^  Matrix6x6 A;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
A	dvo_core/include/dvo/core/least_squares.h	/^  Matrix6x6 A;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
ALIGN	dvo_core/src/core/rgbd_image_sse.cpp	30;"	d	file:
ASYNC_POINT_CLOUD_BUILDER_H_	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	22;"	d
A_opt	dvo_core/include/dvo/core/least_squares.h	/^  OptimizedSelfAdjointMatrix6x6f A_opt;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
Accept	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^      Accept,$/;"	e	enum:dvo_slam::constraints::ConstraintProposal::Vote::Enum
Accept	dvo_slam/src/constraints/constraint_proposal.cpp	/^bool ConstraintProposal::Accept() const$/;"	f	class:dvo_slam::constraints::ConstraintProposal
AcceptCallback	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef AcceptSignal::slot_type AcceptCallback;$/;"	t	class:dvo_slam::LocalTracker
AcceptSignal	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef boost::signals2::signal<bool (const dvo_slam::LocalTracker&, const dvo_slam::LocalTracker::TrackingResult&, const dvo_slam::LocalTracker::TrackingResult&), dvo_slam::LocalTracker::All> AcceptSignal;$/;"	t	class:dvo_slam::LocalTracker
AffineTransform	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Transform<NumType,3, Eigen::Affine> AffineTransform;$/;"	t	namespace:dvo::core
AffineTransformd	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Affine3d AffineTransformd;$/;"	t	namespace:dvo::core
All	dvo_slam/include/dvo_slam/local_tracker.h	/^  struct All$/;"	s	class:dvo_slam::LocalTracker
ApproximateTDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class ApproximateTDistributionScaleEstimator : public TDistributionScaleEstimator$/;"	c	namespace:dvo::core
ApproximateTDistributionScaleEstimator	dvo_core/src/core/weight_calculation.cpp	/^ApproximateTDistributionScaleEstimator::ApproximateTDistributionScaleEstimator(const float dof) :$/;"	f	class:dvo::core::ApproximateTDistributionScaleEstimator
AsyncPointCloudBuilder	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^class AsyncPointCloudBuilder$/;"	c	namespace:dvo::visualization
AsyncPointCloudBuilder	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^AsyncPointCloudBuilder::AsyncPointCloudBuilder()$/;"	f	class:dvo::visualization::AsyncPointCloudBuilder
BLEND_MASK	dvo_core/src/dense_tracking_impl.cpp	/^static const __m128 BLEND_MASK = _mm_cmpgt_ps(_mm_setr_ps(0.0f, 1.0f, 0.0f, 0.0f), _mm_set1_ps(0.5f));$/;"	m	namespace:dvo::core	file:
BenchmarkNode	dvo_benchmark/src/benchmark.cpp	/^BenchmarkNode::BenchmarkNode(ros::NodeHandle& nh, ros::NodeHandle& nh_private) :$/;"	f	class:BenchmarkNode
BenchmarkNode	dvo_benchmark/src/benchmark.cpp	/^class BenchmarkNode$/;"	c	file:
BenchmarkNode	dvo_benchmark/src/benchmark_slam.cpp	/^BenchmarkNode::BenchmarkNode(ros::NodeHandle& nh, ros::NodeHandle& nh_private) :$/;"	f	class:BenchmarkNode
BenchmarkNode	dvo_benchmark/src/benchmark_slam.cpp	/^class BenchmarkNode$/;"	c	file:
BlockSolver	dvo_slam/src/keyframe_graph.cpp	/^  typedef g2o::BlockSolver_6_3 BlockSolver;$/;"	t	class:dvo_slam::internal::KeyframeGraphImpl	file:
BlockSolver	dvo_slam/src/local_map.cpp	/^  typedef g2o::BlockSolver_6_3 BlockSolver;$/;"	t	struct:dvo_slam::internal::LocalMapImpl	file:
BuildJob	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^  struct BuildJob$/;"	s	class:dvo::visualization::AsyncPointCloudBuilder
BuildJob	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^AsyncPointCloudBuilder::BuildJob::BuildJob(const dvo::core::RgbdImage& image, const Eigen::Affine3d pose) :$/;"	f	class:dvo::visualization::AsyncPointCloudBuilder::BuildJob
BuildPointCloudTask	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^  BuildPointCloudTask(const dvo::core::RgbdImage& image, const Eigen::Affine3d& pose, AsyncPointCloudBuilder::DoneCallback& callback) :$/;"	f	class:dvo::visualization::BuildPointCloudTask
BuildPointCloudTask	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^class BuildPointCloudTask : public tbb::task$/;"	c	namespace:dvo::visualization	file:
CAMERA_BASE_H_	dvo_ros/include/dvo_ros/camera_base.h	22;"	d
CAMERA_DENSE_TRACKING_H_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	22;"	d
CAMERA_KEYFRAME_TRACKING_H_	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	22;"	d
CAMERA_TRACKER_NODELET_H_	dvo_ros/include/dvo_ros/camera_tracker_nodelet.h	22;"	d
CAMERA_TRAJECTORY_VISUALIZER_H_	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	22;"	d
CONFIGTOOLS_H_	dvo_ros/include/dvo_ros/util/configtools.h	22;"	d
CONFIG_H_	dvo_slam/include/dvo_slam/config.h	22;"	d
CONFIG_PARAM	dvo_ros/cfg/dvo.cfg	/^CONFIG_PARAM = gen.const("ConfigParam", int_t, 0x00000004, "config_param")$/;"	v
CONSTRAINT_PROPOSAL_H_	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	22;"	d
CONSTRAINT_PROPOSAL_VALIDATOR_H_	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	22;"	d
CONSTRAINT_PROPOSAL_VOTER_H_	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	22;"	d
CameraBase	dvo_ros/include/dvo_ros/camera_base.h	/^class CameraBase$/;"	c	namespace:dvo_ros
CameraBase	dvo_ros/src/camera_base.cpp	/^CameraBase::CameraBase(ros::NodeHandle& nh, ros::NodeHandle& nh_private) :$/;"	f	class:dvo_ros::CameraBase
CameraDenseTracker	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^class CameraDenseTracker : public CameraBase$/;"	c	namespace:dvo_ros
CameraDenseTracker	dvo_ros/src/camera_dense_tracking.cpp	/^CameraDenseTracker::CameraDenseTracker(ros::NodeHandle& nh, ros::NodeHandle& nh_private) :$/;"	f	class:dvo_ros::CameraDenseTracker
CameraFile	dvo_benchmark/src/benchmark.cpp	/^    std::string CameraFile;$/;"	m	struct:BenchmarkNode::Config	file:
CameraFile	dvo_benchmark/src/benchmark_slam.cpp	/^    std::string CameraFile;$/;"	m	struct:BenchmarkNode::Config	file:
CameraKeyframeTracker	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^class CameraKeyframeTracker : public dvo_ros::CameraBase$/;"	c	namespace:dvo_slam
CameraKeyframeTracker	dvo_slam/src/camera_keyframe_tracking.cpp	/^CameraKeyframeTracker::CameraKeyframeTracker(ros::NodeHandle& nh, ros::NodeHandle& nh_private) :$/;"	f	class:dvo_slam::CameraKeyframeTracker
CameraTrackerNodelet	dvo_ros/include/dvo_ros/camera_tracker_nodelet.h	/^class CameraTrackerNodelet : public nodelet::Nodelet$/;"	c	namespace:dvo_ros
CameraTrackerNodelet	dvo_ros/src/camera_tracker_nodelet.cpp	/^CameraTrackerNodelet::CameraTrackerNodelet()$/;"	f	class:dvo_ros::CameraTrackerNodelet
CameraTrajectoryVisualizerInterface	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^class CameraTrajectoryVisualizerInterface$/;"	c	namespace:dvo::visualization
CameraVisualizer	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^class CameraVisualizer$/;"	c	namespace:dvo::visualization
CameraVisualizerMap	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  typedef std::map<std::string, PclCameraVisualizerPtr> CameraVisualizerMap;$/;"	t	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
CameraVisualizerMap	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  typedef std::map<std::string, CameraVisualizer::Ptr> CameraVisualizerMap;$/;"	t	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
Color	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  Color() :$/;"	f	struct:dvo::visualization::Color
Color	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  Color(double r, double g, double b) :$/;"	f	struct:dvo::visualization::Color
Color	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^struct Color$/;"	s	namespace:dvo::visualization
CompareEdgeChi2	dvo_slam/src/visualization/graph_visualizer.cpp	/^struct CompareEdgeChi2$/;"	s	namespace:dvo_slam::visualization::internal	file:
ComputeResidualsResult	dvo_core/include/dvo/dense_tracking_impl.h	/^struct ComputeResidualsResult$/;"	s	namespace:dvo::core
Config	dvo_benchmark/src/benchmark.cpp	/^  struct Config$/;"	s	class:BenchmarkNode	file:
Config	dvo_benchmark/src/benchmark_slam.cpp	/^  struct Config$/;"	s	class:BenchmarkNode	file:
Config	dvo_core/include/dvo/dense_tracking.h	/^  struct Config$/;"	s	class:dvo::DenseTracker
Config	dvo_core/src/dense_tracking_config.cpp	/^DenseTracker::Config::Config() :$/;"	f	class:dvo::DenseTracker::Config
ConstPtr	dvo_slam/include/dvo_slam/local_map.h	/^  typedef boost::shared_ptr<const LocalMap> ConstPtr;$/;"	t	class:dvo_slam::LocalMap
ConstPtr	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  typedef boost::shared_ptr<const TrackingResultEvaluation> ConstPtr;$/;"	t	class:dvo_slam::TrackingResultEvaluation
ConstraintPoposalConstRange	dvo_slam/src/keyframe_graph.cpp	/^    typedef tbb::blocked_range<ConstraintProposalVector::const_iterator> ConstraintPoposalConstRange;$/;"	t	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction	file:
ConstraintProposal	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^struct ConstraintProposal$/;"	s	namespace:dvo_slam::constraints
ConstraintProposal	dvo_slam/src/constraints/constraint_proposal.cpp	/^ConstraintProposal::ConstraintProposal() :$/;"	f	class:dvo_slam::constraints::ConstraintProposal
ConstraintProposalPtr	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^typedef boost::shared_ptr<ConstraintProposal> ConstraintProposalPtr;$/;"	t	namespace:dvo_slam::constraints
ConstraintProposalValidator	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^struct ConstraintProposalValidator$/;"	s	namespace:dvo_slam::constraints
ConstraintProposalValidator	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::ConstraintProposalValidator() {}$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator
ConstraintProposalValidatorPool	dvo_slam/src/keyframe_graph.cpp	/^  typedef tbb::enumerable_thread_specific<ConstraintProposalValidatorPtr> ConstraintProposalValidatorPool;$/;"	t	class:dvo_slam::internal::KeyframeGraphImpl	file:
ConstraintProposalValidatorPtr	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^typedef boost::shared_ptr<ConstraintProposalValidator> ConstraintProposalValidatorPtr;$/;"	t	namespace:dvo_slam::constraints
ConstraintProposalVector	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^typedef std::vector<ConstraintProposalPtr> ConstraintProposalVector;$/;"	t	namespace:dvo_slam::constraints
ConstraintProposalVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^struct ConstraintProposalVoter$/;"	s	namespace:dvo_slam::constraints
ConstraintProposalVoterPtr	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^typedef boost::shared_ptr<ConstraintProposalVoter> ConstraintProposalVoterPtr;$/;"	t	namespace:dvo_slam::constraints
ConstraintProposalVoterVector	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^typedef std::vector<ConstraintProposalVoterPtr> ConstraintProposalVoterVector;$/;"	t	namespace:dvo_slam::constraints
ConstraintRatioVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^struct ConstraintRatioVoter : public ConstraintProposalVoter$/;"	s	namespace:dvo_slam::constraints
ConstraintRatioVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintRatioVoter::ConstraintRatioVoter(double threshold) : RatioThreshold(threshold) {}$/;"	f	class:dvo_slam::constraints::ConstraintRatioVoter
CrossValidationVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^struct CrossValidationVoter : public ConstraintProposalVoter$/;"	s	namespace:dvo_slam::constraints
CrossValidationVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^CrossValidationVoter::CrossValidationVoter(const CrossValidationVoter& other) : TranslationThreshold(other.TranslationThreshold) {}$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
CrossValidationVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^CrossValidationVoter::CrossValidationVoter(double threshold) : TranslationThreshold(threshold) {}$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
Current	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  KeyframePtr Reference, Current;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal
DATATYPES_H_	dvo_core/include/dvo/core/datatypes.h	22;"	d
DEFAULT_B	dvo_core/include/dvo/core/weight_calculation.h	/^  static const float DEFAULT_B;$/;"	m	class:dvo::core::TukeyInfluenceFunction
DEFAULT_B	dvo_core/src/core/weight_calculation.cpp	/^const float TukeyInfluenceFunction::DEFAULT_B = 4.6851f;$/;"	m	class:dvo::core::TukeyInfluenceFunction	file:
DEFAULT_DOF	dvo_core/include/dvo/core/weight_calculation.h	/^  static const float DEFAULT_DOF;$/;"	m	class:dvo::core::TDistributionInfluenceFunction
DEFAULT_DOF	dvo_core/include/dvo/core/weight_calculation.h	/^  static const float DEFAULT_DOF;$/;"	m	class:dvo::core::TDistributionScaleEstimator
DEFAULT_DOF	dvo_core/src/core/weight_calculation.cpp	/^const float TDistributionInfluenceFunction::DEFAULT_DOF = 5.0f;$/;"	m	class:dvo::core::TDistributionInfluenceFunction	file:
DEFAULT_DOF	dvo_core/src/core/weight_calculation.cpp	/^const float TDistributionScaleEstimator::DEFAULT_DOF = 5.0f;$/;"	m	class:dvo::core::TDistributionScaleEstimator	file:
DEFAULT_K	dvo_core/include/dvo/core/weight_calculation.h	/^  static const float DEFAULT_K;$/;"	m	class:dvo::core::HuberInfluenceFunction
DEFAULT_K	dvo_core/src/core/weight_calculation.cpp	/^const float HuberInfluenceFunction::DEFAULT_K = 1.345f;$/;"	m	class:dvo::core::HuberInfluenceFunction	file:
DENSE_TRACKER_H_	dvo_core/include/dvo/dense_tracking.h	22;"	d
DENSE_TRACKING_IMPL_H_	dvo_core/include/dvo/dense_tracking_impl.h	22;"	d
Decision	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^    Enum Decision;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal::Vote
DenseTracker	dvo_core/include/dvo/dense_tracking.h	/^class DenseTracker$/;"	c	namespace:dvo
DenseTracker	dvo_core/src/dense_tracking.cpp	/^DenseTracker::DenseTracker(const Config& config) :$/;"	f	class:dvo::DenseTracker
DenseTracker	dvo_core/src/dense_tracking.cpp	/^DenseTracker::DenseTracker(const DenseTracker& other) :$/;"	f	class:dvo::DenseTracker
DenseTrackerPtr	dvo_slam/src/local_tracker.cpp	/^typedef boost::shared_ptr<dvo::DenseTracker> DenseTrackerPtr;$/;"	t	namespace:dvo_slam::internal	file:
DepthDerivativeThreshold	dvo_core/include/dvo/dense_tracking.h	/^    float DepthDerivativeThreshold;$/;"	m	struct:dvo::DenseTracker::Config
DepthType	dvo_core/include/dvo/core/datatypes.h	/^typedef float DepthType;$/;"	t	namespace:dvo::core
Dimension	dvo_core/src/sse_test.cpp	/^static const int Dimension = 2;$/;"	v	file:
Disabled	dvo_core/include/dvo/core/math_sse.h	/^    Disabled$/;"	e	enum:dvo::core::Sse::__anon5
DoneCallback	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^  typedef boost::function<void (const PointCloud::Ptr& cloud)> DoneCallback;$/;"	t	class:dvo::visualization::AsyncPointCloudBuilder
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	dvo_core/include/dvo/core/least_squares.h	/^  EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	dvo_core/include/dvo/core/least_squares.h	/^  EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	dvo_core/include/dvo/core/least_squares.h	/^  EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:dvo::core::SvdLeastSquares
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	dvo_core/include/dvo/dense_tracking.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:dvo::DenseTracker::IterationStats
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	dvo_core/include/dvo/dense_tracking.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:dvo::DenseTracker::Result
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:dvo::visualization::internal::PclTrajectoryVisualizer::PointPair	file:
EdgeErrorSerializer	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^class EdgeErrorSerializer : public MapSerializerInterface$/;"	c	namespace:dvo_slam::serialization
EdgeErrorSerializer	dvo_slam/src/serialization/map_serializer.cpp	/^EdgeErrorSerializer::EdgeErrorSerializer(std::ostream& stream) :$/;"	f	class:dvo_slam::serialization::EdgeErrorSerializer
Enabled	dvo_core/include/dvo/core/math_sse.h	/^    Enabled,$/;"	e	enum:dvo::core::Sse::__anon5
EntropyRatioTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  EntropyRatioTrackingResultEvaluation(const dvo::DenseTracker::Result& r) : TrackingResultEvaluation(value(r)) {};$/;"	f	class:dvo_slam::EntropyRatioTrackingResultEvaluation
EntropyRatioTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^class EntropyRatioTrackingResultEvaluation : public TrackingResultEvaluation$/;"	c	namespace:dvo_slam
Enum	dvo_core/include/dvo/dense_tracking.h	/^    enum Enum$/;"	g	struct:dvo::DenseTracker::TerminationCriteria
Enum	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^    enum Enum$/;"	g	struct:dvo_slam::constraints::ConstraintProposal::Vote
Equal	dvo_core/include/dvo/core/intrinsic_matrix.h	/^  struct Equal : std::binary_function<IntrinsicMatrix, IntrinsicMatrix, bool>$/;"	s	struct:dvo::core::IntrinsicMatrix
Error	dvo_core/include/dvo/dense_tracking.h	/^    double Error, LastError;$/;"	m	struct:dvo::DenseTracker::IterationContext
ErrorDiff	dvo_core/src/dense_tracking_config.cpp	/^double DenseTracker::IterationContext::ErrorDiff() const$/;"	f	class:dvo::DenseTracker::IterationContext
EstimateIncrement	dvo_core/include/dvo/dense_tracking.h	/^    dvo::core::Vector6d EstimateIncrement;$/;"	m	struct:dvo::DenseTracker::IterationStats
EstimateInformation	dvo_core/include/dvo/dense_tracking.h	/^    dvo::core::Matrix6d EstimateInformation;$/;"	m	struct:dvo::DenseTracker::IterationStats
EstimateRequired	dvo_benchmark/src/benchmark.cpp	/^bool BenchmarkNode::Config::EstimateRequired()$/;"	f	class:BenchmarkNode::Config
EstimateRequired	dvo_benchmark/src/benchmark_slam.cpp	/^bool BenchmarkNode::Config::EstimateRequired()$/;"	f	class:BenchmarkNode::Config
EstimateTrajectory	dvo_benchmark/src/benchmark.cpp	/^    bool EstimateTrajectory;$/;"	m	struct:BenchmarkNode::Config	file:
EstimateTrajectory	dvo_benchmark/src/benchmark_slam.cpp	/^    bool EstimateTrajectory;$/;"	m	struct:BenchmarkNode::Config	file:
EvdLeastSquares	dvo_core/include/dvo/core/least_squares.h	/^class EvdLeastSquares : public NormalEquationsLeastSquares$/;"	c	namespace:dvo::core
FILEREADER_H_	dvo_benchmark/include/dvo_benchmark/file_reader.h	22;"	d
FI_ATTRIBUTE	dvo_core/include/dvo/util/fluent_interface.h	27;"	d
FLUENT_INTERFACE_H_	dvo_core/include/dvo/util/fluent_interface.h	22;"	d
FileReader	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  FileReader(std::string& file) :$/;"	f	class:dvo_benchmark::FileReader
FileReader	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^class FileReader$/;"	c	namespace:dvo_benchmark
FileSerializer	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  FileSerializer(const std::string& filename) :$/;"	f	class:dvo_slam::serialization::FileSerializer
FileSerializer	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^class FileSerializer : public MapSerializerInterface$/;"	c	namespace:dvo_slam::serialization
FinalOptimizationIterations	dvo_slam/include/dvo_slam/config.h	/^  size_t FinalOptimizationIterations;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
FinalOptimizationOutlierWeightThreshold	dvo_slam/include/dvo_slam/config.h	/^  double FinalOptimizationOutlierWeightThreshold;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
FinalOptimizationRemoveOutliers	dvo_slam/include/dvo_slam/config.h	/^  bool FinalOptimizationRemoveOutliers;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
FinalOptimizationUseDenseGraph	dvo_slam/include/dvo_slam/config.h	/^  bool FinalOptimizationUseDenseGraph;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
FindEdge	dvo_slam/src/keyframe_graph.cpp	/^    FindEdge(int id1, int id2) : id1(id1), id2(id2)$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::FindEdge
FindEdge	dvo_slam/src/keyframe_graph.cpp	/^  struct FindEdge$/;"	s	class:dvo_slam::internal::KeyframeGraphImpl	file:
FindEdgeById	dvo_slam/src/keyframe_graph.cpp	/^  FindEdgeById(int id) : id_(id)$/;"	f	struct:dvo_slam::internal::FindEdgeById
FindEdgeById	dvo_slam/src/keyframe_graph.cpp	/^struct FindEdgeById$/;"	s	namespace:dvo_slam::internal	file:
FindEdgeById	dvo_slam/src/visualization/graph_visualizer.cpp	/^  FindEdgeById(int id) : id_(id)$/;"	f	struct:dvo_slam::visualization::internal::FindEdgeById
FindEdgeById	dvo_slam/src/visualization/graph_visualizer.cpp	/^struct FindEdgeById$/;"	s	namespace:dvo_slam::visualization::internal	file:
FindNearestPosePredicate	dvo_benchmark/src/experiment.cpp	/^  FindNearestPosePredicate(const dvo_benchmark::RgbdPair& entry) :$/;"	f	struct:FindNearestPosePredicate
FindNearestPosePredicate	dvo_benchmark/src/experiment.cpp	/^struct FindNearestPosePredicate$/;"	s	file:
FirstLevel	dvo_core/include/dvo/dense_tracking.h	/^    int FirstLevel, LastLevel;$/;"	m	struct:dvo::DenseTracker::Config
GIT_DIR	g2o/Makefile	/^GIT_DIR = g2o_src$/;"	m
GIT_DIR	sophus/Makefile	/^GIT_DIR = sophus_src$/;"	m
GIT_REVISION	g2o/Makefile	/^GIT_REVISION=67d5fa7$/;"	m
GIT_URL	g2o/Makefile	/^GIT_URL=git:\/\/github.com\/RainerKuemmerle\/g2o.git$/;"	m
GIT_URL	sophus/Makefile	/^GIT_URL=git:\/\/github.com\/strasdat\/Sophus.git$/;"	m
GRAPH_VISUALIZER_H_	dvo_slam/include/dvo_slam/visualization/graph_visualizer.h	22;"	d
GROUNDTRUTH_H_	dvo_benchmark/include/dvo_benchmark/groundtruth.h	22;"	d
GraphVisualizer	dvo_slam/include/dvo_slam/visualization/graph_visualizer.h	/^class GraphVisualizer$/;"	c	namespace:dvo_slam::visualization
GraphVisualizer	dvo_slam/src/visualization/graph_visualizer.cpp	/^GraphVisualizer::GraphVisualizer(dvo_ros::visualization::RosCameraTrajectoryVisualizer& visualizer) :$/;"	f	class:dvo_slam::visualization::GraphVisualizer
GraphVisualizerImpl	dvo_slam/src/visualization/graph_visualizer.cpp	/^  GraphVisualizerImpl(dvo_ros::visualization::RosCameraTrajectoryVisualizer& visualizer) :$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
GraphVisualizerImpl	dvo_slam/src/visualization/graph_visualizer.cpp	/^class GraphVisualizerImpl$/;"	c	namespace:dvo_slam::visualization::internal	file:
Groundtruth	dvo_benchmark/include/dvo_benchmark/groundtruth.h	/^  Groundtruth() {}$/;"	f	class:dvo_benchmark::Groundtruth
Groundtruth	dvo_benchmark/include/dvo_benchmark/groundtruth.h	/^class Groundtruth$/;"	c	namespace:dvo_benchmark
GroundtruthFile	dvo_benchmark/src/benchmark.cpp	/^    std::string GroundtruthFile;$/;"	m	struct:BenchmarkNode::Config	file:
GroundtruthFile	dvo_benchmark/src/benchmark_slam.cpp	/^    std::string GroundtruthFile;$/;"	m	struct:BenchmarkNode::Config	file:
HIDE_CTOR	dvo_core/include/dvo/core/math_sse.h	31;"	d
HISTOGRAM_H_	dvo_core/include/dvo/util/histogram.h	22;"	d
HasIterationWithIncrement	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::LevelStats::HasIterationWithIncrement() const$/;"	f	class:dvo::DenseTracker::LevelStats
Hash	dvo_core/include/dvo/core/intrinsic_matrix.h	/^  struct Hash : std::unary_function<IntrinsicMatrix, std::size_t>$/;"	s	struct:dvo::core::IntrinsicMatrix
Hessian	dvo_core/src/sse_test.cpp	/^typedef Eigen::Matrix<float, 6, 6> Hessian;$/;"	t	file:
Huber	dvo_core/include/dvo/core/weight_calculation.h	/^    Huber,$/;"	e	enum:dvo::core::InfluenceFunctions::__anon8
HuberInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^class HuberInfluenceFunction : public InfluenceFunction$/;"	c	namespace:dvo::core
HuberInfluenceFunction	dvo_core/src/core/weight_calculation.cpp	/^HuberInfluenceFunction::HuberInfluenceFunction(const float k)$/;"	f	class:dvo::core::HuberInfluenceFunction
ID_GENERATOR_H_	dvo_core/include/dvo/util/id_generator.h	22;"	d
INITIAL_SIGMA	dvo_core/include/dvo/core/weight_calculation.h	/^  static const float INITIAL_SIGMA;$/;"	m	class:dvo::core::TDistributionScaleEstimator
INITIAL_SIGMA	dvo_core/src/core/weight_calculation.cpp	/^const float TDistributionScaleEstimator::INITIAL_SIGMA = 5.0f;$/;"	m	class:dvo::core::TDistributionScaleEstimator	file:
INTERPOLATION_H_	dvo_core/include/dvo/core/interpolation.h	22;"	d
INTRINSIC_MATRIX_H_	dvo_core/include/dvo/core/intrinsic_matrix.h	22;"	d
Id	dvo_core/include/dvo/dense_tracking.h	/^    size_t Id, MaxValidPixels, ValidPixels;$/;"	m	struct:dvo::DenseTracker::LevelStats
Id	dvo_core/include/dvo/dense_tracking.h	/^    size_t Id, ValidConstraints;$/;"	m	struct:dvo::DenseTracker::IterationStats
Id	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^    int Id;$/;"	m	struct:dvo_slam::constraints::ConstraintProposalValidator::Stage
IdGenerator	dvo_core/include/dvo/util/id_generator.h	/^  IdGenerator(const std::string prefix) :$/;"	f	class:dvo::util::IdGenerator
IdGenerator	dvo_core/include/dvo/util/id_generator.h	/^class IdGenerator$/;"	c	namespace:dvo::util
Impl	dvo_slam/src/keyframe_tracker.cpp	/^  Impl(dvo_slam::visualization::GraphVisualizer* visualizer) :$/;"	f	class:dvo_slam::KeyframeTracker::Impl
Impl	dvo_slam/src/keyframe_tracker.cpp	/^class KeyframeTracker::Impl$/;"	c	class:dvo_slam::KeyframeTracker	file:
IncrementTooSmall	dvo_core/include/dvo/dense_tracking.h	/^      IncrementTooSmall,$/;"	e	enum:dvo::DenseTracker::TerminationCriteria::Enum
InfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^class InfluenceFunction$/;"	c	namespace:dvo::core
InfluenceFunctionParam	dvo_core/include/dvo/dense_tracking.h	/^    float InfluenceFunctionParam;$/;"	m	struct:dvo::DenseTracker::Config
InfluenceFunctions	dvo_core/include/dvo/core/weight_calculation.h	/^struct InfluenceFunctions {$/;"	s	namespace:dvo::core
InfluenceFuntionType	dvo_core/include/dvo/dense_tracking.h	/^    dvo::core::InfluenceFunctions::enum_t InfluenceFuntionType;$/;"	m	struct:dvo::DenseTracker::Config
Information	dvo_core/include/dvo/dense_tracking.h	/^    dvo::core::Matrix6d Information;$/;"	m	struct:dvo::DenseTracker::Result
InformationConditionNumber	dvo_core/src/dense_tracking_config.cpp	/^double DenseTracker::IterationStats::InformationConditionNumber() const$/;"	f	class:dvo::DenseTracker::IterationStats
InformationEigenValues	dvo_core/src/dense_tracking_config.cpp	/^void DenseTracker::IterationStats::InformationEigenValues(dvo::core::Vector6d& eigenvalues) const$/;"	f	class:dvo::DenseTracker::IterationStats
InitialTransformation	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  Eigen::Affine3d InitialTransformation;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal
IntensityAndDepth	dvo_core/include/dvo/core/rgbd_image.h	/^  } IntensityAndDepth;$/;"	t	struct:dvo::core::PointWithIntensityAndDepth	typeref:union:dvo::core::PointWithIntensityAndDepth::__anon3
IntensityDerivativeThreshold	dvo_core/include/dvo/dense_tracking.h	/^    float IntensityDerivativeThreshold;$/;"	m	struct:dvo::DenseTracker::Config
IntensityType	dvo_core/include/dvo/core/datatypes.h	/^typedef float IntensityType;$/;"	t	namespace:dvo::core
Interpolation	dvo_core/include/dvo/core/interpolation.h	/^struct Interpolation$/;"	s	namespace:dvo::core
IntrinsicMatrix	dvo_core/include/dvo/core/intrinsic_matrix.h	/^  IntrinsicMatrix() {}$/;"	f	struct:dvo::core::IntrinsicMatrix
IntrinsicMatrix	dvo_core/include/dvo/core/intrinsic_matrix.h	/^struct IntrinsicMatrix$/;"	s	namespace:dvo::core
IntrinsicMatrix	dvo_core/src/core/intrinsic_matrix.cpp	/^IntrinsicMatrix::IntrinsicMatrix(const IntrinsicMatrix & other) : data(other.data)$/;"	f	class:dvo::core::IntrinsicMatrix
Invalid	dvo_core/include/dvo/core/datatypes.h	/^static const IntensityType Invalid = std::numeric_limits<IntensityType>::quiet_NaN();$/;"	m	namespace:dvo::core
InvalidDepth	dvo_core/include/dvo/core/datatypes.h	/^static const DepthType InvalidDepth = std::numeric_limits<DepthType>::quiet_NaN();$/;"	m	namespace:dvo::core
IsFirstIteration	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::IterationContext::IsFirstIteration() const$/;"	f	class:dvo::DenseTracker::IterationContext
IsFirstIterationOnLevel	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::IterationContext::IsFirstIterationOnLevel() const$/;"	f	class:dvo::DenseTracker::IterationContext
IsFirstLevel	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::IterationContext::IsFirstLevel() const$/;"	f	class:dvo::DenseTracker::IterationContext
IsLastLevel	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::IterationContext::IsLastLevel() const$/;"	f	class:dvo::DenseTracker::IterationContext
IsSane	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::Config::IsSane() const$/;"	f	class:dvo::DenseTracker::Config
Iteration	dvo_core/include/dvo/dense_tracking.h	/^    int Iteration;$/;"	m	struct:dvo::DenseTracker::IterationContext
IterationContext	dvo_core/include/dvo/dense_tracking.h	/^  struct IterationContext$/;"	s	class:dvo::DenseTracker
IterationContext	dvo_core/src/dense_tracking_config.cpp	/^DenseTracker::IterationContext::IterationContext(const Config& cfg) :$/;"	f	class:dvo::DenseTracker::IterationContext
IterationStats	dvo_core/include/dvo/dense_tracking.h	/^  struct IterationStats$/;"	s	class:dvo::DenseTracker
IterationStatsVector	dvo_core/include/dvo/dense_tracking.h	/^  typedef std::vector<IterationStats, Eigen::aligned_allocator<IterationStats> > IterationStatsVector;$/;"	t	class:dvo::DenseTracker
Iterations	dvo_core/include/dvo/dense_tracking.h	/^    IterationStatsVector Iterations;$/;"	m	struct:dvo::DenseTracker::LevelStats
IterationsExceeded	dvo_core/include/dvo/dense_tracking.h	/^      IterationsExceeded,$/;"	e	enum:dvo::DenseTracker::TerminationCriteria::Enum
IterationsExceeded	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::IterationContext::IterationsExceeded() const$/;"	f	class:dvo::DenseTracker::IterationContext
J	dvo_core/include/dvo/core/least_squares.h	/^  Eigen::Matrix<NumType, Eigen::Dynamic, 6> J;$/;"	m	class:dvo::core::SvdLeastSquares
JacobianWorkspace	dvo_core/src/sse_test.cpp	/^typedef Eigen::Matrix<float, Eigen::Dynamic, 6> JacobianWorkspace;$/;"	t	file:
JenBreLogDetDiv	dvo_benchmark/src/experiment.cpp	/^double JenBreLogDetDiv(const Eigen::MatrixBase<Derived>& a, const Eigen::MatrixBase<Derived>& b)$/;"	f
KEYFRAME_CONSTRAINT_SEARCH_H_	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	22;"	d
KEYFRAME_GRAPH_H_	dvo_slam/include/dvo_slam/keyframe_graph.h	22;"	d
KEYFRAME_H_	dvo_slam/include/dvo_slam/keyframe.h	22;"	d
KEYFRAME_TRACKER_H_	dvo_slam/include/dvo_slam/keyframe_tracker.h	22;"	d
KeepAlive	dvo_benchmark/src/benchmark_slam.cpp	/^    bool KeepAlive;$/;"	m	struct:BenchmarkNode::Config	file:
Keyframe	dvo_slam/include/dvo_slam/keyframe.h	/^  Keyframe() : id_(-1) {};$/;"	f	class:dvo_slam::Keyframe
Keyframe	dvo_slam/include/dvo_slam/keyframe.h	/^class Keyframe$/;"	c	namespace:dvo_slam
KeyframeConstraintSearchInterface	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^class KeyframeConstraintSearchInterface$/;"	c	namespace:dvo_slam
KeyframeConstraintSearchInterfacePtr	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^typedef boost::shared_ptr<KeyframeConstraintSearchInterface> KeyframeConstraintSearchInterfacePtr;$/;"	t	namespace:dvo_slam
KeyframeGraph	dvo_slam/include/dvo_slam/keyframe_graph.h	/^class KeyframeGraph$/;"	c	namespace:dvo_slam
KeyframeGraph	dvo_slam/src/keyframe_graph.cpp	/^KeyframeGraph::KeyframeGraph() :$/;"	f	class:dvo_slam::KeyframeGraph
KeyframeGraphConfig	dvo_slam/include/dvo_slam/config.h	/^struct KeyframeGraphConfig$/;"	s	namespace:dvo_slam
KeyframeGraphConfig	dvo_slam/src/config.cpp	/^KeyframeGraphConfig::KeyframeGraphConfig() :$/;"	f	class:dvo_slam::KeyframeGraphConfig
KeyframeGraphImpl	dvo_slam/src/keyframe_graph.cpp	/^  KeyframeGraphImpl() :$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
KeyframeGraphImpl	dvo_slam/src/keyframe_graph.cpp	/^class KeyframeGraphImpl$/;"	c	namespace:dvo_slam::internal	file:
KeyframeGraphImplPtr	dvo_slam/include/dvo_slam/keyframe_graph.h	/^typedef boost::scoped_ptr<KeyframeGraphImpl> KeyframeGraphImplPtr;$/;"	t	namespace:dvo_slam::internal
KeyframePtr	dvo_slam/include/dvo_slam/keyframe.h	/^typedef boost::shared_ptr<Keyframe> KeyframePtr;$/;"	t	namespace:dvo_slam
KeyframeTracker	dvo_slam/include/dvo_slam/keyframe_tracker.h	/^class KeyframeTracker$/;"	c	namespace:dvo_slam
KeyframeTracker	dvo_slam/src/keyframe_tracker.cpp	/^KeyframeTracker::KeyframeTracker(dvo_slam::visualization::GraphVisualizer* visualizer) :$/;"	f	class:dvo_slam::KeyframeTracker
KeyframeTrackerConfig	dvo_slam/include/dvo_slam/config.h	/^struct KeyframeTrackerConfig$/;"	s	namespace:dvo_slam
KeyframeTrackerConfig	dvo_slam/src/config.cpp	/^KeyframeTrackerConfig::KeyframeTrackerConfig() :$/;"	f	class:dvo_slam::KeyframeTrackerConfig
KeyframeVector	dvo_slam/include/dvo_slam/keyframe.h	/^typedef std::vector<KeyframePtr> KeyframeVector;$/;"	t	namespace:dvo_slam
LEAST_SQUARES_H_	dvo_core/include/dvo/core/least_squares.h	22;"	d
LOCAL_MAP_H_	dvo_slam/include/dvo_slam/local_map.h	22;"	d
LOCAL_TRACKER_H_	dvo_slam/include/dvo_slam/local_tracker.h	22;"	d
LastError	dvo_core/include/dvo/dense_tracking.h	/^    double Error, LastError;$/;"	m	struct:dvo::DenseTracker::IterationContext
LastIteration	dvo_core/src/dense_tracking_config.cpp	/^DenseTracker::IterationStats& DenseTracker::LevelStats::LastIteration()$/;"	f	class:dvo::DenseTracker::LevelStats
LastIteration	dvo_core/src/dense_tracking_config.cpp	/^const DenseTracker::IterationStats& DenseTracker::LevelStats::LastIteration() const$/;"	f	class:dvo::DenseTracker::LevelStats
LastIterationWithIncrement	dvo_core/src/dense_tracking_config.cpp	/^DenseTracker::IterationStats& DenseTracker::LevelStats::LastIterationWithIncrement()$/;"	f	class:dvo::DenseTracker::LevelStats
LastIterationWithIncrement	dvo_core/src/dense_tracking_config.cpp	/^const DenseTracker::IterationStats& DenseTracker::LevelStats::LastIterationWithIncrement() const$/;"	f	class:dvo::DenseTracker::LevelStats
LastLevel	dvo_core/include/dvo/dense_tracking.h	/^    int FirstLevel, LastLevel;$/;"	m	struct:dvo::DenseTracker::Config
LeastSquaresInterface	dvo_core/include/dvo/core/least_squares.h	/^class LeastSquaresInterface$/;"	c	namespace:dvo::core
Level	dvo_core/include/dvo/dense_tracking.h	/^    int Level;$/;"	m	struct:dvo::DenseTracker::IterationContext
LevelStats	dvo_core/include/dvo/dense_tracking.h	/^  struct LevelStats$/;"	s	class:dvo::DenseTracker
LevelStatsVector	dvo_core/include/dvo/dense_tracking.h	/^  typedef std::vector<LevelStats> LevelStatsVector;$/;"	t	class:dvo::DenseTracker
Levels	dvo_core/include/dvo/dense_tracking.h	/^    LevelStatsVector Levels;$/;"	m	struct:dvo::DenseTracker::Stats
LinearSolver	dvo_slam/src/keyframe_graph.cpp	/^  typedef g2o::LinearSolverCSparse<BlockSolver::PoseMatrixType> LinearSolver;$/;"	t	class:dvo_slam::internal::KeyframeGraphImpl	file:
LinearSolver	dvo_slam/src/local_map.cpp	/^  typedef g2o::LinearSolverCSparse<BlockSolver::PoseMatrixType> LinearSolver;$/;"	t	struct:dvo_slam::internal::LocalMapImpl	file:
LocalMap	dvo_slam/include/dvo_slam/local_map.h	/^class LocalMap$/;"	c	namespace:dvo_slam
LocalMap	dvo_slam/src/local_map.cpp	/^LocalMap::LocalMap(const dvo::core::RgbdImagePyramid::Ptr& keyframe, const dvo::core::AffineTransformd& keyframe_pose) :$/;"	f	class:dvo_slam::LocalMap
LocalMapImpl	dvo_slam/src/local_map.cpp	/^  LocalMapImpl(const dvo::core::RgbdImagePyramid::Ptr& keyframe, const dvo::core::AffineTransformd& keyframe_pose) :$/;"	f	struct:dvo_slam::internal::LocalMapImpl
LocalMapImpl	dvo_slam/src/local_map.cpp	/^struct LocalMapImpl$/;"	s	namespace:dvo_slam::internal	file:
LocalTracker	dvo_slam/include/dvo_slam/local_tracker.h	/^class LocalTracker$/;"	c	namespace:dvo_slam
LocalTracker	dvo_slam/src/local_tracker.cpp	/^LocalTracker::LocalTracker() :$/;"	f	class:dvo_slam::LocalTracker
LocalTrackerImpl	dvo_slam/src/local_tracker.cpp	/^struct LocalTrackerImpl$/;"	s	namespace:dvo_slam::internal	file:
LogLikelihood	dvo_core/include/dvo/dense_tracking.h	/^    double LogLikelihood;$/;"	m	struct:dvo::DenseTracker::Result
LogLikelihoodDecreased	dvo_core/include/dvo/dense_tracking.h	/^      LogLikelihoodDecreased,$/;"	e	enum:dvo::DenseTracker::TerminationCriteria::Enum
LogLikelihoodTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  LogLikelihoodTrackingResultEvaluation(const dvo::DenseTracker::Result& r) : TrackingResultEvaluation(value(r)) {};$/;"	f	class:dvo_slam::LogLikelihoodTrackingResultEvaluation
LogLikelihoodTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^class LogLikelihoodTrackingResultEvaluation : public TrackingResultEvaluation$/;"	c	namespace:dvo_slam
MAD	dvo_core/include/dvo/core/weight_calculation.h	/^    MAD$/;"	e	enum:dvo::core::ScaleEstimators::__anon7
MADScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class MADScaleEstimator : public ScaleEstimator$/;"	c	namespace:dvo::core
MADScaleEstimator	dvo_core/src/core/weight_calculation.cpp	/^MADScaleEstimator::MADScaleEstimator()$/;"	f	class:dvo::core::MADScaleEstimator
MAP_SERIALIZER_H_	dvo_slam/include/dvo_slam/serialization/map_serializer.h	22;"	d
MAP_SERIALIZER_INTERFACE_H_	dvo_slam/include/dvo_slam/serialization/map_serializer_interface.h	22;"	d
MATH_SSE_H_	dvo_core/include/dvo/core/math_sse.h	22;"	d
MISC_PARAM	dvo_ros/cfg/dvo.cfg	/^MISC_PARAM = gen.const("MiscParam", int_t, 0x00000008, "misc_param")$/;"	v
MapChangedCallback	dvo_slam/include/dvo_slam/keyframe_graph.h	/^  typedef boost::function<MapChangedCallbackSignature> MapChangedCallback;$/;"	t	class:dvo_slam::KeyframeGraph
MapChangedCallbackSignature	dvo_slam/include/dvo_slam/keyframe_graph.h	/^  typedef void MapChangedCallbackSignature(KeyframeGraph&);$/;"	t	class:dvo_slam::KeyframeGraph
MapCompleteCallback	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef MapCompleteSignal::slot_type MapCompleteCallback;$/;"	t	class:dvo_slam::LocalTracker
MapCompleteSignal	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef boost::signals2::signal<void (const dvo_slam::LocalTracker&, const dvo_slam::LocalMap::Ptr&)> MapCompleteSignal;$/;"	t	class:dvo_slam::LocalTracker
MapInitializedCallback	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef MapInitializedSignal::slot_type MapInitializedCallback;$/;"	t	class:dvo_slam::LocalTracker
MapInitializedSignal	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef boost::signals2::signal<void (const dvo_slam::LocalTracker&, const dvo_slam::LocalMap::Ptr&, const dvo_slam::LocalTracker::TrackingResult&)> MapInitializedSignal;$/;"	t	class:dvo_slam::LocalTracker
MapSerializerInterface	dvo_slam/include/dvo_slam/serialization/map_serializer_interface.h	/^class MapSerializerInterface$/;"	c	namespace:dvo_slam::serialization
MapSerializerInterface	dvo_slam/src/serialization/map_serializer_interface.cpp	/^MapSerializerInterface::MapSerializerInterface()$/;"	f	class:dvo_slam::serialization::MapSerializerInterface
MathSse	dvo_core/include/dvo/core/math_sse.h	/^class MathSse$/;"	c	namespace:dvo::core
MathSse	dvo_core/include/dvo/core/math_sse.h	/^class MathSse<Sse::Disabled, NumType>$/;"	c	namespace:dvo::core
Matrix1x2	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<NumType, 1, 2> Matrix1x2;$/;"	t	namespace:dvo::core
Matrix2x6	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<NumType, 2, 6> Matrix2x6;$/;"	t	namespace:dvo::core
Matrix6d	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<double, 6, 6> Matrix6d;$/;"	t	namespace:dvo::core
Matrix6x6	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<NumType, 6, 6> Matrix6x6;$/;"	t	namespace:dvo::core
MaxIterationsPerLevel	dvo_core/include/dvo/dense_tracking.h	/^    int MaxIterationsPerLevel;$/;"	m	struct:dvo::DenseTracker::Config
MaxRotationalDistance	dvo_slam/include/dvo_slam/config.h	/^  double MaxRotationalDistance;$/;"	m	struct:dvo_slam::KeyframeTrackerConfig
MaxTranslationalDistance	dvo_slam/include/dvo_slam/config.h	/^  double MaxTranslationalDistance;$/;"	m	struct:dvo_slam::KeyframeTrackerConfig
MaxValidPixels	dvo_core/include/dvo/dense_tracking.h	/^    size_t Id, MaxValidPixels, ValidPixels;$/;"	m	struct:dvo::DenseTracker::LevelStats
MessageSerializer	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^class MessageSerializer : public MapSerializerInterface$/;"	c	namespace:dvo_slam::serialization
MessageSerializer	dvo_slam/src/serialization/map_serializer.cpp	/^MessageSerializer::MessageSerializer(dvo_slam::PoseStampedArray& msg) :$/;"	f	class:dvo_slam::serialization::MessageSerializer
MinConstraintDistance	dvo_slam/include/dvo_slam/config.h	/^  size_t MinConstraintDistance;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
MinEntropyRatio	dvo_slam/include/dvo_slam/config.h	/^  double MinEntropyRatio;$/;"	m	struct:dvo_slam::KeyframeTrackerConfig
MinEquationSystemConstraintRatio	dvo_slam/include/dvo_slam/config.h	/^  double MinEquationSystemConstraintRatio;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
MinEquationSystemConstraintRatio	dvo_slam/include/dvo_slam/config.h	/^  double MinEquationSystemConstraintRatio;$/;"	m	struct:dvo_slam::KeyframeTrackerConfig
Mu	dvo_core/include/dvo/dense_tracking.h	/^    double Mu; \/\/ precision (1\/sigma^2) of prior$/;"	m	struct:dvo::DenseTracker::Config
NANS	dvo_core/src/core/rgbd_image_sse.cpp	/^static const __m128 NANS = _mm_set1_ps(std::numeric_limits<float>::quiet_NaN());$/;"	m	namespace:dvo::core	file:
NORMALIZER	dvo_core/include/dvo/core/weight_calculation.h	/^  static const float NORMALIZER;\/\/ = 1.48f;$/;"	m	class:dvo::core::MADScaleEstimator
NORMALIZER	dvo_core/src/core/weight_calculation.cpp	/^const float MADScaleEstimator::NORMALIZER = 1.48f;$/;"	m	class:dvo::core::MADScaleEstimator	file:
NaNResultVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^struct NaNResultVoter : public ConstraintProposalVoter$/;"	s	namespace:dvo_slam::constraints
NaNResultVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^NaNResultVoter::NaNResultVoter() {}$/;"	f	class:dvo_slam::constraints::NaNResultVoter
NearestNeighborConstraintSearch	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^  NearestNeighborConstraintSearch(float max_distance) :$/;"	f	class:dvo_slam::NearestNeighborConstraintSearch
NearestNeighborConstraintSearch	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^class NearestNeighborConstraintSearch : public KeyframeConstraintSearchInterface$/;"	c	namespace:dvo_slam
NewConstraintMinEntropyRatioCoarse	dvo_slam/include/dvo_slam/config.h	/^  double NewConstraintMinEntropyRatioCoarse;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
NewConstraintMinEntropyRatioFine	dvo_slam/include/dvo_slam/config.h	/^  double NewConstraintMinEntropyRatioFine;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
NewConstraintSearchRadius	dvo_slam/include/dvo_slam/config.h	/^  double NewConstraintSearchRadius;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
NoopCameraTrajectoryVisualizer	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^class NoopCameraTrajectoryVisualizer : public CameraTrajectoryVisualizerInterface$/;"	c	namespace:dvo::visualization
NoopCameraTrajectoryVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^NoopCameraTrajectoryVisualizer::NoopCameraTrajectoryVisualizer()$/;"	f	class:dvo::visualization::NoopCameraTrajectoryVisualizer
NoopCameraVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  NoopCameraVisualizer() {}$/;"	f	class:dvo::visualization::NoopCameraVisualizer
NoopCameraVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^class NoopCameraVisualizer : public CameraVisualizer$/;"	c	namespace:dvo::visualization	file:
NoopTrajectoryVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  NoopTrajectoryVisualizer() {}$/;"	f	class:dvo::visualization::NoopTrajectoryVisualizer
NoopTrajectoryVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^class NoopTrajectoryVisualizer : public TrajectoryVisualizer$/;"	c	namespace:dvo::visualization	file:
NormalDistribution	dvo_core/include/dvo/core/weight_calculation.h	/^    NormalDistribution,$/;"	e	enum:dvo::core::ScaleEstimators::__anon7
NormalDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class NormalDistributionScaleEstimator : public ScaleEstimator$/;"	c	namespace:dvo::core
NormalDistributionScaleEstimator	dvo_core/src/core/weight_calculation.cpp	/^NormalDistributionScaleEstimator::NormalDistributionScaleEstimator()$/;"	f	class:dvo::core::NormalDistributionScaleEstimator
NormalEquationsLeastSquares	dvo_core/include/dvo/core/least_squares.h	/^class NormalEquationsLeastSquares : public LeastSquaresInterface$/;"	c	namespace:dvo::core
NormalizedLogLikelihoodTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  NormalizedLogLikelihoodTrackingResultEvaluation(const dvo::DenseTracker::Result& r) : TrackingResultEvaluation(value(r)) {};$/;"	f	class:dvo_slam::NormalizedLogLikelihoodTrackingResultEvaluation
NormalizedLogLikelihoodTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^class NormalizedLogLikelihoodTrackingResultEvaluation : public TrackingResultEvaluation$/;"	c	namespace:dvo_slam
NumCriteria	dvo_core/include/dvo/dense_tracking.h	/^      NumCriteria$/;"	e	enum:dvo::DenseTracker::TerminationCriteria::Enum
NumType	dvo_core/include/dvo/core/datatypes.h	/^typedef float NumType;$/;"	t	namespace:dvo::core
ONES	dvo_core/src/core/rgbd_image_sse.cpp	/^static const __m128 ONES = _mm_set1_ps(1.0f);$/;"	m	namespace:dvo::core	file:
ONES	dvo_core/src/dense_tracking_impl.cpp	/^static const __m128 ONES = _mm_set1_ps(1.0f);$/;"	m	namespace:dvo::core	file:
OdometryConstraintVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^struct OdometryConstraintVoter : public ConstraintProposalVoter$/;"	s	namespace:dvo_slam::constraints
OdometryConstraintVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^OdometryConstraintVoter::OdometryConstraintVoter() {}$/;"	f	class:dvo_slam::constraints::OdometryConstraintVoter
OnClickCallback	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  typedef boost::function<OnClickCallbackSignature> OnClickCallback;$/;"	t	class:dvo::visualization::CameraVisualizer
OnClickCallbackSignature	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  typedef void OnClickCallbackSignature(const CameraVisualizer&);$/;"	t	class:dvo::visualization::CameraVisualizer
OnlyKeepBest	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^    bool OnlyKeepBest;$/;"	m	struct:dvo_slam::constraints::ConstraintProposalValidator::Stage
OptimizationIterations	dvo_slam/include/dvo_slam/config.h	/^  size_t OptimizationIterations;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
OptimizationOutlierWeightThreshold	dvo_slam/include/dvo_slam/config.h	/^  double OptimizationOutlierWeightThreshold;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
OptimizationRemoveOutliers	dvo_slam/include/dvo_slam/config.h	/^  bool OptimizationRemoveOutliers;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
OptimizationUseDenseGraph	dvo_slam/include/dvo_slam/config.h	/^  bool OptimizationUseDenseGraph;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
OptimizedSelfAdjointMatrix6x6f	dvo_core/include/dvo/core/math_sse.h	/^class OptimizedSelfAdjointMatrix6x6f$/;"	c	namespace:dvo::core
OptimizedSelfAdjointMatrix6x6f	dvo_core/src/core/math_sse.cpp	/^OptimizedSelfAdjointMatrix6x6f::OptimizedSelfAdjointMatrix6x6f()$/;"	f	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
OptimizedTDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class OptimizedTDistributionScaleEstimator : public TDistributionScaleEstimator$/;"	c	namespace:dvo::core
OptimizedTDistributionScaleEstimator	dvo_core/src/core/weight_calculation.cpp	/^OptimizedTDistributionScaleEstimator::OptimizedTDistributionScaleEstimator(const float dof) :$/;"	f	class:dvo::core::OptimizedTDistributionScaleEstimator
Option	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  enum Option$/;"	g	class:dvo::visualization::CameraVisualizer
PACKAGE	dvo_ros/cfg/dvo.cfg	/^PACKAGE='dvo_ros'$/;"	v
PACKAGE	dvo_slam/cfg/dvo_slam.cfg	/^PACKAGE='dvo_slam'$/;"	v
PACKAGE	dvo_slam/cfg/graph_visualizer.cfg	/^PACKAGE='dvo_slam'$/;"	v
PCL_CAMERA_TRAJECTORY_VISUALIZER_H_	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	22;"	d
POINT_CLOUD_AGGREGATOR_H_	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	22;"	d
POINT_SELECTION_H_	dvo_core/include/dvo/core/point_selection.h	22;"	d
POINT_SELECTION_PREDICATES_H_	dvo_core/include/dvo/core/point_selection_predicates.h	22;"	d
PclCameraTrajectoryVisualizer	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^class PclCameraTrajectoryVisualizer : public dvo::visualization::CameraTrajectoryVisualizerInterface$/;"	c	namespace:dvo::visualization
PclCameraTrajectoryVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^PclCameraTrajectoryVisualizer::PclCameraTrajectoryVisualizer(bool async) :$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
PclCameraTrajectoryVisualizerImpl	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  PclCameraTrajectoryVisualizerImpl(bool render_thread = true)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
PclCameraTrajectoryVisualizerImpl	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^struct PclCameraTrajectoryVisualizerImpl$/;"	s	namespace:dvo::visualization::internal	file:
PclCameraVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  PclCameraVisualizer(std::string& name)$/;"	f	class:dvo::visualization::internal::PclCameraVisualizer
PclCameraVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^class PclCameraVisualizer : public dvo::visualization::CameraVisualizer$/;"	c	namespace:dvo::visualization::internal	file:
PclCameraVisualizerPtr	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  typedef boost::shared_ptr<PclCameraVisualizer> PclCameraVisualizerPtr;$/;"	t	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
PclTrajectoryVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  PclTrajectoryVisualizer(std::string& name)$/;"	f	class:dvo::visualization::internal::PclTrajectoryVisualizer
PclTrajectoryVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^class PclTrajectoryVisualizer : public dvo::visualization::TrajectoryVisualizer$/;"	c	namespace:dvo::visualization::internal	file:
PclTrajectoryVisualizerPtr	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  typedef boost::shared_ptr<PclTrajectoryVisualizer> PclTrajectoryVisualizerPtr;$/;"	t	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
Point	dvo_core/include/dvo/core/rgbd_image.h	/^  } Point;$/;"	t	struct:dvo::core::PointWithIntensityAndDepth	typeref:union:dvo::core::PointWithIntensityAndDepth::__anon1
PointCloud	dvo_core/include/dvo/core/rgbd_image.h	/^  typedef dvo::core::PointCloud PointCloud;$/;"	t	class:dvo::core::RgbdImage
PointCloud	dvo_core/include/dvo/core/rgbd_image.h	/^typedef Eigen::Matrix<float, 4, Eigen::Dynamic, Eigen::ColMajor> PointCloud;$/;"	t	namespace:dvo::core
PointCloud	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^  typedef pcl::PointCloud<pcl::PointXYZRGB> PointCloud;$/;"	t	class:dvo::visualization::AsyncPointCloudBuilder
PointCloudAggregator	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	/^class PointCloudAggregator$/;"	c	namespace:dvo::visualization
PointCloudAggregator	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^PointCloudAggregator::PointCloudAggregator() :$/;"	f	class:dvo::visualization::PointCloudAggregator
PointCloudAggregatorImpl	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^  PointCloudAggregatorImpl() {}$/;"	f	class:dvo::visualization::internal::PointCloudAggregatorImpl
PointCloudAggregatorImpl	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^class PointCloudAggregatorImpl$/;"	c	namespace:dvo::visualization::internal	file:
PointCloudBuilderCallable	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	/^  typedef boost::function<dvo::visualization::AsyncPointCloudBuilder::PointCloud::Ptr()> PointCloudBuilderCallable;$/;"	t	class:dvo::visualization::PointCloudAggregator
PointCloudMap	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^typedef std::map<std::string, PointCloudAggregator::PointCloudBuilderCallable> PointCloudMap;$/;"	t	namespace:dvo::visualization	file:
PointIterator	dvo_core/include/dvo/core/point_selection.h	/^  typedef PointVector::iterator PointIterator;$/;"	t	class:dvo::core::PointSelection
PointIterator	dvo_core/include/dvo/dense_tracking_impl.h	/^typedef PointWithIntensityAndDepth::VectorType::iterator PointIterator;$/;"	t	namespace:dvo::core
PointPair	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  class PointPair$/;"	c	class:dvo::visualization::internal::PclTrajectoryVisualizer	file:
PointSelection	dvo_core/include/dvo/core/point_selection.h	/^class PointSelection$/;"	c	namespace:dvo::core
PointSelection	dvo_core/src/core/point_selection.cpp	/^PointSelection::PointSelection(const PointSelectionPredicate& predicate) :$/;"	f	class:dvo::core::PointSelection
PointSelection	dvo_core/src/core/point_selection.cpp	/^PointSelection::PointSelection(dvo::core::RgbdImagePyramid& pyramid, const PointSelectionPredicate& predicate) :$/;"	f	class:dvo::core::PointSelection
PointSelectionPredicate	dvo_core/include/dvo/core/point_selection.h	/^class PointSelectionPredicate$/;"	c	namespace:dvo::core
PointSelectionPtr	dvo_slam/src/local_tracker.cpp	/^typedef boost::shared_ptr<dvo::core::PointSelection> PointSelectionPtr;$/;"	t	namespace:dvo_slam::internal	file:
PointVector	dvo_core/include/dvo/core/point_selection.h	/^  typedef PointWithIntensityAndDepth::VectorType PointVector;$/;"	t	class:dvo::core::PointSelection
PointWithIntensityAndDepth	dvo_core/include/dvo/core/rgbd_image.h	/^struct EIGEN_ALIGN16 PointWithIntensityAndDepth$/;"	s	namespace:dvo::core
Precision	dvo_core/include/dvo/dense_tracking.h	/^    double Precision;$/;"	m	struct:dvo::DenseTracker::Config
PrecomputedLeastSquaresInterface	dvo_core/include/dvo/core/least_squares.h	/^class PrecomputedLeastSquaresInterface$/;"	c	namespace:dvo::core
PrecomputedNormalEquationsLeastSquares	dvo_core/include/dvo/core/least_squares.h	/^class PrecomputedNormalEquationsLeastSquares : public PrecomputedLeastSquaresInterface$/;"	c	namespace:dvo::core
PriorLogLikelihood	dvo_core/include/dvo/dense_tracking.h	/^    double PriorLogLikelihood;$/;"	m	struct:dvo::DenseTracker::IterationStats
ProposalPairVector	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  typedef std::vector<std::pair<ConstraintProposal*, ConstraintProposal*> > ProposalPairVector;$/;"	t	struct:dvo_slam::constraints::CrossValidationVoter
Ptr	dvo_core/include/dvo/core/rgbd_image.h	/^  typedef boost::shared_ptr<dvo::core::RgbdImagePyramid> Ptr;$/;"	t	class:dvo::core::RgbdImagePyramid
Ptr	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  typedef boost::shared_ptr<CameraVisualizer> Ptr;$/;"	t	class:dvo::visualization::CameraVisualizer
Ptr	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  typedef boost::shared_ptr<TrajectoryVisualizer> Ptr;$/;"	t	class:dvo::visualization::TrajectoryVisualizer
Ptr	dvo_slam/include/dvo_slam/local_map.h	/^  typedef boost::shared_ptr<LocalMap> Ptr;$/;"	t	class:dvo_slam::LocalMap
Ptr	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  typedef boost::shared_ptr<TrackingResultEvaluation> Ptr;$/;"	t	class:dvo_slam::TrackingResultEvaluation
REVERTABLE_H_	dvo_core/include/dvo/util/revertable.h	22;"	d
RGBDIMAGE_H_	dvo_core/include/dvo/core/rgbd_image.h	22;"	d
RGBDPAIR_H_	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	22;"	d
RGBDWithCameraInfoPolicy	dvo_ros/include/dvo_ros/camera_base.h	/^                > RGBDWithCameraInfoPolicy;$/;"	t	namespace:dvo_ros
ROS_CAMERA_TRAJECTORY_VISUALIZER_H_	dvo_ros/include/dvo_ros/visualization/ros_camera_trajectory_visualizer.h	22;"	d
RUN_DENSE_TRACKING	dvo_ros/cfg/dvo.cfg	/^RUN_DENSE_TRACKING = gen.const("RunDenseTracking", int_t, 0x00000001, "run_dense_tracking")$/;"	v
RatioThreshold	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  double RatioThreshold;$/;"	m	struct:dvo_slam::constraints::ConstraintRatioVoter
RatioThreshold	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  double RatioThreshold;$/;"	m	struct:dvo_slam::constraints::TrackingResultEvaluationVoter
Reason	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^    std::string Reason;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal::Vote
ReconfigureServer	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  typedef dynamic_reconfigure::Server<dvo_ros::CameraDenseTrackerConfig> ReconfigureServer;$/;"	t	class:dvo_ros::CameraDenseTracker
Reference	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  KeyframePtr Reference, Current;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal
Reject	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^      Reject$/;"	e	enum:dvo_slam::constraints::ConstraintProposal::Vote::Enum
Reject	dvo_slam/src/constraints/constraint_proposal.cpp	/^bool ConstraintProposal::Reject() const$/;"	f	class:dvo_slam::constraints::ConstraintProposal
RenderVideo	dvo_benchmark/src/benchmark.cpp	/^    bool RenderVideo;$/;"	m	struct:BenchmarkNode::Config	file:
RenderVideo	dvo_benchmark/src/benchmark_slam.cpp	/^    bool RenderVideo;$/;"	m	struct:BenchmarkNode::Config	file:
ResidualIterator	dvo_core/include/dvo/dense_tracking_impl.h	/^typedef DenseTracker::ResidualVectorType::iterator ResidualIterator;$/;"	t	namespace:dvo::core
ResidualVectorType	dvo_core/include/dvo/dense_tracking.h	/^  typedef std::vector<Eigen::Vector2f, Eigen::aligned_allocator<Eigen::Vector2f> > ResidualVectorType;$/;"	t	class:dvo::DenseTracker
Result	dvo_core/include/dvo/dense_tracking.h	/^  struct Result$/;"	s	class:dvo::DenseTracker
Result	dvo_core/src/dense_tracking_config.cpp	/^DenseTracker::Result::Result() :$/;"	f	class:dvo::DenseTracker::Result
Revertable	dvo_core/include/dvo/util/revertable.h	/^  Revertable() : value()$/;"	f	class:dvo::util::Revertable
Revertable	dvo_core/include/dvo/util/revertable.h	/^  Revertable(const T& value) : value(value)$/;"	f	class:dvo::util::Revertable
Revertable	dvo_core/include/dvo/util/revertable.h	/^class Revertable$/;"	c	namespace:dvo::util
RgbdCamera	dvo_core/include/dvo/core/rgbd_image.h	/^class RgbdCamera$/;"	c	namespace:dvo::core
RgbdCamera	dvo_core/src/core/rgbd_image.cpp	/^RgbdCamera::RgbdCamera(size_t width, size_t height, const IntrinsicMatrix& intrinsics) :$/;"	f	class:dvo::core::RgbdCamera
RgbdCameraConstPtr	dvo_core/include/dvo/core/rgbd_image.h	/^typedef boost::shared_ptr<const RgbdCamera> RgbdCameraConstPtr;$/;"	t	namespace:dvo::core
RgbdCameraPtr	dvo_core/include/dvo/core/rgbd_image.h	/^typedef boost::shared_ptr<RgbdCamera> RgbdCameraPtr;$/;"	t	namespace:dvo::core
RgbdCameraPyramid	dvo_core/include/dvo/core/rgbd_image.h	/^class RgbdCameraPyramid$/;"	c	namespace:dvo::core
RgbdCameraPyramid	dvo_core/src/core/rgbd_image.cpp	/^RgbdCameraPyramid::RgbdCameraPyramid(const RgbdCamera& base)$/;"	f	class:dvo::core::RgbdCameraPyramid
RgbdCameraPyramid	dvo_core/src/core/rgbd_image.cpp	/^RgbdCameraPyramid::RgbdCameraPyramid(size_t base_width, size_t base_height, const dvo::core::IntrinsicMatrix& base_intrinsics)$/;"	f	class:dvo::core::RgbdCameraPyramid
RgbdCameraPyramidConstPtr	dvo_core/include/dvo/core/rgbd_image.h	/^typedef boost::shared_ptr<const RgbdCameraPyramid> RgbdCameraPyramidConstPtr;$/;"	t	namespace:dvo::core
RgbdCameraPyramidPtr	dvo_core/include/dvo/core/rgbd_image.h	/^typedef boost::shared_ptr<RgbdCameraPyramid> RgbdCameraPyramidPtr;$/;"	t	namespace:dvo::core
RgbdImage	dvo_core/include/dvo/core/rgbd_image.h	/^class RgbdImage$/;"	c	namespace:dvo::core
RgbdImage	dvo_core/src/core/rgbd_image.cpp	/^RgbdImage::RgbdImage(const RgbdCamera& camera) :$/;"	f	class:dvo::core::RgbdImage
RgbdImagePtr	dvo_core/include/dvo/core/rgbd_image.h	/^typedef boost::shared_ptr<RgbdImage> RgbdImagePtr;$/;"	t	namespace:dvo::core
RgbdImagePyramid	dvo_core/include/dvo/core/rgbd_image.h	/^class RgbdImagePyramid$/;"	c	namespace:dvo::core
RgbdImagePyramid	dvo_core/src/core/rgbd_image.cpp	/^RgbdImagePyramid::RgbdImagePyramid(RgbdCameraPyramid& camera, const cv::Mat& intensity, const cv::Mat& depth) :$/;"	f	class:dvo::core::RgbdImagePyramid
RgbdImagePyramidPtr	dvo_core/include/dvo/core/rgbd_image.h	/^typedef boost::shared_ptr<RgbdImagePyramid> RgbdImagePyramidPtr;$/;"	t	namespace:dvo::core
RgbdPair	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	/^  RgbdPair() {};$/;"	f	class:dvo_benchmark::RgbdPair
RgbdPair	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	/^class RgbdPair$/;"	c	namespace:dvo_benchmark
RgbdPairFile	dvo_benchmark/src/benchmark.cpp	/^    std::string RgbdPairFile;$/;"	m	struct:BenchmarkNode::Config	file:
RgbdPairFile	dvo_benchmark/src/benchmark_slam.cpp	/^    std::string RgbdPairFile;$/;"	m	struct:BenchmarkNode::Config	file:
RosCameraTrajectoryVisualizer	dvo_ros/include/dvo_ros/visualization/ros_camera_trajectory_visualizer.h	/^class RosCameraTrajectoryVisualizer : public dvo::visualization::CameraTrajectoryVisualizerInterface$/;"	c	namespace:dvo_ros::visualization
RosCameraTrajectoryVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^RosCameraTrajectoryVisualizer::RosCameraTrajectoryVisualizer(ros::NodeHandle& nh) :$/;"	f	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
RosCameraTrajectoryVisualizerImpl	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  RosCameraTrajectoryVisualizerImpl(ros::NodeHandle& nh) :$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl
RosCameraTrajectoryVisualizerImpl	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^struct RosCameraTrajectoryVisualizerImpl$/;"	s	namespace:dvo_ros::visualization::internal	file:
RosCameraVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  RosCameraVisualizer(std::string name, interactive_markers::InteractiveMarkerServer& marker_server, image_transport::Publisher& image_topic, dvo::visualization::PointCloudAggregator& point_cloud_aggregator) :$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer
RosCameraVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^class RosCameraVisualizer : public CameraVisualizer$/;"	c	namespace:dvo_ros::visualization::internal	file:
RosTrajectoryVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  RosTrajectoryVisualizer(std::string& name, interactive_markers::InteractiveMarkerServer& marker_server) :$/;"	f	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer
RosTrajectoryVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^class RosTrajectoryVisualizer : public TrajectoryVisualizer$/;"	c	namespace:dvo_ros::visualization::internal	file:
STOPWATCH_H_	dvo_core/include/dvo/util/stopwatch.h	22;"	d
SURFACE_PYRAMID_H_	dvo_core/include/dvo/core/surface_pyramid.h	22;"	d
ScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class ScaleEstimator$/;"	c	namespace:dvo::core
ScaleEstimatorParam	dvo_core/include/dvo/dense_tracking.h	/^    float ScaleEstimatorParam;$/;"	m	struct:dvo::DenseTracker::Config
ScaleEstimatorType	dvo_core/include/dvo/dense_tracking.h	/^    dvo::core::ScaleEstimators::enum_t ScaleEstimatorType;$/;"	m	struct:dvo::DenseTracker::Config
ScaleEstimators	dvo_core/include/dvo/core/weight_calculation.h	/^struct ScaleEstimators {$/;"	s	namespace:dvo::core
Score	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^    double Score;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal::Vote
ShowCamera	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^    ShowCamera,$/;"	e	enum:dvo::visualization::CameraVisualizer::Option
ShowCameraAndCloud	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^    ShowCameraAndCloud,$/;"	e	enum:dvo::visualization::CameraVisualizer::Option
ShowEstimate	dvo_benchmark/src/benchmark.cpp	/^    bool ShowEstimate;$/;"	m	struct:BenchmarkNode::Config	file:
ShowEstimate	dvo_benchmark/src/benchmark_slam.cpp	/^    bool ShowEstimate;$/;"	m	struct:BenchmarkNode::Config	file:
ShowGroundtruth	dvo_benchmark/src/benchmark.cpp	/^    bool ShowGroundtruth;$/;"	m	struct:BenchmarkNode::Config	file:
ShowGroundtruth	dvo_benchmark/src/benchmark_slam.cpp	/^    bool ShowGroundtruth;$/;"	m	struct:BenchmarkNode::Config	file:
ShowNothing	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^    ShowNothing$/;"	e	enum:dvo::visualization::CameraVisualizer::Option
Size	dvo_core/include/dvo/core/math_sse.h	/^    Size = 24$/;"	e	enum:dvo::core::OptimizedSelfAdjointMatrix6x6f::__anon6
SlamReconfigureServer	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  typedef dynamic_reconfigure::Server<dvo_slam::KeyframeSlamConfig> SlamReconfigureServer;$/;"	t	class:dvo_slam::CameraKeyframeTracker
Sse	dvo_core/include/dvo/core/math_sse.h	/^struct Sse$/;"	s	namespace:dvo::core
Stage	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^  struct Stage$/;"	s	struct:dvo_slam::constraints::ConstraintProposalValidator
Stage	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::Stage::Stage(int id) :$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator::Stage
StageVector	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^  typedef std::vector<Stage> StageVector;$/;"	t	struct:dvo_slam::constraints::ConstraintProposalValidator
Statistics	dvo_core/include/dvo/dense_tracking.h	/^    Stats Statistics;$/;"	m	struct:dvo::DenseTracker::Result
Stats	dvo_core/include/dvo/dense_tracking.h	/^  struct Stats$/;"	s	class:dvo::DenseTracker
Storage	dvo_core/include/dvo/core/point_selection.h	/^  struct Storage$/;"	s	class:dvo::core::PointSelection
Storage	dvo_core/src/core/point_selection.cpp	/^PointSelection::Storage::Storage() :$/;"	f	class:dvo::core::PointSelection::Storage
SurfacePyramid	dvo_core/include/dvo/core/surface_pyramid.h	/^class SurfacePyramid$/;"	c	namespace:dvo::core
SurfacePyramid	dvo_core/src/core/surface_pyramid.cpp	/^SurfacePyramid::SurfacePyramid()$/;"	f	class:dvo::core::SurfacePyramid
SvdLeastSquares	dvo_core/include/dvo/core/least_squares.h	/^class SvdLeastSquares : public LeastSquaresInterface$/;"	c	namespace:dvo::core
Switch	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  Switch(bool initial) :$/;"	f	struct:dvo::visualization::Switch
Switch	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^struct Switch$/;"	s	namespace:dvo::visualization
SwitchKeyBinding	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^    SwitchKeyBinding(Switch& s, std::string& key)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl::SwitchKeyBinding
SwitchKeyBinding	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  struct SwitchKeyBinding$/;"	s	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
TDistribution	dvo_core/include/dvo/core/weight_calculation.h	/^    TDistribution,$/;"	e	enum:dvo::core::InfluenceFunctions::__anon8
TDistribution	dvo_core/include/dvo/core/weight_calculation.h	/^    TDistribution,$/;"	e	enum:dvo::core::ScaleEstimators::__anon7
TDistributionInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^class TDistributionInfluenceFunction : public InfluenceFunction$/;"	c	namespace:dvo::core
TDistributionInfluenceFunction	dvo_core/src/core/weight_calculation.cpp	/^TDistributionInfluenceFunction::TDistributionInfluenceFunction(const float dof)$/;"	f	class:dvo::core::TDistributionInfluenceFunction
TDistributionLogLikelihood	dvo_core/include/dvo/dense_tracking.h	/^    double TDistributionLogLikelihood;$/;"	m	struct:dvo::DenseTracker::IterationStats
TDistributionMean	dvo_core/include/dvo/dense_tracking.h	/^    Eigen::Vector2d TDistributionMean;$/;"	m	struct:dvo::DenseTracker::IterationStats
TDistributionPrecision	dvo_core/include/dvo/dense_tracking.h	/^    Eigen::Matrix2d TDistributionPrecision;$/;"	m	struct:dvo::DenseTracker::IterationStats
TDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class TDistributionScaleEstimator : public ScaleEstimator$/;"	c	namespace:dvo::core
TDistributionScaleEstimator	dvo_core/src/core/weight_calculation.cpp	/^TDistributionScaleEstimator::TDistributionScaleEstimator(const float dof) :$/;"	f	class:dvo::core::TDistributionScaleEstimator
TDistributionScaleReduction	dvo_core/src/core/weight_calculation.cpp	/^  TDistributionScaleReduction(TDistributionScaleReduction& other, tbb::split) :$/;"	f	struct:dvo::core::TDistributionScaleReduction
TDistributionScaleReduction	dvo_core/src/core/weight_calculation.cpp	/^  TDistributionScaleReduction(const float *data, const float initial_lambda, const float dof) :$/;"	f	struct:dvo::core::TDistributionScaleReduction
TDistributionScaleReduction	dvo_core/src/core/weight_calculation.cpp	/^struct TDistributionScaleReduction$/;"	s	namespace:dvo::core	file:
TIMESTAMPED_H_	dvo_slam/include/dvo_slam/timestamped.h	22;"	d
TOOLS_H_	dvo_benchmark/include/dvo_benchmark/tools.h	22;"	d
TRACKING_RESULT_EVALUATION_H_	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	22;"	d
TerminationCriteria	dvo_core/include/dvo/dense_tracking.h	/^  struct TerminationCriteria$/;"	s	class:dvo::DenseTracker
TerminationCriterion	dvo_core/include/dvo/dense_tracking.h	/^    TerminationCriteria::Enum TerminationCriterion;$/;"	m	struct:dvo::DenseTracker::LevelStats
Timestamped	dvo_slam/include/dvo_slam/timestamped.h	/^  Timestamped()$/;"	f	class:dvo_slam::Timestamped
Timestamped	dvo_slam/include/dvo_slam/timestamped.h	/^  Timestamped(const ros::Time& new_timestamp) :$/;"	f	class:dvo_slam::Timestamped
Timestamped	dvo_slam/include/dvo_slam/timestamped.h	/^class Timestamped : public g2o::OptimizableGraph::Data$/;"	c	namespace:dvo_slam
TooFewConstraints	dvo_core/include/dvo/dense_tracking.h	/^      TooFewConstraints,$/;"	e	enum:dvo::DenseTracker::TerminationCriteria::Enum
TotalScore	dvo_slam/src/constraints/constraint_proposal.cpp	/^double ConstraintProposal::TotalScore() const$/;"	f	class:dvo_slam::constraints::ConstraintProposal
TrackerReconfigureServer	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  typedef dynamic_reconfigure::Server<dvo_ros::CameraDenseTrackerConfig> TrackerReconfigureServer;$/;"	t	class:dvo_slam::CameraKeyframeTracker
TrackingConfig	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^    dvo::DenseTracker::Config TrackingConfig;$/;"	m	struct:dvo_slam::constraints::ConstraintProposalValidator::Stage
TrackingResult	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  dvo::DenseTracker::Result TrackingResult;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal
TrackingResult	dvo_slam/include/dvo_slam/local_tracker.h	/^  typedef ::dvo::DenseTracker::Result TrackingResult;$/;"	t	class:dvo_slam::LocalTracker
TrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^class TrackingResultEvaluation$/;"	c	namespace:dvo_slam
TrackingResultEvaluation	dvo_slam/src/tracking_result_evaluation.cpp	/^TrackingResultEvaluation::TrackingResultEvaluation(double first)$/;"	f	class:dvo_slam::TrackingResultEvaluation
TrackingResultEvaluationVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^struct TrackingResultEvaluationVoter : public ConstraintProposalVoter$/;"	s	namespace:dvo_slam::constraints
TrackingResultEvaluationVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^TrackingResultEvaluationVoter::TrackingResultEvaluationVoter(double threshold) : RatioThreshold(threshold) {}$/;"	f	class:dvo_slam::constraints::TrackingResultEvaluationVoter
TrajectoryFile	dvo_benchmark/src/benchmark.cpp	/^    std::string TrajectoryFile;$/;"	m	struct:BenchmarkNode::Config	file:
TrajectoryFile	dvo_benchmark/src/benchmark_slam.cpp	/^    std::string TrajectoryFile;$/;"	m	struct:BenchmarkNode::Config	file:
TrajectorySerializer	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^class TrajectorySerializer : public MapSerializerInterface$/;"	c	namespace:dvo_slam::serialization
TrajectorySerializer	dvo_slam/src/serialization/map_serializer.cpp	/^TrajectorySerializer::TrajectorySerializer(std::ostream& stream) :$/;"	f	class:dvo_slam::serialization::TrajectorySerializer
TrajectoryVisualizer	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^class TrajectoryVisualizer$/;"	c	namespace:dvo::visualization
TrajectoryVisualizerMap	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  typedef std::map<std::string, PclTrajectoryVisualizerPtr> TrajectoryVisualizerMap;$/;"	t	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
TrajectoryVisualizerMap	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  typedef std::map<std::string, TrajectoryVisualizer::Ptr> TrajectoryVisualizerMap;$/;"	t	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
Transformation	dvo_core/include/dvo/dense_tracking.h	/^    dvo::core::AffineTransformd Transformation;$/;"	m	struct:dvo::DenseTracker::Result
TranslationThreshold	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  double TranslationThreshold;$/;"	m	struct:dvo_slam::constraints::CrossValidationVoter
Tukey	dvo_core/include/dvo/core/weight_calculation.h	/^    Tukey,$/;"	e	enum:dvo::core::InfluenceFunctions::__anon8
TukeyInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^class TukeyInfluenceFunction : public InfluenceFunction$/;"	c	namespace:dvo::core
TukeyInfluenceFunction	dvo_core/src/core/weight_calculation.cpp	/^TukeyInfluenceFunction::TukeyInfluenceFunction(const float b)$/;"	f	class:dvo::core::TukeyInfluenceFunction
USE_DENSE_TRACKING_ESTIMATE	dvo_ros/cfg/dvo.cfg	/^USE_DENSE_TRACKING_ESTIMATE = gen.const("UseDenseTrackingEstimate", int_t, 0x00000002, "use_dense_tracking_estimate")$/;"	v
UTIL_H_	dvo_ros/include/dvo_ros/util/util.h	22;"	d
Unit	dvo_core/include/dvo/core/weight_calculation.h	/^    Unit,$/;"	e	enum:dvo::core::InfluenceFunctions::__anon8
Unit	dvo_core/include/dvo/core/weight_calculation.h	/^    Unit,$/;"	e	enum:dvo::core::ScaleEstimators::__anon7
UnitInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^  UnitInfluenceFunction() {};$/;"	f	class:dvo::core::UnitInfluenceFunction
UnitInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^class UnitInfluenceFunction : public InfluenceFunction$/;"	c	namespace:dvo::core
UnitScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  UnitScaleEstimator() {}$/;"	f	class:dvo::core::UnitScaleEstimator
UnitScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^class UnitScaleEstimator : public ScaleEstimator$/;"	c	namespace:dvo::core
UseEstimateSmoothing	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::Config::UseEstimateSmoothing() const$/;"	f	class:dvo::DenseTracker::Config
UseInitialEstimate	dvo_core/include/dvo/dense_tracking.h	/^    bool UseInitialEstimate;$/;"	m	struct:dvo::DenseTracker::Config
UseMultiThreading	dvo_slam/include/dvo_slam/config.h	/^  bool UseMultiThreading;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
UseMultiThreading	dvo_slam/include/dvo_slam/config.h	/^  bool UseMultiThreading;$/;"	m	struct:dvo_slam::KeyframeTrackerConfig
UseParallel	dvo_core/include/dvo/dense_tracking.h	/^    bool UseParallel;$/;"	m	struct:dvo::DenseTracker::Config
UseRobustKernel	dvo_slam/include/dvo_slam/config.h	/^  bool UseRobustKernel;$/;"	m	struct:dvo_slam::KeyframeGraphConfig
UseWeighting	dvo_core/include/dvo/dense_tracking.h	/^    bool UseWeighting;$/;"	m	struct:dvo::DenseTracker::Config
ValidConstraints	dvo_core/include/dvo/dense_tracking.h	/^    size_t Id, ValidConstraints;$/;"	m	struct:dvo::DenseTracker::IterationStats
ValidFlagIterator	dvo_core/include/dvo/dense_tracking_impl.h	/^typedef std::vector<uint8_t>::iterator ValidFlagIterator;$/;"	t	namespace:dvo::core
ValidPixels	dvo_core/include/dvo/dense_tracking.h	/^    size_t Id, MaxValidPixels, ValidPixels;$/;"	m	struct:dvo::DenseTracker::LevelStats
ValidPointAndGradientThresholdPredicate	dvo_core/include/dvo/core/point_selection.h	/^  ValidPointAndGradientThresholdPredicate() :$/;"	f	class:dvo::core::ValidPointAndGradientThresholdPredicate
ValidPointAndGradientThresholdPredicate	dvo_core/include/dvo/core/point_selection.h	/^class ValidPointAndGradientThresholdPredicate : public PointSelectionPredicate$/;"	c	namespace:dvo::core
ValidPointPredicate	dvo_core/include/dvo/core/point_selection.h	/^class ValidPointPredicate : public PointSelectionPredicate$/;"	c	namespace:dvo::core
ValidateConstraintProposalReduction	dvo_slam/src/keyframe_graph.cpp	/^    ValidateConstraintProposalReduction(ConstraintProposalValidatorPool& validators) :$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction
ValidateConstraintProposalReduction	dvo_slam/src/keyframe_graph.cpp	/^    ValidateConstraintProposalReduction(const ValidateConstraintProposalReduction& other, tbb::split) :$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction
ValidateConstraintProposalReduction	dvo_slam/src/keyframe_graph.cpp	/^  struct ValidateConstraintProposalReduction$/;"	s	class:dvo_slam::internal::KeyframeGraphImpl	file:
Vec8f	dvo_core/include/dvo/core/rgbd_image.h	/^  typedef cv::Vec<float, 8> Vec8f;$/;"	t	class:dvo::core::RgbdImage
Vector4	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<NumType, 4, 1> Vector4;$/;"	t	namespace:dvo::core
Vector6	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<NumType, 6, 1> Vector6;$/;"	t	namespace:dvo::core
Vector6d	dvo_core/include/dvo/core/datatypes.h	/^typedef Eigen::Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:dvo::core
Vector8f	dvo_core/include/dvo/core/rgbd_image.h	/^typedef Eigen::Matrix<float, 8, 1> Vector8f;$/;"	t	namespace:dvo::core
VectorType	dvo_core/include/dvo/core/rgbd_image.h	/^  typedef std::vector<PointWithIntensityAndDepth, Eigen::aligned_allocator<PointWithIntensityAndDepth> > VectorType;$/;"	t	struct:dvo::core::PointWithIntensityAndDepth
VideoFolder	dvo_benchmark/src/benchmark.cpp	/^    std::string VideoFolder;$/;"	m	struct:BenchmarkNode::Config	file:
VideoFolder	dvo_benchmark/src/benchmark_slam.cpp	/^    std::string VideoFolder;$/;"	m	struct:BenchmarkNode::Config	file:
VisualizationRequired	dvo_benchmark/src/benchmark.cpp	/^bool BenchmarkNode::Config::VisualizationRequired()$/;"	f	class:BenchmarkNode::Config
VisualizationRequired	dvo_benchmark/src/benchmark_slam.cpp	/^bool BenchmarkNode::Config::VisualizationRequired()$/;"	f	class:BenchmarkNode::Config
Vote	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^    Vote() : Decision(Reject), Score(0.0) {}$/;"	f	struct:dvo_slam::constraints::ConstraintProposal::Vote
Vote	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  struct Vote$/;"	s	struct:dvo_slam::constraints::ConstraintProposal
VoteVector	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  typedef std::vector<Vote> VoteVector;$/;"	t	struct:dvo_slam::constraints::ConstraintProposal
Voters	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^    ConstraintProposalVoterVector Voters;$/;"	m	struct:dvo_slam::constraints::ConstraintProposalValidator::Stage
Votes	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^  VoteVector Votes;$/;"	m	struct:dvo_slam::constraints::ConstraintProposal
WEIGHT_CALCULATION_H_	dvo_core/include/dvo/core/weight_calculation.h	22;"	d
WarpIntensityOptions	dvo_core/include/dvo/core/rgbd_image.h	/^  enum WarpIntensityOptions$/;"	g	class:dvo::core::RgbdImage
WeightCalculation	dvo_core/include/dvo/core/weight_calculation.h	/^class WeightCalculation$/;"	c	namespace:dvo::core
WeightCalculation	dvo_core/src/core/weight_calculation.cpp	/^WeightCalculation::WeightCalculation() :$/;"	f	class:dvo::core::WeightCalculation
WeightIterator	dvo_core/include/dvo/dense_tracking_impl.h	/^typedef DenseTracker::WeightVectorType::iterator WeightIterator;$/;"	t	namespace:dvo::core
WeightVectorType	dvo_core/include/dvo/dense_tracking.h	/^  typedef std::vector<float> WeightVectorType;$/;"	t	class:dvo::DenseTracker
WithPointCloud	dvo_core/include/dvo/core/rgbd_image.h	/^    WithPointCloud,$/;"	e	enum:dvo::core::RgbdImage::WarpIntensityOptions
WithoutPointCloud	dvo_core/include/dvo/core/rgbd_image.h	/^    WithoutPointCloud,$/;"	e	enum:dvo::core::RgbdImage::WarpIntensityOptions
ZEROS	dvo_core/src/core/rgbd_image_sse.cpp	/^static const __m128 ZEROS = _mm_setzero_ps();$/;"	m	namespace:dvo::core	file:
__SSE3__	dvo_core/src/core/math_sse.cpp	24;"	d	file:
__SSE3__	dvo_core/src/dense_tracking_impl.cpp	25;"	d	file:
acc	dvo_core/include/dvo/util/stopwatch.h	/^  boost::accumulators::accumulator_set<double, boost::accumulators::stats<boost::accumulators::tag::mean> > acc;$/;"	m	struct:dvo::util::stopwatch
acceleration	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat_<Vec8f> acceleration;$/;"	m	class:dvo::core::RgbdImage
accept_	dvo_slam/src/local_tracker.cpp	/^  LocalTracker::AcceptSignal accept_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
accumulated_transform	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  Eigen::Affine3d accumulated_transform, from_baselink_to_asus, latest_absolute_transform_;$/;"	m	class:dvo_ros::CameraDenseTracker
accumulated_transform	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  Eigen::Affine3d accumulated_transform;$/;"	m	class:dvo_slam::CameraKeyframeTracker
active_	dvo_slam/src/keyframe_graph.cpp	/^  KeyframePtr active_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
active_frame_points_	dvo_slam/src/local_tracker.cpp	/^  PointSelectionPtr keyframe_points_, active_frame_points_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
add	dvo_core/include/dvo/core/math_sse.h	/^  static void add(Eigen::Matrix<NumType, 6, 1>& vec, const Eigen::Matrix<NumType, 6, 1>& other, const NumType& scale)$/;"	f	class:dvo::core::MathSse
add	dvo_core/src/core/math_sse.cpp	/^void MathSse<Sse::Enabled, double>::add(Eigen::Matrix<double, 6, 1>& vec, const Eigen::Matrix<double, 6, 1>& other, const double& scale)$/;"	f	class:dvo::core::MathSse
add	dvo_core/src/core/math_sse.cpp	/^void MathSse<Sse::Enabled, float>::add(Eigen::Matrix<float, 6, 1>& vec, const Eigen::Matrix<float, 6, 1>& other, const float& scale)$/;"	f	class:dvo::core::MathSse
add	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  virtual TrajectoryVisualizer& add(const Eigen::Affine3d& pose)$/;"	f	class:dvo::visualization::NoopTrajectoryVisualizer
add	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  virtual TrajectoryVisualizer& add(const Eigen::Affine3d& pose)$/;"	f	class:dvo::visualization::internal::PclTrajectoryVisualizer
add	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^void PointCloudAggregator::add(const std::string& name, const PointCloudBuilderCallable& cloud)$/;"	f	class:dvo::visualization::PointCloudAggregator
add	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^void PointCloudAggregator::add(const std::string& name, const dvo::visualization::AsyncPointCloudBuilder::PointCloud::Ptr& cloud)$/;"	f	class:dvo::visualization::PointCloudAggregator
add	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual TrajectoryVisualizer& add(const Eigen::Affine3d& pose)$/;"	f	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer
add	dvo_slam/src/keyframe_graph.cpp	/^  void add(const LocalMap::Ptr& keyframe)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
add	dvo_slam/src/keyframe_graph.cpp	/^void KeyframeGraph::add(const LocalMap::Ptr& keyframe)$/;"	f	class:dvo_slam::KeyframeGraph
add	dvo_slam/src/tracking_result_evaluation.cpp	/^void TrackingResultEvaluation::add(const dvo::DenseTracker::Result& r)$/;"	f	class:dvo_slam::TrackingResultEvaluation
addAcceptCallback	dvo_slam/src/local_tracker.cpp	/^boost::signals2::connection LocalTracker::addAcceptCallback(const AcceptCallback& callback)$/;"	f	class:dvo_slam::LocalTracker
addConstraint	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::addConstraint(const size_t& idx, const dvo::core::Vector6& J)$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
addFrame	dvo_slam/src/local_map.cpp	/^void LocalMap::addFrame(const dvo::core::RgbdImagePyramid::Ptr& frame)$/;"	f	class:dvo_slam::LocalMap
addFrameVertex	dvo_slam/src/local_map.cpp	/^  g2o::VertexSE3* addFrameVertex(const ros::Time& timestamp)$/;"	f	struct:dvo_slam::internal::LocalMapImpl
addGraph	dvo_slam/src/keyframe_graph.cpp	/^  void addGraph(g2o::OptimizableGraph* g)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
addKeyframeMeasurement	dvo_slam/src/local_map.cpp	/^void LocalMap::addKeyframeMeasurement(const dvo::core::AffineTransformd& pose, const dvo::core::Matrix6d& information)$/;"	f	class:dvo_slam::LocalMap
addMapChangedCallback	dvo_slam/src/keyframe_graph.cpp	/^void KeyframeGraph::addMapChangedCallback(const KeyframeGraph::MapChangedCallback& callback)$/;"	f	class:dvo_slam::KeyframeGraph
addMapChangedCallback	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::addMapChangedCallback(const dvo_slam::KeyframeGraph::MapChangedCallback& callback)$/;"	f	class:dvo_slam::KeyframeTracker
addMapCompleteCallback	dvo_slam/src/local_tracker.cpp	/^boost::signals2::connection LocalTracker::addMapCompleteCallback(const MapCompleteCallback& callback)$/;"	f	class:dvo_slam::LocalTracker
addMapInitializedCallback	dvo_slam/src/local_tracker.cpp	/^boost::signals2::connection LocalTracker::addMapInitializedCallback(const MapInitializedCallback& callback)$/;"	f	class:dvo_slam::LocalTracker
addOdometryMeasurement	dvo_slam/src/local_map.cpp	/^void LocalMap::addOdometryMeasurement(const dvo::core::AffineTransformd& pose, const dvo::core::Matrix6d& information)$/;"	f	class:dvo_slam::LocalMap
addOuterProduct	dvo_core/include/dvo/core/math_sse.h	/^  static void addOuterProduct(Eigen::Matrix<NumType, 6, 6>& mat, const Eigen::Matrix<NumType, 6, 1>& vec, const NumType& scale)$/;"	f	class:dvo::core::MathSse
addOuterProduct	dvo_core/src/core/math_sse.cpp	/^void MathSse<Sse::Enabled, double>::addOuterProduct( Eigen::Matrix<double, 6, 6>& mat, const Eigen::Matrix<double, 6, 1>& vec, const double& scale)$/;"	f	class:dvo::core::MathSse
addOuterProduct	dvo_core/src/core/math_sse.cpp	/^void MathSse<Sse::Enabled, float>::addOuterProduct(Eigen::Matrix<float, 6, 6>& mat, const Eigen::Matrix<float, 6, 1>& vec, const float& scale)$/;"	f	class:dvo::core::MathSse
addTransformationEdge	dvo_slam/src/local_map.cpp	/^  g2o::EdgeSE3* addTransformationEdge(g2o::VertexSE3 *from, g2o::VertexSE3 *to, const dvo::core::AffineTransformd& transform, const dvo::core::Matrix6d& information)$/;"	f	struct:dvo_slam::internal::LocalMapImpl
addVoter	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::Stage& ConstraintProposalValidator::Stage::addVoter(ConstraintProposalVoter* v)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator::Stage
all	dvo_core/include/dvo/util/id_generator.h	/^  const std::vector<std::string>& all()$/;"	f	class:dvo::util::IdGenerator
allocate	dvo_core/src/core/point_selection.cpp	/^void PointSelection::Storage::allocate(size_t max_points)$/;"	f	class:dvo::core::PointSelection::Storage
allocateColors	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void allocateColors(size_t n, float min_hue, float max_hue, cv::Mat& rgb)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
angles	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat normals, angles;$/;"	m	class:dvo::core::RgbdImage
appendProposals	dvo_slam/src/keyframe_graph.cpp	/^    void appendProposals(ConstraintProposalVector& pv)$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction	file:
average_	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  double first_, average_, n_;$/;"	m	class:dvo_slam::TrackingResultEvaluation
b	dvo_core/include/dvo/core/least_squares.h	/^  Vector6 b;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
b	dvo_core/include/dvo/core/least_squares.h	/^  Vector6 b;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
b	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  double r, g, b;$/;"	m	struct:dvo::visualization::Color
b_square	dvo_core/include/dvo/core/weight_calculation.h	/^  float b_square;$/;"	m	class:dvo::core::TukeyInfluenceFunction
begin	dvo_core/include/dvo/util/stopwatch.h	/^  int64_t begin;$/;"	m	struct:dvo::util::stopwatch
bilinear	dvo_core/src/core/interpolation.cpp	/^IntensityType Interpolation::bilinear(const cv::Mat& img, float x, float y)$/;"	f	class:dvo::core::Interpolation
bilinearWithDepthBuffer	dvo_core/src/core/interpolation.cpp	/^IntensityType Interpolation::bilinearWithDepthBuffer(const cv::Mat& intensity, const cv::Mat& depth, const float& x, const float& y, const float& z)$/;"	f	class:dvo::core::Interpolation
bindSwitchToKey	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void bindSwitchToKey(Switch& s, std::string& key)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
bindSwitchToKey	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^void PclCameraTrajectoryVisualizer::bindSwitchToKey(Switch& s, std::string key)$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
blue	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  static const Color& blue()$/;"	f	struct:dvo::visualization::Color
build	dvo_core/src/core/rgbd_image.cpp	/^void RgbdCameraPyramid::build(size_t levels)$/;"	f	class:dvo::core::RgbdCameraPyramid
build	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImagePyramid::build(const size_t num_levels)$/;"	f	class:dvo::core::RgbdImagePyramid
build	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^AsyncPointCloudBuilder::PointCloud::Ptr AsyncPointCloudBuilder::BuildJob::build()$/;"	f	class:dvo::visualization::AsyncPointCloudBuilder::BuildJob
build	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^void AsyncPointCloudBuilder::build(const dvo::core::RgbdImage& image, const Eigen::Affine3d pose)$/;"	f	class:dvo::visualization::AsyncPointCloudBuilder
build	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^AsyncPointCloudBuilder::PointCloud::Ptr PointCloudAggregator::build()$/;"	f	class:dvo::visualization::PointCloudAggregator
buildAccelerationStructure	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::buildAccelerationStructure()$/;"	f	class:dvo::core::RgbdImage
buildPointCloud	dvo_core/src/core/rgbd_image.cpp	/^void RgbdCamera::buildPointCloud(const cv::Mat &depth, PointCloud& pointcloud) const$/;"	f	class:dvo::core::RgbdCamera
buildPointCloud	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::buildPointCloud()$/;"	f	class:dvo::core::RgbdImage
calculateDepthDerivatives	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::calculateDepthDerivatives()$/;"	f	class:dvo::core::RgbdImage
calculateDerivativeX	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::calculateDerivativeX(const cv::Mat& img, cv::Mat& result)$/;"	f	class:dvo::core::RgbdImage
calculateDerivativeY	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::calculateDerivativeY(const cv::Mat& img, cv::Mat& result)$/;"	f	class:dvo::core::RgbdImage
calculateDerivativeYSseFloat	dvo_core/src/core/rgbd_image_sse.cpp	/^void RgbdImage::calculateDerivativeYSseFloat(const cv::Mat& img, cv::Mat& result)$/;"	f	class:dvo::core::RgbdImage
calculateDerivatives	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::calculateDerivatives()$/;"	f	class:dvo::core::RgbdImage
calculateIntensityDerivatives	dvo_core/src/core/rgbd_image.cpp	/^bool RgbdImage::calculateIntensityDerivatives()$/;"	f	class:dvo::core::RgbdImage
calculateNormals	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::calculateNormals()$/;"	f	class:dvo::core::RgbdImage
calculateSampledFrustumMetric	dvo_benchmark/src/experiment.cpp	/^double calculateSampledFrustumMetric(const Eigen::Affine3d& pose, const dvo::core::IntrinsicMatrix& intrinsics)$/;"	f
calculateScale	dvo_core/src/core/weight_calculation.cpp	/^void WeightCalculation::calculateScale(const cv::Mat& errors)$/;"	f	class:dvo::core::WeightCalculation
calculateWeight	dvo_core/src/core/weight_calculation.cpp	/^float WeightCalculation::calculateWeight(const float error) const$/;"	f	class:dvo::core::WeightCalculation
calculateWeights	dvo_core/src/core/weight_calculation.cpp	/^void WeightCalculation::calculateWeights(const cv::Mat& errors, cv::Mat& weights)$/;"	f	class:dvo::core::WeightCalculation
callback_	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^  AsyncPointCloudBuilder::DoneCallback& callback_;$/;"	m	class:dvo::visualization::BuildPointCloudTask	file:
camera	dvo_core/src/core/rgbd_image.cpp	/^const RgbdCamera& RgbdImage::camera() const$/;"	f	class:dvo::core::RgbdImage
camera	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^CameraVisualizer::Ptr NoopCameraTrajectoryVisualizer::camera(std::string name)$/;"	f	class:dvo::visualization::NoopCameraTrajectoryVisualizer
camera	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  CameraVisualizer::Ptr camera(std::string name)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
camera	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^dvo::visualization::CameraVisualizer::Ptr PclCameraTrajectoryVisualizer::camera(std::string name)$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
camera	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  dvo::core::RgbdCameraPyramidPtr camera;$/;"	m	class:dvo_ros::CameraDenseTracker
camera	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  CameraVisualizer::Ptr camera(std::string name)$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl
camera	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^dvo::visualization::CameraVisualizer::Ptr RosCameraTrajectoryVisualizer::camera(std::string name)$/;"	f	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
camera	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo::core::RgbdCameraPyramidPtr camera;$/;"	m	class:dvo_slam::CameraKeyframeTracker
camera_	dvo_core/include/dvo/core/rgbd_image.h	/^  RgbdCameraPyramid& camera_;$/;"	m	class:dvo::core::RgbdImagePyramid
camera_	dvo_core/include/dvo/core/rgbd_image.h	/^  const RgbdCamera& camera_;$/;"	m	class:dvo::core::RgbdImage
camera_visualizers_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  CameraVisualizerMap camera_visualizers_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
camera_visualizers_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  CameraVisualizerMap camera_visualizers_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
cfg	dvo_core/include/dvo/dense_tracking.h	/^    const Config& cfg;$/;"	m	struct:dvo::DenseTracker::IterationContext
cfg	dvo_core/include/dvo/dense_tracking.h	/^  Config cfg;$/;"	m	class:dvo::DenseTracker
cfg_	dvo_benchmark/src/benchmark.cpp	/^  Config cfg_;$/;"	m	class:BenchmarkNode	file:
cfg_	dvo_benchmark/src/benchmark_slam.cpp	/^  Config cfg_;$/;"	m	class:BenchmarkNode	file:
cfg_	dvo_slam/src/keyframe_graph.cpp	/^  dvo_slam::KeyframeGraphConfig cfg_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
cfg_	dvo_slam/src/keyframe_tracker.cpp	/^  KeyframeTrackerConfig cfg_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
changed	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  bool changed()$/;"	f	struct:dvo::visualization::Switch
changed_	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  bool value_, changed_;$/;"	m	struct:dvo::visualization::Switch
clearStatistics	dvo_core/src/dense_tracking_config.cpp	/^void DenseTracker::Result::clearStatistics()$/;"	f	class:dvo::DenseTracker::Result
clearVotes	dvo_slam/src/constraints/constraint_proposal.cpp	/^void ConstraintProposal::clearVotes()$/;"	f	class:dvo_slam::constraints::ConstraintProposal
cloud_	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^    AsyncPointCloudBuilder::PointCloud::Ptr cloud_;$/;"	m	struct:dvo::visualization::AsyncPointCloudBuilder::BuildJob
cloud_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::shared_ptr<dvo::visualization::AsyncPointCloudBuilder::BuildJob> cloud_;$/;"	m	class:dvo::visualization::internal::PclCameraVisualizer	file:
cloud_aggregator_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  PointCloudAggregator cloud_aggregator_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
clouds_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  std::map<std::string, PclCameraVisualizer::Ptr> clouds_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
clouds_	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^  PointCloudMap clouds_;$/;"	m	class:dvo::visualization::internal::PointCloudAggregatorImpl	file:
clouds_mutex_	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^  boost::mutex clouds_mutex_;$/;"	m	class:dvo::visualization::internal::PointCloudAggregatorImpl	file:
cn_keyframe_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
cn_odometry_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
combine	dvo_core/src/core/least_squares.cpp	/^void dvo::core::NormalEquationsLeastSquares::combine(const dvo::core::NormalEquationsLeastSquares& other)$/;"	f	class:dvo::core::NormalEquationsLeastSquares
combine	dvo_slam/src/keyframe_graph.cpp	/^static inline int combine(const short& left, const short& right)$/;"	f	namespace:dvo_slam::internal
compute	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual float compute(const cv::Mat& errors) const { return 1.0f; };$/;"	f	class:dvo::core::UnitScaleEstimator
compute	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImagePyramid::compute(const size_t num_levels)$/;"	f	class:dvo::core::RgbdImagePyramid
compute	dvo_core/src/core/weight_calculation.cpp	/^float ApproximateTDistributionScaleEstimator::compute(const cv::Mat& errors) const$/;"	f	class:dvo::core::ApproximateTDistributionScaleEstimator
compute	dvo_core/src/core/weight_calculation.cpp	/^float MADScaleEstimator::compute(const cv::Mat& errors) const$/;"	f	class:dvo::core::MADScaleEstimator
compute	dvo_core/src/core/weight_calculation.cpp	/^float NormalDistributionScaleEstimator::compute(const cv::Mat& errors) const$/;"	f	class:dvo::core::NormalDistributionScaleEstimator
compute	dvo_core/src/core/weight_calculation.cpp	/^float OptimizedTDistributionScaleEstimator::compute(const cv::Mat& errors) const$/;"	f	class:dvo::core::OptimizedTDistributionScaleEstimator
compute	dvo_core/src/core/weight_calculation.cpp	/^float TDistributionScaleEstimator::compute(const cv::Mat& errors) const$/;"	f	class:dvo::core::TDistributionScaleEstimator
compute1DHistogram	dvo_core/src/util/histogram.cpp	/^void compute1DHistogram(const cv::Mat& data, cv::Mat& histogram, float min, float max, float binWidth)$/;"	f	namespace:dvo::util
compute3rdRowOfJacobianOfTransformation	dvo_core/src/dense_tracking.cpp	/^inline void DenseTracker::compute3rdRowOfJacobianOfTransformation(const Vector4& p, Vector6& j)$/;"	f	class:dvo::DenseTracker
computeCompleteDataLogLikelihood	dvo_core/src/dense_tracking_impl.cpp	/^float computeCompleteDataLogLikelihood(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const  Eigen::Vector2f& mean, const  Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeEntropyFromHistogram	dvo_core/src/util/histogram.cpp	/^float computeEntropyFromHistogram(const cv::Mat& histogram)$/;"	f	namespace:dvo::util
computeIntensityErrorImage	dvo_core/src/dense_tracking.cpp	/^cv::Mat DenseTracker::computeIntensityErrorImage(dvo::core::RgbdImagePyramid& reference, dvo::core::RgbdImagePyramid& current, const dvo::core::AffineTransformd& transformation, size_t level)$/;"	f	class:dvo::DenseTracker
computeIntensityErrorImage	dvo_slam/src/keyframe_graph.cpp	/^  cv::Mat computeIntensityErrorImage(int edge_id, bool use_measurement)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
computeIntensityErrorImage	dvo_slam/src/keyframe_graph.cpp	/^cv::Mat KeyframeGraph::computeIntensityErrorImage(int edge_id, bool use_measurement) const$/;"	f	class:dvo_slam::KeyframeGraph
computeJacobianOfProjectionAndTransformation	dvo_core/src/dense_tracking.cpp	/^inline void DenseTracker::computeJacobianOfProjectionAndTransformation(const Vector4& p, Matrix2x6& j)$/;"	f	class:dvo::DenseTracker
computeMean	dvo_core/src/dense_tracking_impl.cpp	/^Eigen::Vector2f computeMean(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight)$/;"	f	namespace:dvo::core
computeMeanScaleAndWeights	dvo_core/src/dense_tracking_impl.cpp	/^void computeMeanScaleAndWeights(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, Eigen::Vector2f& mean, Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeMeanSse	dvo_core/src/dense_tracking_impl.cpp	/^Eigen::Vector2f computeMeanSse(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight)$/;"	f	namespace:dvo::core
computeMedianFromHistogram	dvo_core/src/util/histogram.cpp	/^float computeMedianFromHistogram(const cv::Mat& histogram, float min, float max)$/;"	f	namespace:dvo::util
computeResiduals	dvo_core/src/dense_tracking_impl.cpp	/^void computeResiduals(const PointIterator& first_point, const PointIterator& last_point, const RgbdImage& current, const IntrinsicMatrix& intrinsics, const Eigen::Affine3f transform, const Vector8f& reference_weight, const Vector8f& current_weight, ComputeResidualsResult& result)$/;"	f	namespace:dvo::core
computeResidualsAndValidFlagsSse	dvo_core/src/dense_tracking_impl.cpp	/^void computeResidualsAndValidFlagsSse(const PointIterator& first_point, const PointIterator& last_point, const RgbdImage& current, const IntrinsicMatrix& intrinsics, const Eigen::Affine3f transform, const Vector8f& reference_weight, const Vector8f& current_weight, ComputeResidualsResult& result)$/;"	f	namespace:dvo::core
computeResidualsSse	dvo_core/src/dense_tracking_impl.cpp	/^void computeResidualsSse(const PointIterator& first_point, const PointIterator& last_point, const RgbdImage& current, const IntrinsicMatrix& intrinsics, const Eigen::Affine3f transform, const Vector8f& reference_weight, const Vector8f& current_weight, ComputeResidualsResult& result)$/;"	f	namespace:dvo::core
computeScale	dvo_core/src/dense_tracking_impl.cpp	/^Eigen::Matrix2f computeScale(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const Eigen::Vector2f& mean)$/;"	f	namespace:dvo::core
computeScalePart	dvo_core/src/dense_tracking_impl.cpp	/^static inline Eigen::Matrix2f computeScalePart(const float& weight, const Eigen::Vector2f& r, const Eigen::Vector2f& mean)$/;"	f	namespace:dvo::core
computeScaleSse	dvo_core/src/dense_tracking_impl.cpp	/^Eigen::Matrix2f computeScaleSse(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const Eigen::Vector2f& mean)$/;"	f	namespace:dvo::core
computeWeight	dvo_core/src/dense_tracking_impl.cpp	/^static inline float computeWeight(const Eigen::Vector2f& r, const Eigen::Vector2f& mean, const Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeWeightedError	dvo_core/src/dense_tracking_impl.cpp	/^float computeWeightedError(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const  Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeWeightedErrorPart	dvo_core/src/dense_tracking_impl.cpp	/^static inline float computeWeightedErrorPart(const float& weight, const Eigen::Vector2f& r, const Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeWeightedErrorSse	dvo_core/src/dense_tracking_impl.cpp	/^float computeWeightedErrorSse(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const  Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeWeights	dvo_core/src/dense_tracking_impl.cpp	/^void computeWeights(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const Eigen::Vector2f& mean, const Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
computeWeightsSse	dvo_core/src/dense_tracking_impl.cpp	/^void computeWeightsSse(const ResidualIterator& first_residual, const ResidualIterator& last_residual, const WeightIterator& first_weight, const Eigen::Vector2f& mean, const Eigen::Matrix2f& precision)$/;"	f	namespace:dvo::core
configuration	dvo_core/include/dvo/dense_tracking.h	/^  const Config& configuration() const$/;"	f	class:dvo::DenseTracker
configuration	dvo_slam/src/keyframe_graph.cpp	/^const dvo_slam::KeyframeGraphConfig& KeyframeGraph::configuration() const$/;"	f	class:dvo_slam::KeyframeGraph
configuration	dvo_slam/src/local_tracker.cpp	/^const dvo::DenseTracker::Config& LocalTracker::configuration() const$/;"	f	class:dvo_slam::LocalTracker
configure	dvo_benchmark/src/benchmark.cpp	/^bool BenchmarkNode::configure()$/;"	f	class:BenchmarkNode
configure	dvo_benchmark/src/benchmark_slam.cpp	/^bool BenchmarkNode::configure()$/;"	f	class:BenchmarkNode
configure	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual void configure(const float& param) {};$/;"	f	class:dvo::core::InfluenceFunction
configure	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual void configure(const float& param) {};$/;"	f	class:dvo::core::ScaleEstimator
configure	dvo_core/src/core/weight_calculation.cpp	/^void HuberInfluenceFunction::configure(const float& param)$/;"	f	class:dvo::core::HuberInfluenceFunction
configure	dvo_core/src/core/weight_calculation.cpp	/^void TDistributionInfluenceFunction::configure(const float& param)$/;"	f	class:dvo::core::TDistributionInfluenceFunction
configure	dvo_core/src/core/weight_calculation.cpp	/^void TDistributionScaleEstimator::configure(const float& param)$/;"	f	class:dvo::core::TDistributionScaleEstimator
configure	dvo_core/src/core/weight_calculation.cpp	/^void TukeyInfluenceFunction::configure(const float& param)$/;"	f	class:dvo::core::TukeyInfluenceFunction
configure	dvo_core/src/dense_tracking.cpp	/^void DenseTracker::configure(const Config& config)$/;"	f	class:dvo::DenseTracker
configure	dvo_slam/src/keyframe_graph.cpp	/^  void configure(const dvo_slam::KeyframeGraphConfig& cfg)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
configure	dvo_slam/src/keyframe_graph.cpp	/^void KeyframeGraph::configure(const KeyframeGraphConfig& config)$/;"	f	class:dvo_slam::KeyframeGraph
configure	dvo_slam/src/local_tracker.cpp	/^void LocalTracker::configure(const dvo::DenseTracker::Config& config)$/;"	f	class:dvo_slam::LocalTracker
configureKeyframeSelection	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::configureKeyframeSelection(const dvo_slam::KeyframeTrackerConfig& cfg)$/;"	f	class:dvo_slam::KeyframeTracker
configureMapping	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::configureMapping(const dvo_slam::KeyframeGraphConfig& cfg)$/;"	f	class:dvo_slam::KeyframeTracker
configureTracking	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::configureTracking(const dvo::DenseTracker::Config& cfg)$/;"	f	class:dvo_slam::KeyframeTracker
configureValidationTracking	dvo_slam/src/keyframe_graph.cpp	/^  void configureValidationTracking(const dvo::DenseTracker::Config& cfg)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
configureValidationTracking	dvo_slam/src/keyframe_graph.cpp	/^void KeyframeGraph::configureValidationTracking(const dvo::DenseTracker::Config& cfg)$/;"	f	class:dvo_slam::KeyframeGraph
connected	dvo_ros/include/dvo_ros/camera_base.h	/^  bool connected;$/;"	m	class:dvo_ros::CameraBase
connection	dvo_ros/include/dvo_ros/camera_base.h	/^  message_filters::Connection connection;$/;"	m	class:dvo_ros::CameraBase
constraint_search_	dvo_slam/src/keyframe_graph.cpp	/^  KeyframeConstraintSearchInterfacePtr constraint_search_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
constraint_tracker_cfg_	dvo_slam/src/keyframe_graph.cpp	/^  dvo::DenseTracker::Config validation_tracker_cfg_, constraint_tracker_cfg_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
constraint_tracking_results_	dvo_slam/src/keyframe_graph.cpp	/^  std::map<int, LocalTracker::TrackingResult> constraint_tracking_results_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
constraints	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^namespace constraints$/;"	n	namespace:dvo_slam
constraints	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^namespace constraints$/;"	n	namespace:dvo_slam
constraints	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^namespace constraints$/;"	n	namespace:dvo_slam
constraints	dvo_slam/src/constraints/constraint_proposal.cpp	/^namespace constraints$/;"	n	namespace:dvo_slam	file:
constraints	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^namespace constraints$/;"	n	namespace:dvo_slam	file:
constraints	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^namespace constraints$/;"	n	namespace:dvo_slam	file:
convertRawDepthImage	dvo_core/src/core/surface_pyramid.cpp	/^void SurfacePyramid::convertRawDepthImage(const cv::Mat& input, cv::Mat& output, float scale)$/;"	f	class:dvo::core::SurfacePyramid
convertRawDepthImageSse	dvo_core/src/core/surface_pyramid.cpp	/^void SurfacePyramid::convertRawDepthImageSse(const cv::Mat& input, cv::Mat& output, float scale)$/;"	f	class:dvo::core::SurfacePyramid
core	dvo_core/include/dvo/core/datatypes.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/interpolation.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/intrinsic_matrix.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/least_squares.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/math_sse.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/point_selection.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/point_selection_predicates.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/rgbd_image.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/surface_pyramid.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/core/weight_calculation.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/include/dvo/dense_tracking_impl.h	/^namespace core$/;"	n	namespace:dvo
core	dvo_core/src/core/interpolation.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/intrinsic_matrix.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/math_sse.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/point_selection.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/rgbd_image.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/rgbd_image_sse.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/surface_pyramid.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/core/weight_calculation.cpp	/^namespace core$/;"	n	namespace:dvo	file:
core	dvo_core/src/dense_tracking_impl.cpp	/^namespace core$/;"	n	namespace:dvo	file:
count	dvo_core/include/dvo/util/stopwatch.h	/^  int count;$/;"	m	struct:dvo::util::stopwatch
countElementsInHistogram	dvo_core/src/util/histogram.cpp	/^int countElementsInHistogram(const cv::Mat& histogram)$/;"	f	namespace:dvo::util
cpp_header	dvo_ros/cfg/dvo.cfg	/^cpp_header = os.path.realpath(os.path.join(os.path.dirname(me), "cpp", "dvo_ros", "CameraDenseTrackerConfig.h"))$/;"	v
cpp_header	dvo_slam/cfg/dvo_slam.cfg	/^cpp_header = os.path.realpath(os.path.join(os.path.dirname(me), "cpp", PACKAGE, "KeyframeSlamConfig.h"))$/;"	v
cpp_header	dvo_slam/cfg/graph_visualizer.cfg	/^cpp_header = os.path.realpath(os.path.join(os.path.dirname(me), "cpp", PACKAGE, "GraphVisualizerConfig.h"))$/;"	v
create	dvo_core/src/core/intrinsic_matrix.cpp	/^IntrinsicMatrix IntrinsicMatrix::create(float fx, float fy, float ox, float oy)$/;"	f	class:dvo::core::IntrinsicMatrix
create	dvo_core/src/core/rgbd_image.cpp	/^RgbdImagePtr RgbdCamera::create() const$/;"	f	class:dvo::core::RgbdCamera
create	dvo_core/src/core/rgbd_image.cpp	/^RgbdImagePtr RgbdCamera::create(const cv::Mat& intensity, const cv::Mat& depth) const$/;"	f	class:dvo::core::RgbdCamera
create	dvo_core/src/core/rgbd_image.cpp	/^RgbdImagePyramidPtr RgbdCameraPyramid::create(const cv::Mat& base_intensity, const cv::Mat& base_depth)$/;"	f	class:dvo::core::RgbdCameraPyramid
create	dvo_slam/src/local_map.cpp	/^LocalMap::Ptr LocalMap::create(const dvo::core::RgbdImagePyramid::Ptr& keyframe, const dvo::core::AffineTransformd& keyframe_pose)$/;"	f	class:dvo_slam::LocalMap
createAdditionalProposals	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  virtual void createAdditionalProposals(ConstraintProposalVector& proposals) {}$/;"	f	struct:dvo_slam::constraints::ConstraintProposalVoter
createAdditionalProposals	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^void CrossValidationVoter::createAdditionalProposals(ConstraintProposalVector& proposals)$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
createCameraMarker	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void createCameraMarker(visualization_msgs::InteractiveMarkerControl& parent)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
createConstraintProposalValidator	dvo_slam/src/keyframe_graph.cpp	/^  ConstraintProposalValidatorPtr createConstraintProposalValidator()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
createInteractiveCameraMarker	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void createInteractiveCameraMarker(visualization_msgs::InteractiveMarker& marker)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
createInverseProposal	dvo_slam/src/constraints/constraint_proposal.cpp	/^boost::shared_ptr<ConstraintProposal> ConstraintProposal::createInverseProposal() const$/;"	f	class:dvo_slam::constraints::ConstraintProposal
createReferenceCamera	dvo_benchmark/src/benchmark.cpp	/^void BenchmarkNode::createReferenceCamera(dvo::visualization::CameraTrajectoryVisualizerInterface* visualizer, const dvo::core::RgbdImage& img, const dvo::core::IntrinsicMatrix& intrinsics, const Eigen::Affine3d& pose)$/;"	f	class:BenchmarkNode
createReferenceCamera	dvo_benchmark/src/benchmark_slam.cpp	/^void BenchmarkNode::createReferenceCamera(dvo::visualization::CameraTrajectoryVisualizerInterface* visualizer, const dvo::core::RgbdImage& img, const Eigen::Affine3d& pose)$/;"	f	class:BenchmarkNode
createRobustKernel	dvo_slam/src/keyframe_graph.cpp	/^  g2o::RobustKernel* createRobustKernel()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
createStage	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::Stage& ConstraintProposalValidator::createStage(int id)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator
createTrajectoryMarker	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void createTrajectoryMarker(std::string& name, visualization_msgs::InteractiveMarker& marker)$/;"	f	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer	file:
createWithIdentity	dvo_slam/src/constraints/constraint_proposal.cpp	/^boost::shared_ptr<ConstraintProposal> ConstraintProposal::createWithIdentity(const KeyframePtr& reference, const KeyframePtr& current)$/;"	f	class:dvo_slam::constraints::ConstraintProposal
createWithRelative	dvo_slam/src/constraints/constraint_proposal.cpp	/^boost::shared_ptr<ConstraintProposal> ConstraintProposal::createWithRelative(const KeyframePtr& reference, const KeyframePtr& current)$/;"	f	class:dvo_slam::constraints::ConstraintProposal
current	dvo_core/include/dvo/core/least_squares.h	/^  int current;$/;"	m	class:dvo::core::SvdLeastSquares
current	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  dvo::core::RgbdImagePyramidPtr current, reference;$/;"	m	class:dvo_ros::CameraDenseTracker
current	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo::core::RgbdImagePyramidPtr current, reference;$/;"	m	class:dvo_slam::CameraKeyframeTracker
current_	dvo_slam/src/local_map.cpp	/^  dvo::core::RgbdImagePyramid::Ptr keyframe_, current_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
current_vertex_	dvo_slam/src/local_map.cpp	/^  g2o::VertexSE3 *keyframe_vertex_, *previous_vertex_, *current_vertex_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
data	dvo_core/include/dvo/core/intrinsic_matrix.h	/^  Eigen::Matrix3f data;$/;"	m	struct:dvo::core::IntrinsicMatrix
data	dvo_core/include/dvo/core/math_sse.h	/^  EIGEN_ALIGN16 float data[Size];$/;"	m	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
data	dvo_core/include/dvo/core/rgbd_image.h	/^    float data[4];$/;"	m	union:dvo::core::PointWithIntensityAndDepth::__anon1
data	dvo_core/include/dvo/core/rgbd_image.h	/^    float data[8];$/;"	m	union:dvo::core::PointWithIntensityAndDepth::__anon3
data	dvo_core/src/core/weight_calculation.cpp	/^  const float *data, initial_lambda, dof;$/;"	m	struct:dvo::core::TDistributionScaleReduction	file:
de_keyframe_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
de_odometry_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
debug	dvo_core/include/dvo/core/point_selection.h	/^  bool debug() const$/;"	f	class:dvo::core::PointSelection
debug	dvo_core/include/dvo/core/point_selection.h	/^  void debug(bool v)$/;"	f	class:dvo::core::PointSelection
debugLoopClosureConstraint	dvo_slam/src/keyframe_graph.cpp	/^  void debugLoopClosureConstraint(int keyframe1, int keyframe2)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
debugLoopClosureConstraint	dvo_slam/src/keyframe_graph.cpp	/^void KeyframeGraph::debugLoopClosureConstraint(int keyframe1, int keyframe2) const$/;"	f	class:dvo_slam::KeyframeGraph
debug_	dvo_core/include/dvo/core/point_selection.h	/^  bool debug_;$/;"	m	class:dvo::core::PointSelection
debug_idx	dvo_core/include/dvo/core/point_selection.h	/^    cv::Mat debug_idx;$/;"	m	struct:dvo::core::PointSelection::Storage
delegate_	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  DelegateType delegate_;$/;"	m	class:dvo_slam::serialization::FileSerializer
depth	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat depth;$/;"	m	class:dvo::core::RgbdImage
depthStdDevZ	dvo_core/src/dense_tracking_impl.cpp	/^static inline float depthStdDevZ(float depth)$/;"	f	namespace:dvo::core
depth_camera_info_subscriber_	dvo_ros/include/dvo_ros/camera_base.h	/^  message_filters::Subscriber<sensor_msgs::CameraInfo> depth_camera_info_subscriber_;$/;"	m	class:dvo_ros::CameraBase
depth_dx	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat depth_dx;$/;"	m	class:dvo::core::RgbdImage
depth_dy	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat depth_dy;$/;"	m	class:dvo::core::RgbdImage
depth_image_subscriber_	dvo_ros/include/dvo_ros/camera_base.h	/^  message_filters::Subscriber<sensor_msgs::Image> depth_image_subscriber_;$/;"	m	class:dvo_ros::CameraBase
depth_requires_calculation_	dvo_core/include/dvo/core/rgbd_image.h	/^  bool intensity_requires_calculation_, depth_requires_calculation_, pointcloud_requires_build_;$/;"	m	class:dvo::core::RgbdImage
depth_threshold	dvo_core/include/dvo/core/point_selection.h	/^  float depth_threshold;$/;"	m	class:dvo::core::ValidPointAndGradientThresholdPredicate
do_optimized_reduction	dvo_core/src/sse_test.cpp	/^void do_optimized_reduction(const JacobianWorkspace& j, const Eigen::Matrix<float, Dimension, Dimension>& alpha, Hessian& A)$/;"	f
do_reduction	dvo_core/src/sse_test.cpp	/^void do_reduction(const JacobianWorkspace& j, const Eigen::Matrix<float, Dimension, Dimension>& alpha, Hessian& A)$/;"	f
dof	dvo_core/include/dvo/core/weight_calculation.h	/^  float dof;$/;"	m	class:dvo::core::TDistributionInfluenceFunction
dof	dvo_core/include/dvo/core/weight_calculation.h	/^  float dof;$/;"	m	class:dvo::core::TDistributionScaleEstimator
dof	dvo_core/src/core/weight_calculation.cpp	/^  const float *data, initial_lambda, dof;$/;"	m	struct:dvo::core::TDistributionScaleReduction	file:
done	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^void AsyncPointCloudBuilder::done(DoneCallback& callback)$/;"	f	class:dvo::visualization::AsyncPointCloudBuilder
done_	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^  DoneCallback done_;$/;"	m	class:dvo::visualization::AsyncPointCloudBuilder
dump	dvo_core/src/core/math_sse.cpp	/^static inline void dump(const char* prefix, __m128 v)$/;"	f	namespace:dvo::core
dump	dvo_core/src/core/rgbd_image_sse.cpp	/^static inline void dump(const char* prefix, __m128 v)$/;"	f	namespace:dvo::core
dump_camera_pose_	dvo_benchmark/src/benchmark.cpp	/^  dvo::visualization::Switch dump_camera_pose_, load_camera_pose_;$/;"	m	class:BenchmarkNode	file:
dump_camera_pose_	dvo_benchmark/src/benchmark_slam.cpp	/^  dvo::visualization::Switch dump_camera_pose_, load_camera_pose_;$/;"	m	class:BenchmarkNode	file:
dvo	dvo_core/include/dvo/core/datatypes.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/interpolation.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/intrinsic_matrix.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/least_squares.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/math_sse.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/point_selection.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/point_selection_predicates.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/rgbd_image.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/surface_pyramid.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/core/weight_calculation.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/dense_tracking.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/dense_tracking_impl.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/util/histogram.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/util/id_generator.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/util/revertable.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/util/stopwatch.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^namespace dvo$/;"	n
dvo	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	/^namespace dvo$/;"	n
dvo	dvo_core/src/core/interpolation.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/intrinsic_matrix.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/math_sse.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/point_selection.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/rgbd_image.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/rgbd_image_sse.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/surface_pyramid.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/core/weight_calculation.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/dense_tracking.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/dense_tracking_config.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/dense_tracking_impl.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/util/histogram.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/util/id_generator.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^namespace dvo$/;"	n	file:
dvo	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^namespace dvo$/;"	n	file:
dvo_benchmark	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^namespace dvo_benchmark$/;"	n
dvo_benchmark	dvo_benchmark/include/dvo_benchmark/groundtruth.h	/^namespace dvo_benchmark$/;"	n
dvo_benchmark	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	/^namespace dvo_benchmark$/;"	n
dvo_benchmark	dvo_benchmark/include/dvo_benchmark/tools.h	/^namespace dvo_benchmark$/;"	n
dvo_ros	dvo_ros/include/dvo_ros/camera_base.h	/^namespace dvo_ros$/;"	n
dvo_ros	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^namespace dvo_ros$/;"	n
dvo_ros	dvo_ros/include/dvo_ros/camera_tracker_nodelet.h	/^namespace dvo_ros$/;"	n
dvo_ros	dvo_ros/include/dvo_ros/util/configtools.h	/^namespace dvo_ros$/;"	n
dvo_ros	dvo_ros/include/dvo_ros/util/util.h	/^namespace dvo_ros { namespace util {$/;"	n
dvo_ros	dvo_ros/include/dvo_ros/visualization/ros_camera_trajectory_visualizer.h	/^namespace dvo_ros$/;"	n
dvo_ros	dvo_ros/src/camera_base.cpp	/^namespace dvo_ros$/;"	n	file:
dvo_ros	dvo_ros/src/camera_dense_tracking.cpp	/^namespace dvo_ros$/;"	n	file:
dvo_ros	dvo_ros/src/camera_tracker_nodelet.cpp	/^namespace dvo_ros$/;"	n	file:
dvo_ros	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^namespace dvo_ros$/;"	n	file:
dvo_slam	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/config.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/constraints/constraint_proposal.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/keyframe.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/keyframe_graph.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/keyframe_tracker.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/local_map.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/local_tracker.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/serialization/map_serializer_interface.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/timestamped.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/include/dvo_slam/visualization/graph_visualizer.h	/^namespace dvo_slam$/;"	n
dvo_slam	dvo_slam/src/camera_keyframe_tracking.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/config.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/constraints/constraint_proposal.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/keyframe.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/keyframe_constraint_search.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/keyframe_graph.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/keyframe_tracker.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/local_map.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/local_tracker.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/serialization/map_serializer.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/serialization/map_serializer_interface.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/tracking_result_evaluation.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/types.cpp	/^namespace dvo_slam$/;"	n	file:
dvo_slam	dvo_slam/src/visualization/graph_visualizer.cpp	/^namespace dvo_slam$/;"	n	file:
edge_id_prefix_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  std::string edge_id_prefix_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
editable_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  bool editable_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
editable_edges_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  std::set<std::string> editable_edges_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
entry_	dvo_benchmark/src/experiment.cpp	/^  const dvo_benchmark::RgbdPair& entry_;$/;"	m	struct:FindNearestPosePredicate	file:
enum_t	dvo_core/include/dvo/core/weight_calculation.h	/^  } enum_t;$/;"	t	struct:dvo::core::InfluenceFunctions	typeref:enum:dvo::core::InfluenceFunctions::__anon8
enum_t	dvo_core/include/dvo/core/weight_calculation.h	/^  } enum_t;$/;"	t	struct:dvo::core::ScaleEstimators	typeref:enum:dvo::core::ScaleEstimators::__anon7
error	dvo_core/include/dvo/core/least_squares.h	/^  double error;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
error	dvo_core/include/dvo/core/least_squares.h	/^  double error;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
evaluation	dvo_slam/src/keyframe_tracker.cpp	/^  dvo_slam::TrackingResultEvaluation::Ptr evaluation;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
evaluation_	dvo_slam/src/local_map.cpp	/^  dvo_slam::TrackingResultEvaluation::ConstPtr evaluation_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
execOptimization	dvo_slam/src/keyframe_graph.cpp	/^  void execOptimization()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
execVisualizerThread	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void execVisualizerThread()$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
execute	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^  virtual tbb::task* execute()$/;"	f	class:dvo::visualization::BuildPointCloudTask
file_	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  std::string file_;$/;"	m	class:dvo_benchmark::FileReader
file_stream_	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  std::ifstream file_stream_;$/;"	m	class:dvo_benchmark::FileReader
finalOptimization	dvo_slam/src/keyframe_graph.cpp	/^  void finalOptimization()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
finalOptimization	dvo_slam/src/keyframe_graph.cpp	/^void KeyframeGraph::finalOptimization()$/;"	f	class:dvo_slam::KeyframeGraph
findClosestEntries	dvo_benchmark/include/dvo_benchmark/tools.h	/^static bool findClosestEntries(FileReader<EntryT>& reader, const ros::Time& reference, EntryT& before, EntryT& after)$/;"	f	namespace:dvo_benchmark
findClosestEntry	dvo_benchmark/include/dvo_benchmark/tools.h	/^static bool findClosestEntry(FileReader<EntryT>& reader, const ros::Time& reference)$/;"	f	namespace:dvo_benchmark
findInverse	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintProposal* CrossValidationVoter::findInverse(const ConstraintProposal *proposal)$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
findNextVertex	dvo_slam/src/keyframe_graph.cpp	/^  g2o::OptimizableGraph::Vertex* findNextVertex(g2o::OptimizableGraph::Vertex *v)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
findPossibleConstraints	dvo_slam/src/keyframe_constraint_search.cpp	/^void NearestNeighborConstraintSearch::findPossibleConstraints(const KeyframeVector& all, const KeyframePtr& keyframe, KeyframeVector& candidates)$/;"	f	class:dvo_slam::NearestNeighborConstraintSearch
finish	dvo_core/src/core/least_squares.cpp	/^void dvo::core::NormalEquationsLeastSquares::finish()$/;"	f	class:dvo::core::NormalEquationsLeastSquares
finish	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::finish()$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
finish	dvo_core/src/core/least_squares.cpp	/^void dvo::core::SvdLeastSquares::finish()$/;"	f	class:dvo::core::SvdLeastSquares
finish	dvo_slam/src/keyframe_tracker.cpp	/^  void finish()$/;"	f	class:dvo_slam::KeyframeTracker::Impl
finish	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::finish()$/;"	f	class:dvo_slam::KeyframeTracker
first	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^    pcl::PointXYZ *first;$/;"	m	class:dvo::visualization::internal::PclTrajectoryVisualizer::PointPair	file:
first_	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  double first_, average_, n_;$/;"	m	class:dvo_slam::TrackingResultEvaluation
first_point_error	dvo_core/include/dvo/dense_tracking_impl.h	/^  PointIterator first_point_error;$/;"	m	struct:dvo::core::ComputeResidualsResult
first_residual	dvo_core/include/dvo/dense_tracking_impl.h	/^  ResidualIterator first_residual;$/;"	m	struct:dvo::core::ComputeResidualsResult
first_valid_flag	dvo_core/include/dvo/dense_tracking_impl.h	/^  ValidFlagIterator first_valid_flag;$/;"	m	struct:dvo::core::ComputeResidualsResult
forceCompleteCurrentLocalMap	dvo_slam/src/local_tracker.cpp	/^void LocalTracker::forceCompleteCurrentLocalMap()$/;"	f	class:dvo_slam::LocalTracker
forceKeyframe	dvo_slam/src/keyframe_tracker.cpp	/^  void forceKeyframe()$/;"	f	class:dvo_slam::KeyframeTracker::Impl
forceKeyframe	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::forceKeyframe()$/;"	f	class:dvo_slam::KeyframeTracker
force_	dvo_slam/src/local_tracker.cpp	/^  bool force_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
frames_since_last_success	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  size_t frames_since_last_success;$/;"	m	class:dvo_ros::CameraDenseTracker
from_baselink_to_asus	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  Eigen::Affine3d accumulated_transform, from_baselink_to_asus, latest_absolute_transform_;$/;"	m	class:dvo_ros::CameraDenseTracker
fstream_	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  std::ofstream fstream_;$/;"	m	class:dvo_slam::serialization::FileSerializer
fx	dvo_core/src/core/intrinsic_matrix.cpp	/^float IntrinsicMatrix::fx() const$/;"	f	class:dvo::core::IntrinsicMatrix
fy	dvo_core/src/core/intrinsic_matrix.cpp	/^float IntrinsicMatrix::fy() const$/;"	f	class:dvo::core::IntrinsicMatrix
g	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  double r, g, b;$/;"	m	struct:dvo::visualization::Color
gen	dvo_ros/cfg/dvo.cfg	/^gen = ParameterGenerator()$/;"	v
gen	dvo_slam/cfg/dvo_slam.cfg	/^gen = ParameterGenerator()$/;"	v
gen	dvo_slam/cfg/graph_visualizer.cfg	/^gen = ParameterGenerator()$/;"	v
generated_	dvo_core/include/dvo/util/id_generator.h	/^  std::vector<std::string> generated_;$/;"	m	class:dvo::util::IdGenerator
get	dvo_core/src/core/weight_calculation.cpp	/^InfluenceFunction* InfluenceFunctions::get(InfluenceFunctions::enum_t type)$/;"	f	class:dvo::core::InfluenceFunctions
get	dvo_core/src/core/weight_calculation.cpp	/^ScaleEstimator* ScaleEstimators::get(ScaleEstimators::enum_t type)$/;"	f	class:dvo::core::ScaleEstimators
getCurrentFrame	dvo_slam/src/local_map.cpp	/^dvo::core::RgbdImagePyramid::Ptr LocalMap::getCurrentFrame()$/;"	f	class:dvo_slam::LocalMap
getCurrentFramePose	dvo_slam/src/local_map.cpp	/^dvo::core::AffineTransformd LocalMap::getCurrentFramePose()$/;"	f	class:dvo_slam::LocalMap
getCurrentFramePose	dvo_slam/src/local_map.cpp	/^void LocalMap::getCurrentFramePose(dvo::core::AffineTransformd& current_pose)$/;"	f	class:dvo_slam::LocalMap
getCurrentPose	dvo_slam/src/local_tracker.cpp	/^void LocalTracker::getCurrentPose(dvo::core::AffineTransformd& pose)$/;"	f	class:dvo_slam::LocalTracker
getDebugIndex	dvo_core/src/core/point_selection.cpp	/^bool PointSelection::getDebugIndex(const size_t& level, cv::Mat& dbg_idx)$/;"	f	class:dvo::core::PointSelection
getDefaultConfig	dvo_core/src/dense_tracking.cpp	/^const DenseTracker::Config& DenseTracker::getDefaultConfig()$/;"	f	class:dvo::DenseTracker
getDepthDerivativeVec2f	dvo_core/include/dvo/core/rgbd_image.h	/^  Eigen::Vector2f::MapType getDepthDerivativeVec2f()$/;"	f	struct:dvo::core::PointWithIntensityAndDepth
getEvaluation	dvo_slam/src/local_map.cpp	/^dvo_slam::TrackingResultEvaluation::ConstPtr LocalMap::getEvaluation()$/;"	f	class:dvo_slam::LocalMap
getGraph	dvo_slam/src/local_map.cpp	/^g2o::SparseOptimizer& LocalMap::getGraph()$/;"	f	class:dvo_slam::LocalMap
getIntensityAndDepthVec2f	dvo_core/include/dvo/core/rgbd_image.h	/^  Eigen::Vector2f::AlignedMapType getIntensityAndDepthVec2f()$/;"	f	struct:dvo::core::PointWithIntensityAndDepth
getIntensityAndDepthWithDerivativesVec8f	dvo_core/include/dvo/core/rgbd_image.h	/^  Vector8f::AlignedMapType getIntensityAndDepthWithDerivativesVec8f()$/;"	f	struct:dvo::core::PointWithIntensityAndDepth
getIntensityDerivativeVec2f	dvo_core/include/dvo/core/rgbd_image.h	/^  Eigen::Vector2f::MapType getIntensityDerivativeVec2f()$/;"	f	struct:dvo::core::PointWithIntensityAndDepth
getKeyframe	dvo_slam/src/local_map.cpp	/^dvo::core::RgbdImagePyramid::Ptr LocalMap::getKeyframe()$/;"	f	class:dvo_slam::LocalMap
getLocalMap	dvo_slam/src/local_tracker.cpp	/^dvo_slam::LocalMap::Ptr LocalTracker::getLocalMap() const$/;"	f	class:dvo_slam::LocalTracker
getMaximumNumberOfPoints	dvo_core/src/core/point_selection.cpp	/^size_t PointSelection::getMaximumNumberOfPoints(const size_t& level)$/;"	f	class:dvo::core::PointSelection
getNumLevels	dvo_core/src/dense_tracking_config.cpp	/^size_t DenseTracker::Config::getNumLevels() const$/;"	f	class:dvo::DenseTracker::Config
getNumberOfBins	dvo_core/src/util/histogram.cpp	/^int getNumberOfBins(float min, float max, float binWidth)$/;"	f	namespace:dvo::util
getPointVec4f	dvo_core/include/dvo/core/rgbd_image.h	/^  Eigen::Vector4f::AlignedMapType getPointVec4f()$/;"	f	struct:dvo::core::PointWithIntensityAndDepth
getRgbdImagePyramid	dvo_core/src/core/point_selection.cpp	/^dvo::core::RgbdImagePyramid& PointSelection::getRgbdImagePyramid()$/;"	f	class:dvo::core::PointSelection
graph	dvo_slam/src/keyframe_graph.cpp	/^const g2o::SparseOptimizer& KeyframeGraph::graph() const$/;"	f	class:dvo_slam::KeyframeGraph
graph_	dvo_slam/src/keyframe_tracker.cpp	/^  KeyframeGraph graph_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
graph_	dvo_slam/src/local_map.cpp	/^  g2o::SparseOptimizer graph_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
graph_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  dvo_slam::KeyframeGraph* graph_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
graph_cfg	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo_slam::KeyframeGraphConfig graph_cfg;$/;"	m	class:dvo_slam::CameraKeyframeTracker
graph_publisher	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  ros::Publisher pose_publisher, graph_publisher;$/;"	m	class:dvo_slam::CameraKeyframeTracker
graph_vis_	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo_slam::visualization::GraphVisualizer* graph_vis_;$/;"	m	class:dvo_slam::CameraKeyframeTracker
green	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  static const Color& green()$/;"	f	struct:dvo::visualization::Color
groundtruth_reader_	dvo_benchmark/src/benchmark.cpp	/^  dvo_benchmark::FileReader<dvo_benchmark::Groundtruth> *groundtruth_reader_;$/;"	m	class:BenchmarkNode	file:
groundtruth_reader_	dvo_benchmark/src/benchmark_slam.cpp	/^  dvo_benchmark::FileReader<dvo_benchmark::Groundtruth> *groundtruth_reader_;$/;"	m	class:BenchmarkNode	file:
handleConfig	dvo_ros/src/camera_dense_tracking.cpp	/^void CameraDenseTracker::handleConfig(dvo_ros::CameraDenseTrackerConfig& config, uint32_t level)$/;"	f	class:dvo_ros::CameraDenseTracker
handleImages	dvo_ros/src/camera_dense_tracking.cpp	/^void CameraDenseTracker::handleImages($/;"	f	class:dvo_ros::CameraDenseTracker
handleImages	dvo_slam/src/camera_keyframe_tracking.cpp	/^void CameraKeyframeTracker::handleImages($/;"	f	class:dvo_slam::CameraKeyframeTracker
handlePose	dvo_ros/src/camera_dense_tracking.cpp	/^void CameraDenseTracker::handlePose(const geometry_msgs::PoseWithCovarianceStampedConstPtr& pose)$/;"	f	class:dvo_ros::CameraDenseTracker
handleSlamConfig	dvo_slam/src/camera_keyframe_tracking.cpp	/^void CameraKeyframeTracker::handleSlamConfig(dvo_slam::KeyframeSlamConfig& config, uint32_t level)$/;"	f	class:dvo_slam::CameraKeyframeTracker
handleTrackerConfig	dvo_slam/src/camera_keyframe_tracking.cpp	/^void CameraKeyframeTracker::handleTrackerConfig(dvo_ros::CameraDenseTrackerConfig& config, uint32_t level)$/;"	f	class:dvo_slam::CameraKeyframeTracker
hasChanged	dvo_ros/src/camera_dense_tracking.cpp	/^bool CameraDenseTracker::hasChanged(const sensor_msgs::CameraInfo::ConstPtr& camera_info_msg)$/;"	f	class:dvo_ros::CameraDenseTracker
hasChanged	dvo_slam/src/camera_keyframe_tracking.cpp	/^bool CameraKeyframeTracker::hasChanged(const sensor_msgs::CameraInfo::ConstPtr& camera_info_msg)$/;"	f	class:dvo_slam::CameraKeyframeTracker
hasColorChanged	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  bool hasColorChanged(const visualization_msgs::InteractiveMarker& m)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
hasDepth	dvo_core/src/core/rgbd_image.cpp	/^bool RgbdImage::hasDepth() const$/;"	f	class:dvo::core::RgbdImage
hasEdge	dvo_slam/src/keyframe_graph.cpp	/^  bool hasEdge(g2o::OptimizableGraph::Vertex const*v, int edge_id)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
hasIntensity	dvo_core/src/core/rgbd_image.cpp	/^bool RgbdImage::hasIntensity() const$/;"	f	class:dvo::core::RgbdImage
hasRgb	dvo_core/src/core/rgbd_image.cpp	/^bool RgbdImage::hasRgb() const$/;"	f	class:dvo::core::RgbdImage
hasSameSize	dvo_core/src/core/rgbd_image.cpp	/^bool RgbdCamera::hasSameSize(const cv::Mat& img) const$/;"	f	class:dvo::core::RgbdCamera
height	dvo_core/include/dvo/core/rgbd_image.h	/^  size_t width, height;$/;"	m	class:dvo::core::RgbdImage
height	dvo_core/src/core/rgbd_image.cpp	/^size_t RgbdCamera::height() const$/;"	f	class:dvo::core::RgbdCamera
height	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  uint32_t height;$/;"	m	class:dvo_ros::CameraDenseTracker
height	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  uint32_t height;$/;"	m	class:dvo_slam::CameraKeyframeTracker
height_	dvo_core/include/dvo/core/rgbd_image.h	/^  size_t width_, height_;$/;"	m	class:dvo::core::RgbdCamera
hessian_	dvo_core/include/dvo/core/least_squares.h	/^  Matrix6x6 hessian_;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
hessian_error_	dvo_core/include/dvo/core/least_squares.h	/^  Matrix6x6 hessian_error_;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
hide	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  virtual void hide() {};$/;"	f	class:dvo::visualization::NoopCameraVisualizer
hide	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  virtual void hide()$/;"	f	class:dvo::visualization::internal::PclCameraVisualizer
hide	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual void hide()$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer
i	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
id1	dvo_slam/src/keyframe_graph.cpp	/^    int id1, id2;$/;"	m	struct:dvo_slam::internal::KeyframeGraphImpl::FindEdge	file:
id2	dvo_slam/src/keyframe_graph.cpp	/^    int id1, id2;$/;"	m	struct:dvo_slam::internal::KeyframeGraphImpl::FindEdge	file:
id_	dvo_slam/src/keyframe_graph.cpp	/^  int id_;$/;"	m	struct:dvo_slam::internal::FindEdgeById	file:
id_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  int id_;$/;"	m	struct:dvo_slam::visualization::internal::FindEdgeById	file:
idx	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
idy	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
ignoreConstraint	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::ignoreConstraint(const size_t& idx)$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
image	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^    dvo::core::RgbdImage image;$/;"	m	struct:dvo::visualization::AsyncPointCloudBuilder::BuildJob
image_topic_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  image_transport::Publisher image_topic_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
image_topic_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  image_transport::Publisher& image_topic_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
image_topic_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  image_transport::Publisher image_topic_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
impl_	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  internal::PclCameraTrajectoryVisualizerImpl* impl_;$/;"	m	class:dvo::visualization::PclCameraTrajectoryVisualizer
impl_	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	/^  boost::scoped_ptr<internal::PointCloudAggregatorImpl> impl_;$/;"	m	class:dvo::visualization::PointCloudAggregator
impl_	dvo_ros/include/dvo_ros/visualization/ros_camera_trajectory_visualizer.h	/^  internal::RosCameraTrajectoryVisualizerImpl* impl_;$/;"	m	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
impl_	dvo_slam/include/dvo_slam/keyframe_graph.h	/^  internal::KeyframeGraphImplPtr impl_;$/;"	m	class:dvo_slam::KeyframeGraph
impl_	dvo_slam/include/dvo_slam/keyframe_tracker.h	/^  boost::shared_ptr<Impl> impl_;$/;"	m	class:dvo_slam::KeyframeTracker
impl_	dvo_slam/include/dvo_slam/local_map.h	/^  boost::scoped_ptr<internal::LocalMapImpl> impl_;$/;"	m	class:dvo_slam::LocalMap
impl_	dvo_slam/include/dvo_slam/local_tracker.h	/^  boost::scoped_ptr<internal::LocalTrackerImpl> impl_;$/;"	m	class:dvo_slam::LocalTracker
impl_	dvo_slam/include/dvo_slam/visualization/graph_visualizer.h	/^  boost::scoped_ptr<internal::GraphVisualizerImpl> impl_;$/;"	m	class:dvo_slam::visualization::GraphVisualizer
inImage	dvo_core/src/core/rgbd_image.cpp	/^bool RgbdImage::inImage(const float& x, const float& y) const$/;"	f	class:dvo::core::RgbdImage
influence_function_enum	dvo_ros/cfg/dvo.cfg	/^influence_function_enum = gen.enum([ $/;"	v
init	dvo_slam/src/keyframe_tracker.cpp	/^  void init(const Eigen::Affine3d& initial_transformation)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
init	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::init()$/;"	f	class:dvo_slam::KeyframeTracker
init	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::init(const Eigen::Affine3d& initial_transformation)$/;"	f	class:dvo_slam::KeyframeTracker
initNewLocalMap	dvo_slam/src/local_tracker.cpp	/^void LocalTracker::initNewLocalMap(const dvo::core::RgbdImagePyramid::Ptr& keyframe, const dvo::core::RgbdImagePyramid::Ptr& frame, TrackingResult& r_odometry, const dvo::core::AffineTransformd& keyframe_pose)$/;"	f	class:dvo_slam::LocalTracker
initNewLocalMap	dvo_slam/src/local_tracker.cpp	/^void LocalTracker::initNewLocalMap(const dvo::core::RgbdImagePyramid::Ptr& keyframe, const dvo::core::RgbdImagePyramid::Ptr& frame, const dvo::core::AffineTransformd& keyframe_pose)$/;"	f	class:dvo_slam::LocalTracker
initVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void initVisualizer()$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
initial_lambda	dvo_core/src/core/weight_calculation.cpp	/^  const float *data, initial_lambda, dof;$/;"	m	struct:dvo::core::TDistributionScaleReduction	file:
initial_sigma	dvo_core/include/dvo/core/weight_calculation.h	/^  float initial_sigma;$/;"	m	class:dvo::core::TDistributionScaleEstimator
initial_transformation_	dvo_slam/src/keyframe_tracker.cpp	/^  Eigen::Affine3d initial_transformation_, relative_transformation_, last_absolute_transformation_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
initialize	dvo_core/src/core/least_squares.cpp	/^void dvo::core::NormalEquationsLeastSquares::initialize(const size_t maxnum_constraints)$/;"	f	class:dvo::core::NormalEquationsLeastSquares
initialize	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::initialize(const size_t maxnum_constraints)$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
initialize	dvo_core/src/core/least_squares.cpp	/^void dvo::core::SvdLeastSquares::initialize(const size_t maxnum_constraints)$/;"	f	class:dvo::core::SvdLeastSquares
initialize	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::initialize()$/;"	f	class:dvo::core::RgbdImage
insertConstraint	dvo_slam/src/keyframe_graph.cpp	/^  void insertConstraint(const KeyframePtr& keyframe, const KeyframePtr& constraint, const LocalTracker::TrackingResult& result)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
insertNewKeyframe	dvo_slam/src/keyframe_graph.cpp	/^  KeyframePtr insertNewKeyframe(const LocalMap::Ptr& m)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
insertNewKeyframeConstraints	dvo_slam/src/keyframe_graph.cpp	/^  int insertNewKeyframeConstraints(const ConstraintProposalVector& proposals)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
intensity	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat intensity;$/;"	m	class:dvo::core::RgbdImage
intensity_and_depth	dvo_core/include/dvo/core/rgbd_image.h	/^  IntensityAndDepth intensity_and_depth;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth
intensity_dx	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat intensity_dx;$/;"	m	class:dvo::core::RgbdImage
intensity_dy	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat intensity_dy;$/;"	m	class:dvo::core::RgbdImage
intensity_requires_calculation_	dvo_core/include/dvo/core/rgbd_image.h	/^  bool intensity_requires_calculation_, depth_requires_calculation_, pointcloud_requires_build_;$/;"	m	class:dvo::core::RgbdImage
intensity_threshold	dvo_core/include/dvo/core/point_selection.h	/^  float intensity_threshold;$/;"	m	class:dvo::core::ValidPointAndGradientThresholdPredicate
internal	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^namespace internal$/;"	n	namespace:dvo::visualization
internal	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	/^namespace internal$/;"	n	namespace:dvo::visualization
internal	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^namespace internal$/;"	n	namespace:dvo::visualization	file:
internal	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^namespace internal$/;"	n	namespace:dvo::visualization	file:
internal	dvo_ros/include/dvo_ros/visualization/ros_camera_trajectory_visualizer.h	/^namespace internal$/;"	n	namespace:dvo_ros::visualization
internal	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^namespace internal$/;"	n	namespace:dvo_ros::visualization	file:
internal	dvo_slam/include/dvo_slam/keyframe_graph.h	/^namespace internal$/;"	n	namespace:dvo_slam
internal	dvo_slam/include/dvo_slam/local_map.h	/^namespace internal$/;"	n	namespace:dvo_slam
internal	dvo_slam/include/dvo_slam/local_tracker.h	/^namespace internal$/;"	n	namespace:dvo_slam
internal	dvo_slam/include/dvo_slam/visualization/graph_visualizer.h	/^namespace internal$/;"	n	namespace:dvo_slam::visualization
internal	dvo_slam/src/keyframe_graph.cpp	/^namespace internal$/;"	n	namespace:dvo_slam	file:
internal	dvo_slam/src/local_map.cpp	/^namespace internal$/;"	n	namespace:dvo_slam	file:
internal	dvo_slam/src/local_tracker.cpp	/^namespace internal$/;"	n	namespace:dvo_slam	file:
internal	dvo_slam/src/visualization/graph_visualizer.cpp	/^namespace internal$/;"	n	namespace:dvo_slam::visualization	file:
interpolateBilinearWithDepthBufferSse	dvo_core/src/core/rgbd_image_sse.cpp	/^static inline __m128 interpolateBilinearWithDepthBufferSse(const cv::Mat& intensity, const cv::Mat& depth, const __m128& xyxy_proj, const __m128& zzzz, const __m128& img_upper_bound)$/;"	f	namespace:dvo::core
interval	dvo_core/include/dvo/util/stopwatch.h	/^  int interval;$/;"	m	struct:dvo::util::stopwatch
intrinsics	dvo_core/src/core/rgbd_image.cpp	/^const dvo::core::IntrinsicMatrix& RgbdCamera::intrinsics() const$/;"	f	class:dvo::core::RgbdCamera
intrinsics	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo::core::IntrinsicMatrix intrinsics;$/;"	m	class:dvo_slam::CameraKeyframeTracker
intrinsics_	dvo_core/include/dvo/core/rgbd_image.h	/^  dvo::core::IntrinsicMatrix intrinsics_;$/;"	m	class:dvo::core::RgbdCamera
invertOffset	dvo_core/src/core/intrinsic_matrix.cpp	/^void IntrinsicMatrix::invertOffset()$/;"	f	class:dvo::core::IntrinsicMatrix
isConstraintBetweenSameFrames	dvo_slam/src/constraints/constraint_proposal.cpp	/^bool ConstraintProposal::isConstraintBetweenSameFrames(const ConstraintProposal& other)$/;"	f	class:dvo_slam::constraints::ConstraintProposal
isNaN	dvo_core/src/dense_tracking_config.cpp	/^bool DenseTracker::Result::isNaN() const$/;"	f	class:dvo::DenseTracker::Result
isOdometryConstraint	dvo_slam/src/keyframe_graph.cpp	/^  bool isOdometryConstraint(g2o::EdgeSE3* e)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
isPointOk	dvo_core/include/dvo/core/point_selection.h	/^  virtual bool isPointOk(const size_t& x, const size_t& y, const float& z, const float& idx, const float& idy, const float& zdx, const float& zdy) const$/;"	f	class:dvo::core::ValidPointAndGradientThresholdPredicate
isPointOk	dvo_core/include/dvo/core/point_selection.h	/^  virtual bool isPointOk(const size_t& x, const size_t& y, const float& z, const float& idx, const float& idy, const float& zdx, const float& zdy) const$/;"	f	class:dvo::core::ValidPointPredicate
isSynchronizedImageStreamRunning	dvo_ros/src/camera_base.cpp	/^bool CameraBase::isSynchronizedImageStreamRunning()$/;"	f	class:dvo_ros::CameraBase
is_cached	dvo_core/include/dvo/core/point_selection.h	/^    bool is_cached;$/;"	m	struct:dvo::core::PointSelection::Storage
it_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  image_transport::ImageTransport it_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
it_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  image_transport::ImageTransport it_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
itctx_	dvo_core/include/dvo/dense_tracking.h	/^  IterationContext itctx_;$/;"	m	class:dvo::DenseTracker
jacobian_cache_	dvo_core/include/dvo/core/least_squares.h	/^  Eigen::Matrix<NumType, 6, Eigen::Dynamic, Eigen::ColMajor> jacobian_cache_;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
job_	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^  AsyncPointCloudBuilder::BuildJob job_;$/;"	m	class:dvo::visualization::BuildPointCloudTask	file:
join	dvo_core/src/core/weight_calculation.cpp	/^  void join(TDistributionScaleReduction& other)$/;"	f	struct:dvo::core::TDistributionScaleReduction
join	dvo_slam/src/keyframe_graph.cpp	/^    void join(ValidateConstraintProposalReduction& other)$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction
k	dvo_core/include/dvo/core/weight_calculation.h	/^  float k;$/;"	m	class:dvo::core::HuberInfluenceFunction
keepAll	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::Stage& ConstraintProposalValidator::Stage::keepAll()$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator::Stage
keepBest	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::Stage& ConstraintProposalValidator::Stage::keepBest()$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator::Stage
keepBest	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^void ConstraintProposalValidator::keepBest(ConstraintProposalVector& proposals)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator
key	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^    std::string key;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl::SwitchKeyBinding	file:
keyframe1	dvo_slam/src/visualization/graph_visualizer.cpp	/^  int keyframe1;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
keyframeSelectionConfiguration	dvo_slam/src/keyframe_tracker.cpp	/^const dvo_slam::KeyframeTrackerConfig& KeyframeTracker::keyframeSelectionConfiguration() const$/;"	f	class:dvo_slam::KeyframeTracker
keyframe_	dvo_slam/src/local_map.cpp	/^  dvo::core::RgbdImagePyramid::Ptr keyframe_, current_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
keyframe_points_	dvo_slam/src/local_tracker.cpp	/^  PointSelectionPtr keyframe_points_, active_frame_points_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
keyframe_tracker	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  boost::shared_ptr<dvo_slam::KeyframeTracker> keyframe_tracker;$/;"	m	class:dvo_slam::CameraKeyframeTracker
keyframe_tracker_	dvo_slam/src/local_tracker.cpp	/^  DenseTrackerPtr keyframe_tracker_, odometry_tracker_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
keyframe_tracker_cfg	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo_slam::KeyframeTrackerConfig keyframe_tracker_cfg;$/;"	m	class:dvo_slam::CameraKeyframeTracker
keyframe_vertex_	dvo_slam/src/local_map.cpp	/^  g2o::VertexSE3 *keyframe_vertex_, *previous_vertex_, *current_vertex_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
keyframegraph_	dvo_slam/src/keyframe_graph.cpp	/^  g2o::SparseOptimizer keyframegraph_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
keyframes	dvo_slam/src/keyframe_graph.cpp	/^const KeyframeVector& KeyframeGraph::keyframes() const$/;"	f	class:dvo_slam::KeyframeGraph
keyframes_	dvo_slam/src/keyframe_graph.cpp	/^  KeyframeVector keyframes_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
lambda	dvo_core/src/core/weight_calculation.cpp	/^  float lambda, num;$/;"	m	struct:dvo::core::TDistributionScaleReduction	file:
last_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  list::iterator last_;$/;"	m	class:dvo::visualization::internal::PclTrajectoryVisualizer	file:
last_absolute_transformation_	dvo_slam/src/keyframe_tracker.cpp	/^  Eigen::Affine3d initial_transformation_, relative_transformation_, last_absolute_transformation_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
last_keyframe_pose_	dvo_slam/src/local_tracker.cpp	/^  dvo::core::AffineTransformd last_keyframe_pose_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
last_point_error	dvo_core/include/dvo/dense_tracking_impl.h	/^  PointIterator last_point_error;$/;"	m	struct:dvo::core::ComputeResidualsResult
last_residual	dvo_core/include/dvo/dense_tracking_impl.h	/^  ResidualIterator last_residual;$/;"	m	struct:dvo::core::ComputeResidualsResult
last_transform_to_keyframe_	dvo_slam/src/keyframe_tracker.cpp	/^  dvo::core::AffineTransformd last_transform_to_keyframe_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
last_valid_flag	dvo_core/include/dvo/dense_tracking_impl.h	/^  ValidFlagIterator last_valid_flag;$/;"	m	struct:dvo::core::ComputeResidualsResult
latest_absolute_transform_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  Eigen::Affine3d accumulated_transform, from_baselink_to_asus, latest_absolute_transform_;$/;"	m	class:dvo_ros::CameraDenseTracker
level	dvo_core/src/core/rgbd_image.cpp	/^RgbdImage& RgbdImagePyramid::level(size_t idx)$/;"	f	class:dvo::core::RgbdImagePyramid
level	dvo_core/src/core/rgbd_image.cpp	/^const RgbdCamera& RgbdCameraPyramid::level(size_t level) const$/;"	f	class:dvo::core::RgbdCameraPyramid
level	dvo_core/src/core/rgbd_image.cpp	/^const RgbdCamera& RgbdCameraPyramid::level(size_t level)$/;"	f	class:dvo::core::RgbdCameraPyramid
levels_	dvo_core/include/dvo/core/rgbd_image.h	/^  std::vector<RgbdCameraPtr> levels_;$/;"	m	class:dvo::core::RgbdCameraPyramid
levels_	dvo_core/include/dvo/core/rgbd_image.h	/^  std::vector<RgbdImagePtr> levels_;$/;"	m	class:dvo::core::RgbdImagePyramid
list	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  typedef std::list<PointPair, Eigen::aligned_allocator<PointPair> > list;$/;"	t	class:dvo::visualization::internal::PclTrajectoryVisualizer	file:
ll_keyframe_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
ll_odometry_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
load	dvo_benchmark/src/benchmark.cpp	/^dvo::core::RgbdImagePyramid::Ptr load(std::string rgb_file, std::string depth_file)$/;"	f
load	dvo_benchmark/src/benchmark_slam.cpp	/^dvo::core::RgbdImagePyramidPtr load(dvo::core::RgbdCameraPyramid& camera, std::string rgb_file, std::string depth_file)$/;"	f
load	dvo_benchmark/src/experiment.cpp	/^dvo::core::RgbdImagePyramid::Ptr load(std::string rgb_file, std::string depth_file)$/;"	f
load_camera_pose_	dvo_benchmark/src/benchmark.cpp	/^  dvo::visualization::Switch dump_camera_pose_, load_camera_pose_;$/;"	m	class:BenchmarkNode	file:
load_camera_pose_	dvo_benchmark/src/benchmark_slam.cpp	/^  dvo::visualization::Switch dump_camera_pose_, load_camera_pose_;$/;"	m	class:BenchmarkNode	file:
local_map_	dvo_slam/include/dvo_slam/local_tracker.h	/^  dvo_slam::LocalMap::Ptr local_map_;$/;"	m	class:dvo_slam::LocalTracker
loop_closure_colors_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  cv::Mat loop_closure_colors_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
lt_	dvo_slam/src/keyframe_tracker.cpp	/^  LocalTracker lt_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
m_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::mutex m_;$/;"	m	class:dvo::visualization::internal::PclCameraVisualizer	file:
m_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::mutex m_;$/;"	m	class:dvo::visualization::internal::PclTrajectoryVisualizer	file:
m_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::mutex m_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
main	dvo_benchmark/src/benchmark.cpp	/^int main(int argc, char **argv)$/;"	f
main	dvo_benchmark/src/benchmark_slam.cpp	/^int main(int argc, char **argv)$/;"	f
main	dvo_benchmark/src/experiment.cpp	/^int main(int argc, char **argv)$/;"	f
main	dvo_core/src/sse_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	dvo_ros/src/camera_tracker_node.cpp	/^int main(int argc, char **argv) {$/;"	f
main	dvo_slam/src/camera_keyframe_tracker_node.cpp	/^int main(int argc, char **argv) {$/;"	f
map_changed_	dvo_slam/src/keyframe_graph.cpp	/^  boost::signals2::signal<KeyframeGraph::MapChangedCallbackSignature> map_changed_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
map_complete_	dvo_slam/src/local_tracker.cpp	/^  LocalTracker::MapCompleteSignal map_complete_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
map_initialized_	dvo_slam/src/local_tracker.cpp	/^  LocalTracker::MapInitializedSignal map_initialized_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
mappingConfiguration	dvo_slam/src/keyframe_tracker.cpp	/^const dvo_slam::KeyframeGraphConfig& KeyframeTracker::mappingConfiguration() const$/;"	f	class:dvo_slam::KeyframeTracker
marker_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  visualization_msgs::InteractiveMarker marker_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
marker_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  visualization_msgs::InteractiveMarker marker_;$/;"	m	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer	file:
marker_callback_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  interactive_markers::InteractiveMarkerServer::FeedbackCallback marker_callback_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
marker_server_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  interactive_markers::InteractiveMarkerServer marker_server_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
marker_server_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  interactive_markers::InteractiveMarkerServer& marker_server_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
marker_server_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  interactive_markers::InteractiveMarkerServer& marker_server_;$/;"	m	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer	file:
marker_server_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  interactive_markers::InteractiveMarkerServer* marker_server_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
mask_	dvo_core/include/dvo/core/least_squares.h	/^  cv::Mat1b mask_;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
mask_ptr_	dvo_core/include/dvo/core/least_squares.h	/^  const uchar* mask_ptr_;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
match	dvo_core/src/dense_tracking.cpp	/^bool DenseTracker::match(RgbdImagePyramid& reference, RgbdImagePyramid& current, Eigen::Affine3d& transformation)$/;"	f	class:dvo::DenseTracker
match	dvo_core/src/dense_tracking.cpp	/^bool DenseTracker::match(dvo::core::PointSelection& reference, RgbdImagePyramid& current, Eigen::Affine3d& transformation)$/;"	f	class:dvo::DenseTracker
match	dvo_core/src/dense_tracking.cpp	/^bool DenseTracker::match(dvo::core::PointSelection& reference, dvo::core::RgbdImagePyramid& current, dvo::DenseTracker::Result& result)$/;"	f	class:dvo::DenseTracker
match	dvo_core/src/dense_tracking.cpp	/^bool DenseTracker::match(dvo::core::RgbdImagePyramid& reference, dvo::core::RgbdImagePyramid& current, dvo::DenseTracker::Result& result)$/;"	f	class:dvo::DenseTracker
match	dvo_slam/src/local_tracker.cpp	/^  static void match(const DenseTrackerPtr& tracker, const PointSelectionPtr& ref, const dvo::core::RgbdImagePyramid::Ptr& cur, LocalTracker::TrackingResult* r)$/;"	f	struct:dvo_slam::internal::LocalTrackerImpl
maxDistance	dvo_slam/src/keyframe_constraint_search.cpp	/^float NearestNeighborConstraintSearch::maxDistance() const$/;"	f	class:dvo_slam::NearestNeighborConstraintSearch
maxDistance	dvo_slam/src/keyframe_constraint_search.cpp	/^void NearestNeighborConstraintSearch::maxDistance(const float& d)$/;"	f	class:dvo_slam::NearestNeighborConstraintSearch
max_distance_	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^  float max_distance_;$/;"	m	class:dvo_slam::NearestNeighborConstraintSearch
max_edge_id_	dvo_slam/src/local_map.cpp	/^  int max_vertex_id_, max_edge_id_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
max_vertex_id_	dvo_slam/src/local_map.cpp	/^  int max_vertex_id_, max_edge_id_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
maxnum_constraints	dvo_core/include/dvo/core/least_squares.h	/^  size_t maxnum_constraints, num_constraints;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
maxnum_constraints	dvo_core/include/dvo/core/least_squares.h	/^  size_t maxnum_constraints, num_constraints;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
md_pub_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::Publisher ll_keyframe_pub_, ll_odometry_pub_, cn_odometry_pub_, cn_keyframe_pub_, de_odometry_pub_, de_keyframe_pub_, md_pub_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
me	dvo_ros/cfg/dvo.cfg	/^me = os.path.realpath(__file__)$/;"	v
me	dvo_slam/cfg/dvo_slam.cfg	/^me = os.path.realpath(__file__)$/;"	v
me	dvo_slam/cfg/graph_visualizer.cfg	/^me = os.path.realpath(__file__)$/;"	v
me_	dvo_slam/src/keyframe_graph.cpp	/^  KeyframeGraph* me_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
menu_handler_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  interactive_markers::MenuHandler menu_handler_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
msg_	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  dvo_slam::PoseStampedArray& msg_;$/;"	m	class:dvo_slam::serialization::MessageSerializer
n_	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  double first_, average_, n_;$/;"	m	class:dvo_slam::TrackingResultEvaluation
name	dvo_core/include/dvo/util/stopwatch.h	/^  std::string name;$/;"	m	struct:dvo::util::stopwatch
native	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  virtual bool native(void*& native_visualizer)$/;"	f	class:dvo::visualization::CameraTrajectoryVisualizerInterface
native	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  interactive_markers::InteractiveMarkerServer* native()$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl
native	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^bool RosCameraTrajectoryVisualizer::native(void*& native_visualizer)$/;"	f	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
newKeyframe	dvo_slam/src/keyframe_graph.cpp	/^  void newKeyframe(const LocalMap::Ptr& map)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
new_keyframe_sync_	dvo_slam/src/keyframe_graph.cpp	/^  tbb::mutex new_keyframe_sync_, queue_empty_sync_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
new_keyframes_	dvo_slam/src/keyframe_graph.cpp	/^  tbb::concurrent_bounded_queue<LocalMap::Ptr> new_keyframes_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
next	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  bool next()$/;"	f	class:dvo_benchmark::FileReader
next	dvo_core/include/dvo/util/id_generator.h	/^  std::string next()$/;"	f	class:dvo::util::IdGenerator
next	dvo_core/include/dvo/util/id_generator.h	/^  void next(std::string& id)$/;"	f	class:dvo::util::IdGenerator
next	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::next()$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
next_keyframe_id_	dvo_slam/src/keyframe_graph.cpp	/^  short next_keyframe_id_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
next_odometry_edge_id_	dvo_slam/src/keyframe_graph.cpp	/^  int next_odometry_vertex_id_, next_odometry_edge_id_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
next_odometry_vertex_id_	dvo_slam/src/keyframe_graph.cpp	/^  int next_odometry_vertex_id_, next_odometry_edge_id_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
nh_	dvo_benchmark/src/benchmark.cpp	/^  ros::NodeHandle& nh_, nh_private_;$/;"	m	class:BenchmarkNode	file:
nh_	dvo_benchmark/src/benchmark_slam.cpp	/^  ros::NodeHandle &nh_, nh_vis_, &nh_private_;$/;"	m	class:BenchmarkNode	file:
nh_	dvo_ros/include/dvo_ros/camera_base.h	/^  ros::NodeHandle nh_;$/;"	m	class:dvo_ros::CameraBase
nh_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  ros::NodeHandle& nh_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
nh_	dvo_slam/src/keyframe_tracker.cpp	/^  ros::NodeHandle nh_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
nh_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  ros::NodeHandle nh_, nh_graph_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
nh_graph_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  ros::NodeHandle nh_, nh_graph_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
nh_private_	dvo_benchmark/src/benchmark.cpp	/^  ros::NodeHandle& nh_, nh_private_;$/;"	m	class:BenchmarkNode	file:
nh_private_	dvo_benchmark/src/benchmark_slam.cpp	/^  ros::NodeHandle &nh_, nh_vis_, &nh_private_;$/;"	m	class:BenchmarkNode	file:
nh_private_	dvo_ros/include/dvo_ros/camera_base.h	/^  ros::NodeHandle nh_private_;$/;"	m	class:dvo_ros::CameraBase
nh_vis_	dvo_benchmark/src/benchmark_slam.cpp	/^  ros::NodeHandle &nh_, nh_vis_, &nh_private_;$/;"	m	class:BenchmarkNode	file:
none	dvo_core/src/core/interpolation.cpp	/^IntensityType Interpolation::none(const cv::Mat& img, float x, float y)$/;"	f	class:dvo::core::Interpolation
normalizer	dvo_core/include/dvo/core/weight_calculation.h	/^  float normalizer;$/;"	m	class:dvo::core::TDistributionInfluenceFunction
normalizer	dvo_core/src/core/least_squares.cpp	/^static const dvo::core::NumType normalizer = 1.0 \/ (255.0 * 255.0);$/;"	v	file:
normalizer_inverse	dvo_core/src/core/least_squares.cpp	/^static const dvo::core::NumType normalizer_inverse = 255.0 * 255.0;$/;"	v	file:
normals	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat normals, angles;$/;"	m	class:dvo::core::RgbdImage
num	dvo_core/include/dvo/util/stopwatch.h	/^  size_t num;$/;"	m	struct:dvo::util::stopwatch_collection
num	dvo_core/src/core/weight_calculation.cpp	/^  float lambda, num;$/;"	m	struct:dvo::core::TDistributionScaleReduction	file:
num_constraints	dvo_core/include/dvo/core/least_squares.h	/^  size_t maxnum_constraints, num_constraints;$/;"	m	class:dvo::core::NormalEquationsLeastSquares
num_constraints	dvo_core/include/dvo/core/least_squares.h	/^  size_t maxnum_constraints, num_constraints;$/;"	m	class:dvo::core::PrecomputedNormalEquationsLeastSquares
odometry_tracker_	dvo_slam/src/local_tracker.cpp	/^  DenseTrackerPtr keyframe_tracker_, odometry_tracker_;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
old	dvo_core/include/dvo/util/revertable.h	/^  T old, value;$/;"	m	class:dvo::util::Revertable
onAcceptCriterionConditionNumber	dvo_slam/src/keyframe_tracker.cpp	/^  bool onAcceptCriterionConditionNumber(const LocalTracker& lt, const LocalTracker::TrackingResult& r_odometry, const LocalTracker::TrackingResult& r_keyframe)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onAcceptCriterionConstraintRatio	dvo_slam/src/keyframe_tracker.cpp	/^  bool onAcceptCriterionConstraintRatio(const LocalTracker& lt, const LocalTracker::TrackingResult& r_odometry, const LocalTracker::TrackingResult& r_keyframe)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onAcceptCriterionDistance	dvo_slam/src/keyframe_tracker.cpp	/^  bool onAcceptCriterionDistance(const LocalTracker& lt, const LocalTracker::TrackingResult& r_odometry, const LocalTracker::TrackingResult& r_keyframe)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onAcceptCriterionEstimateDivergence	dvo_slam/src/keyframe_tracker.cpp	/^  bool onAcceptCriterionEstimateDivergence(const LocalTracker& lt, const LocalTracker::TrackingResult& r_odometry, const LocalTracker::TrackingResult& r_keyframe)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onAcceptCriterionTrackingResultEvaluation	dvo_slam/src/keyframe_tracker.cpp	/^  bool onAcceptCriterionTrackingResultEvaluation(const LocalTracker& lt, const LocalTracker::TrackingResult& r_odometry, const LocalTracker::TrackingResult& r_keyframe)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onConfig	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void onConfig(dvo_slam::GraphVisualizerConfig& cfg, uint32_t level)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
onEdgeDeleteClick	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void onEdgeDeleteClick(const interactive_markers::MenuHandler::FeedbackConstPtr& feedback)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
onEdgeErrorWithMeasurementClick	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void onEdgeErrorWithMeasurementClick(const interactive_markers::MenuHandler::FeedbackConstPtr& feedback)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
onEdgeErrorWithRelativeClick	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void onEdgeErrorWithRelativeClick(const interactive_markers::MenuHandler::FeedbackConstPtr& feedback)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
onGlobalMapChangedSaveTrajectory	dvo_slam/src/keyframe_tracker.cpp	/^  void onGlobalMapChangedSaveTrajectory(KeyframeGraph& map)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onGlobalMapChangedUpdateVisualization	dvo_slam/src/keyframe_tracker.cpp	/^  void onGlobalMapChangedUpdateVisualization(KeyframeGraph& map)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onInit	dvo_ros/src/camera_tracker_nodelet.cpp	/^void CameraTrackerNodelet::onInit()$/;"	f	class:dvo_ros::CameraTrackerNodelet
onKeyframeClick	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void onKeyframeClick(short keyframe_id, const dvo::visualization::CameraVisualizer&)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
onMapChanged	dvo_slam/src/camera_keyframe_tracking.cpp	/^void CameraKeyframeTracker::onMapChanged(dvo_slam::KeyframeGraph& map)$/;"	f	class:dvo_slam::CameraKeyframeTracker
onMapComplete	dvo_slam/src/keyframe_tracker.cpp	/^  void onMapComplete(const dvo_slam::LocalTracker& lt, const dvo_slam::LocalMap::Ptr& m)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onMapInitialized	dvo_slam/src/keyframe_tracker.cpp	/^  void onMapInitialized(const LocalTracker& lt, const LocalMap::Ptr& m, const LocalTracker::TrackingResult& r_odometry)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
onMarkerFeedback	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void onMarkerFeedback(const visualization_msgs::InteractiveMarkerFeedback::ConstPtr& feedback)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
onSwitchKeyPressed	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  static void onSwitchKeyPressed(const pcl::visualization::KeyboardEvent& e, void* data)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
onclick	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  virtual CameraVisualizer& onclick(const OnClickCallback& callback) { return *this; }$/;"	f	class:dvo::visualization::CameraVisualizer
onclick	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual CameraVisualizer& onclick(const OnClickCallback& callback)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer
onclick_callback_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  OnClickCallback onclick_callback_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
operator ()	dvo_benchmark/src/experiment.cpp	/^  bool operator() (const dvo_benchmark::Groundtruth& left, const dvo_benchmark::Groundtruth& right) const$/;"	f	struct:FindNearestPosePredicate
operator ()	dvo_core/include/dvo/util/revertable.h	/^  inline const T& operator()() const$/;"	f	class:dvo::util::Revertable
operator ()	dvo_core/src/core/intrinsic_matrix.cpp	/^bool IntrinsicMatrix::Equal::operator()(IntrinsicMatrix const& left, IntrinsicMatrix const& right) const$/;"	f	class:dvo::core::IntrinsicMatrix::Equal
operator ()	dvo_core/src/core/intrinsic_matrix.cpp	/^std::size_t IntrinsicMatrix::Hash::operator ()(IntrinsicMatrix const& value) const$/;"	f	class:dvo::core::IntrinsicMatrix::Hash
operator ()	dvo_core/src/core/weight_calculation.cpp	/^  void operator()(const tbb::blocked_range<size_t>& r)$/;"	f	struct:dvo::core::TDistributionScaleReduction
operator ()	dvo_slam/include/dvo_slam/local_tracker.h	/^    bool operator()(InputIterator first, InputIterator last) const$/;"	f	struct:dvo_slam::LocalTracker::All
operator ()	dvo_slam/src/keyframe_graph.cpp	/^    bool operator ()(const g2o::HyperGraph::Edge* e) const$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::FindEdge
operator ()	dvo_slam/src/keyframe_graph.cpp	/^    void operator()(const ConstraintPoposalConstRange& r)$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction
operator ()	dvo_slam/src/keyframe_graph.cpp	/^  bool operator() (g2o::HyperGraph::Edge* e)$/;"	f	struct:dvo_slam::internal::FindEdgeById
operator ()	dvo_slam/src/visualization/graph_visualizer.cpp	/^  bool operator() (g2o::HyperGraph::Edge* e)$/;"	f	struct:dvo_slam::visualization::internal::FindEdgeById
operator ()	dvo_slam/src/visualization/graph_visualizer.cpp	/^  bool operator() (g2o::OptimizableGraph::Edge* e1, g2o::OptimizableGraph::Edge* e2)$/;"	f	struct:dvo_slam::visualization::internal::CompareEdgeChi2
operator +=	dvo_core/src/core/math_sse.cpp	/^void OptimizedSelfAdjointMatrix6x6f::operator +=(const OptimizedSelfAdjointMatrix6x6f& other)$/;"	f	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
operator <<	dvo_benchmark/include/dvo_benchmark/groundtruth.h	/^std::ostream& operator <<(std::ostream& out, const Groundtruth& gt)$/;"	f	namespace:dvo_benchmark
operator <<	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	/^std::ostream& operator <<(std::ostream& out, const RgbdPair& pair)$/;"	f	namespace:dvo_benchmark
operator <<	dvo_core/include/dvo/dense_tracking.h	/^std::ostream& operator<< (std::basic_ostream<CharT, Traits> &o, const dvo::DenseTracker::IterationStats &s)$/;"	f
operator <<	dvo_core/include/dvo/dense_tracking.h	/^std::ostream& operator<< (std::basic_ostream<CharT, Traits> &o, const dvo::DenseTracker::LevelStats &s)$/;"	f
operator <<	dvo_core/include/dvo/dense_tracking.h	/^std::ostream& operator<< (std::basic_ostream<CharT, Traits> &o, const dvo::DenseTracker::Stats &s)$/;"	f
operator <<	dvo_core/include/dvo/dense_tracking.h	/^std::ostream& operator<< (std::basic_ostream<CharT, Traits> &out, const dvo::DenseTracker::Config &config)$/;"	f
operator <<	dvo_slam/include/dvo_slam/config.h	/^std::basic_ostream<_CharT, _Traits>& operator<<(std::basic_ostream<_CharT, _Traits>& out, const dvo_slam::KeyframeGraphConfig& cfg)$/;"	f
operator <<	dvo_slam/include/dvo_slam/config.h	/^std::basic_ostream<_CharT, _Traits>& operator<<(std::basic_ostream<_CharT, _Traits>& out, const dvo_slam::KeyframeTrackerConfig& cfg)$/;"	f
operator >>	dvo_benchmark/include/dvo_benchmark/groundtruth.h	/^std::istream& operator >>(std::istream& in, Groundtruth& gt)$/;"	f	namespace:dvo_benchmark
operator >>	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	/^std::istream& operator >>(std::istream& in, RgbdPair& pair)$/;"	f	namespace:dvo_benchmark
operator []	dvo_core/include/dvo/util/stopwatch.h	/^  stopwatch& operator[](int idx)$/;"	f	struct:dvo::util::stopwatch_collection
optimization_thread_	dvo_slam/src/keyframe_graph.cpp	/^  tbb::tbb_thread optimization_thread_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
optimization_thread_shutdown_	dvo_slam/src/keyframe_graph.cpp	/^  bool optimization_thread_shutdown_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
optimize	dvo_slam/src/local_map.cpp	/^void LocalMap::optimize()$/;"	f	class:dvo_slam::LocalMap
optimizeInterKeyframePoses	dvo_slam/src/keyframe_graph.cpp	/^  void optimizeInterKeyframePoses()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
ox	dvo_core/src/core/intrinsic_matrix.cpp	/^float IntrinsicMatrix::ox() const$/;"	f	class:dvo::core::IntrinsicMatrix
oy	dvo_core/src/core/intrinsic_matrix.cpp	/^float IntrinsicMatrix::oy() const$/;"	f	class:dvo::core::IntrinsicMatrix
pairs_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  list pairs_;$/;"	m	class:dvo::visualization::internal::PclTrajectoryVisualizer	file:
pairs_	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  ProposalPairVector pairs_;$/;"	m	struct:dvo_slam::constraints::CrossValidationVoter
parseEdgeIdFromMarker	dvo_slam/src/visualization/graph_visualizer.cpp	/^  int parseEdgeIdFromMarker(const std::string& marker_name)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
passthroughPointCloudBuilder	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^dvo::visualization::AsyncPointCloudBuilder::PointCloud::Ptr passthroughPointCloudBuilder(const dvo::visualization::AsyncPointCloudBuilder::PointCloud::Ptr& cloud)$/;"	f	namespace:dvo::visualization
point	dvo_core/include/dvo/core/rgbd_image.h	/^  Point point;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth
point_cloud_aggregator_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  dvo::visualization::PointCloudAggregator point_cloud_aggregator_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
point_cloud_aggregator_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  dvo::visualization::PointCloudAggregator& point_cloud_aggregator_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
point_cloud_builder_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  boost::shared_ptr<AsyncPointCloudBuilder::BuildJob> point_cloud_builder_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
point_cloud_topic_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  ros::Publisher point_cloud_topic_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
pointcloud	dvo_core/include/dvo/core/rgbd_image.h	/^  PointCloud pointcloud;$/;"	m	class:dvo::core::RgbdImage
pointcloud_requires_build_	dvo_core/include/dvo/core/rgbd_image.h	/^  bool intensity_requires_calculation_, depth_requires_calculation_, pointcloud_requires_build_;$/;"	m	class:dvo::core::RgbdImage
pointcloud_template_	dvo_core/include/dvo/core/rgbd_image.h	/^  PointCloud pointcloud_template_;$/;"	m	class:dvo::core::RgbdCamera
points	dvo_core/include/dvo/core/point_selection.h	/^    PointVector points;$/;"	m	struct:dvo::core::PointSelection::Storage
points	dvo_core/include/dvo/dense_tracking.h	/^  dvo::core::PointWithIntensityAndDepth::VectorType points, points_error;$/;"	m	class:dvo::DenseTracker
points_end	dvo_core/include/dvo/core/point_selection.h	/^    PointIterator points_end;$/;"	m	struct:dvo::core::PointSelection::Storage
points_error	dvo_core/include/dvo/dense_tracking.h	/^  dvo::core::PointWithIntensityAndDepth::VectorType points, points_error;$/;"	m	class:dvo::DenseTracker
pose	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^    const Eigen::Affine3d pose;$/;"	m	struct:dvo::visualization::AsyncPointCloudBuilder::BuildJob
pose_pub_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  ros::Publisher pose_pub_;$/;"	m	class:dvo_ros::CameraDenseTracker
pose_publisher	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  ros::Publisher pose_publisher, graph_publisher;$/;"	m	class:dvo_slam::CameraKeyframeTracker
pose_sub_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  ros::Subscriber pose_sub_;$/;"	m	class:dvo_ros::CameraDenseTracker
predicate	dvo_slam/src/local_tracker.cpp	/^  dvo::core::ValidPointAndGradientThresholdPredicate predicate;$/;"	m	struct:dvo_slam::internal::LocalTrackerImpl	file:
predicate_	dvo_core/include/dvo/core/point_selection.h	/^  const PointSelectionPredicate& predicate_;$/;"	m	class:dvo::core::PointSelection
prefix_	dvo_core/include/dvo/util/id_generator.h	/^  std::string prefix_;$/;"	m	class:dvo::util::IdGenerator
previous_	dvo_slam/src/keyframe_tracker.cpp	/^  dvo::core::RgbdImagePyramid::Ptr previous_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
previous_vertex_	dvo_slam/src/local_map.cpp	/^  g2o::VertexSE3 *keyframe_vertex_, *previous_vertex_, *current_vertex_;$/;"	m	struct:dvo_slam::internal::LocalMapImpl	file:
print	dvo_core/include/dvo/util/stopwatch.h	/^  inline void print()$/;"	f	struct:dvo::util::stopwatch
printVotingResults	dvo_slam/src/constraints/constraint_proposal.cpp	/^void ConstraintProposal::printVotingResults(std::ostream& out, const std::string indent) const$/;"	f	class:dvo_slam::constraints::ConstraintProposal
printVotingResults	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^void ConstraintProposalValidator::printVotingResults(const Stage& stage, const ConstraintProposalVector& proposals)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator
processInput	dvo_benchmark/src/benchmark.cpp	/^void BenchmarkNode::processInput(dvo::visualization::CameraTrajectoryVisualizerInterface* visualizer)$/;"	f	class:BenchmarkNode
processInput	dvo_benchmark/src/benchmark_slam.cpp	/^void BenchmarkNode::processInput(dvo::visualization::CameraTrajectoryVisualizerInterface* visualizer)$/;"	f	class:BenchmarkNode
proposals	dvo_slam/src/keyframe_graph.cpp	/^    ConstraintProposalVector& proposals()$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction
proposals_	dvo_slam/src/keyframe_graph.cpp	/^    ConstraintProposalVector proposals_;$/;"	m	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction	file:
publishErrorImage	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void publishErrorImage(const cv::Mat& img)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
publishPose	dvo_ros/src/camera_dense_tracking.cpp	/^void CameraDenseTracker::publishPose(const std_msgs::Header& header, const Eigen::Affine3d& transform, const std::string frame)$/;"	f	class:dvo_ros::CameraDenseTracker
publishTransform	dvo_ros/src/camera_dense_tracking.cpp	/^void CameraDenseTracker::publishTransform(const std_msgs::Header& header, const Eigen::Affine3d& transform, const std::string frame)$/;"	f	class:dvo_ros::CameraDenseTracker
publishTransform	dvo_slam/src/camera_keyframe_tracking.cpp	/^void CameraKeyframeTracker::publishTransform(const std_msgs::Header& header, const Eigen::Affine3d& transform, const std::string frame)$/;"	f	class:dvo_slam::CameraKeyframeTracker
pyrDownMeanSmooth	dvo_core/src/core/rgbd_image.cpp	/^static void pyrDownMeanSmooth(const cv::Mat& in, cv::Mat& out)$/;"	f	namespace:dvo::core
pyrDownMeanSmoothIgnoreInvalid	dvo_core/src/core/rgbd_image.cpp	/^static void pyrDownMeanSmoothIgnoreInvalid(const cv::Mat& in, cv::Mat& out)$/;"	f	namespace:dvo::core
pyrDownMedianSmooth	dvo_core/src/core/rgbd_image.cpp	/^static void pyrDownMedianSmooth(const cv::Mat& in, cv::Mat& out)$/;"	f	namespace:dvo::core
pyrDownSubsample	dvo_core/src/core/rgbd_image.cpp	/^static void pyrDownSubsample(const cv::Mat& in, cv::Mat& out)$/;"	f	namespace:dvo::core
pyramid_	dvo_core/include/dvo/core/point_selection.h	/^  dvo::core::RgbdImagePyramid *pyramid_;$/;"	m	class:dvo::core::PointSelection
queue_empty_sync_	dvo_slam/src/keyframe_graph.cpp	/^  tbb::mutex new_keyframe_sync_, queue_empty_sync_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
r	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  double r, g, b;$/;"	m	struct:dvo::visualization::Color
rankUpdate	dvo_core/src/core/math_sse.cpp	/^void OptimizedSelfAdjointMatrix6x6f::rankUpdate(const Eigen::Matrix<float, 2, 6>& v, const Eigen::Matrix2f& alpha)$/;"	f	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
rankUpdate	dvo_core/src/core/math_sse.cpp	/^void OptimizedSelfAdjointMatrix6x6f::rankUpdate(const Eigen::Matrix<float, 6, 1>& u, const float& alpha)$/;"	f	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
ratioWithAverage	dvo_slam/src/tracking_result_evaluation.cpp	/^double TrackingResultEvaluation::ratioWithAverage(const dvo::DenseTracker::Result& r) const$/;"	f	class:dvo_slam::TrackingResultEvaluation
ratioWithFirst	dvo_slam/src/tracking_result_evaluation.cpp	/^double TrackingResultEvaluation::ratioWithFirst(const dvo::DenseTracker::Result& r) const$/;"	f	class:dvo_slam::TrackingResultEvaluation
read	dvo_slam/include/dvo_slam/timestamped.h	/^  virtual bool read(std::istream& is)$/;"	f	class:dvo_slam::Timestamped
readAllEntries	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  void readAllEntries(std::vector<EntryT>& entries)$/;"	f	class:dvo_benchmark::FileReader
reconfigure_server_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  ReconfigureServer reconfigure_server_;$/;"	m	class:dvo_ros::CameraDenseTracker
reconfigure_server_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  dynamic_reconfigure::Server<dvo_slam::GraphVisualizerConfig> reconfigure_server_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
recycle	dvo_core/src/core/point_selection.cpp	/^void PointSelection::recycle(dvo::core::RgbdImagePyramid& pyramid)$/;"	f	class:dvo::core::PointSelection
red	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  static const Color& red()$/;"	f	struct:dvo::visualization::Color
reference	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  dvo::core::RgbdImagePyramidPtr current, reference;$/;"	m	class:dvo_ros::CameraDenseTracker
reference	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo::core::RgbdImagePyramidPtr current, reference;$/;"	m	class:dvo_slam::CameraKeyframeTracker
reference_selection_	dvo_core/include/dvo/dense_tracking.h	/^  dvo::core::PointSelection reference_selection_;$/;"	m	class:dvo::DenseTracker
relative_transformation_	dvo_slam/src/keyframe_tracker.cpp	/^  Eigen::Affine3d initial_transformation_, relative_transformation_, last_absolute_transformation_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
remove	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^void PointCloudAggregator::remove(const std::string& name)$/;"	f	class:dvo::visualization::PointCloudAggregator
removeAdditionalProposals	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  virtual void removeAdditionalProposals(ConstraintProposalVector& proposals) {}$/;"	f	struct:dvo_slam::constraints::ConstraintProposalVoter
removeAdditionalProposals	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^void CrossValidationVoter::removeAdditionalProposals(ConstraintProposalVector& proposals)$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
removeOutlierConstraints	dvo_slam/src/keyframe_graph.cpp	/^  int removeOutlierConstraints(double weight_threshold, int n_max = -1)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
render	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void render(int milliseconds)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
render	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^void PclCameraTrajectoryVisualizer::render(int milliseconds)$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
renderWhileSwitchAndNotTerminated	dvo_benchmark/src/benchmark.cpp	/^void BenchmarkNode::renderWhileSwitchAndNotTerminated(dvo::visualization::CameraTrajectoryVisualizerInterface* visualizer, const dvo::visualization::Switch& s)$/;"	f	class:BenchmarkNode
renderWhileSwitchAndNotTerminated	dvo_benchmark/src/benchmark_slam.cpp	/^void BenchmarkNode::renderWhileSwitchAndNotTerminated(dvo::visualization::CameraTrajectoryVisualizerInterface* visualizer, const dvo::visualization::Switch& s)$/;"	f	class:BenchmarkNode
reset	dvo_core/include/dvo/util/id_generator.h	/^  void reset()$/;"	f	class:dvo::util::IdGenerator
reset	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::reset()$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
reset	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^void NoopCameraTrajectoryVisualizer::reset()$/;"	f	class:dvo::visualization::NoopCameraTrajectoryVisualizer
reset	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void reset()$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
reset	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^void PclCameraTrajectoryVisualizer::reset()$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
reset	dvo_ros/src/camera_dense_tracking.cpp	/^void CameraDenseTracker::reset(const sensor_msgs::CameraInfo::ConstPtr& camera_info_msg)$/;"	f	class:dvo_ros::CameraDenseTracker
reset	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void reset()$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl
reset	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^void RosCameraTrajectoryVisualizer::reset()$/;"	f	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
reset	dvo_slam/src/camera_keyframe_tracking.cpp	/^void CameraKeyframeTracker::reset(const sensor_msgs::CameraInfo::ConstPtr& camera_info_msg)$/;"	f	class:dvo_slam::CameraKeyframeTracker
residuals	dvo_core/include/dvo/core/least_squares.h	/^  Eigen::Matrix<NumType, Eigen::Dynamic, 1> residuals;$/;"	m	class:dvo::core::SvdLeastSquares
residuals	dvo_core/include/dvo/dense_tracking.h	/^  ResidualVectorType residuals;$/;"	m	class:dvo::DenseTracker
result_type	dvo_slam/include/dvo_slam/local_tracker.h	/^    typedef bool result_type;$/;"	t	struct:dvo_slam::LocalTracker::All
revert	dvo_core/include/dvo/util/revertable.h	/^  void revert()$/;"	f	class:dvo::util::Revertable
rgb	dvo_core/include/dvo/core/rgbd_image.h	/^  cv::Mat rgb;$/;"	m	class:dvo::core::RgbdImage
rgb_camera_info_subscriber_	dvo_ros/include/dvo_ros/camera_base.h	/^  message_filters::Subscriber<sensor_msgs::CameraInfo> rgb_camera_info_subscriber_;$/;"	m	class:dvo_ros::CameraBase
rgb_image_subscriber_	dvo_ros/include/dvo_ros/camera_base.h	/^  message_filters::Subscriber<sensor_msgs::Image> rgb_image_subscriber_;$/;"	m	class:dvo_ros::CameraBase
rgbdpair_reader_	dvo_benchmark/src/benchmark.cpp	/^  dvo_benchmark::FileReader<dvo_benchmark::RgbdPair> *rgbdpair_reader_;$/;"	m	class:BenchmarkNode	file:
rgbdpair_reader_	dvo_benchmark/src/benchmark_slam.cpp	/^  dvo_benchmark::FileReader<dvo_benchmark::RgbdPair> *rgbdpair_reader_;$/;"	m	class:BenchmarkNode	file:
run	dvo_benchmark/src/benchmark.cpp	/^void BenchmarkNode::run()$/;"	f	class:BenchmarkNode
run	dvo_benchmark/src/benchmark_slam.cpp	/^void BenchmarkNode::run()$/;"	f	class:BenchmarkNode
s	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^    Switch& s;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl::SwitchKeyBinding	file:
scale	dvo_core/src/core/intrinsic_matrix.cpp	/^void IntrinsicMatrix::scale(float factor)$/;"	f	class:dvo::core::IntrinsicMatrix
scale_estimator_enum	dvo_ros/cfg/dvo.cfg	/^scale_estimator_enum = gen.enum([ $/;"	v
second	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^    pcl::PointXYZ second;$/;"	m	class:dvo::visualization::internal::PclTrajectoryVisualizer::PointPair	file:
select	dvo_core/src/core/point_selection.cpp	/^void PointSelection::select(const size_t& level, PointSelection::PointIterator& first_point, PointSelection::PointIterator& last_point)$/;"	f	class:dvo::core::PointSelection
selectPointsFromImage	dvo_core/src/core/point_selection.cpp	/^PointSelection::PointIterator PointSelection::selectPointsFromImage(const dvo::core::RgbdImage& img, const PointSelection::PointIterator& first_point, const PointSelection::PointIterator& last_point, cv::Mat& debug_idx)$/;"	f	class:dvo::core::PointSelection
selection_predicate_	dvo_core/include/dvo/dense_tracking.h	/^  dvo::core::ValidPointAndGradientThresholdPredicate selection_predicate_;$/;"	m	class:dvo::DenseTracker
serialization	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^namespace serialization$/;"	n	namespace:dvo_slam
serialization	dvo_slam/include/dvo_slam/serialization/map_serializer_interface.h	/^namespace serialization$/;"	n	namespace:dvo_slam
serialization	dvo_slam/src/serialization/map_serializer.cpp	/^namespace serialization$/;"	n	namespace:dvo_slam	file:
serialization	dvo_slam/src/serialization/map_serializer_interface.cpp	/^namespace serialization$/;"	n	namespace:dvo_slam	file:
serialize	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  virtual void serialize(const dvo_slam::KeyframeGraph& map)$/;"	f	class:dvo_slam::serialization::FileSerializer
serialize	dvo_slam/src/serialization/map_serializer.cpp	/^void EdgeErrorSerializer::serialize(const dvo_slam::KeyframeGraph& map)$/;"	f	class:dvo_slam::serialization::EdgeErrorSerializer
serialize	dvo_slam/src/serialization/map_serializer.cpp	/^void MessageSerializer::serialize(const dvo_slam::KeyframeGraph& map)$/;"	f	class:dvo_slam::serialization::MessageSerializer
serialize	dvo_slam/src/serialization/map_serializer.cpp	/^void TrajectorySerializer::serialize(const dvo_slam::KeyframeGraph& map)$/;"	f	class:dvo_slam::serialization::TrajectorySerializer
serializeMap	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::serializeMap(dvo_slam::serialization::MapSerializerInterface& serializer)$/;"	f	class:dvo_slam::KeyframeTracker
setEvaluation	dvo_slam/src/local_map.cpp	/^void LocalMap::setEvaluation(dvo_slam::TrackingResultEvaluation::ConstPtr& evaluation)$/;"	f	class:dvo_slam::LocalMap
setGraph	dvo_slam/src/visualization/graph_visualizer.cpp	/^void GraphVisualizer::setGraph(dvo_slam::KeyframeGraph* graph)$/;"	f	class:dvo_slam::visualization::GraphVisualizer
setIdentity	dvo_core/src/dense_tracking_config.cpp	/^void DenseTracker::Result::setIdentity()$/;"	f	class:dvo::DenseTracker::Result
setKeyframePose	dvo_slam/src/local_map.cpp	/^void LocalMap::setKeyframePose(const dvo::core::AffineTransformd& keyframe_pose)$/;"	f	class:dvo_slam::LocalMap
setResidualForConstraint	dvo_core/src/core/least_squares.cpp	/^bool dvo::core::PrecomputedNormalEquationsLeastSquares::setResidualForConstraint(const size_t& idx, const NumType& res, const NumType& weight)$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
setRgbdImagePyramid	dvo_core/src/core/point_selection.cpp	/^void PointSelection::setRgbdImagePyramid(dvo::core::RgbdImagePyramid& pyramid)$/;"	f	class:dvo::core::PointSelection
setZero	dvo_core/src/core/math_sse.cpp	/^void OptimizedSelfAdjointMatrix6x6f::setZero()$/;"	f	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
show	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  virtual void show(Option option = ShowCameraAndCloud) {};$/;"	f	class:dvo::visualization::NoopCameraVisualizer
show	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  virtual void show(Option option = ShowCameraAndCloud)$/;"	f	class:dvo::visualization::internal::PclCameraVisualizer
show	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual void show(Option option = ShowCameraAndCloud)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer
skip	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  void skip(int num_lines)$/;"	f	class:dvo_benchmark::FileReader
skipComments	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  void skipComments()$/;"	f	class:dvo_benchmark::FileReader
slam_reconfigure_server_	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  SlamReconfigureServer slam_reconfigure_server_;$/;"	m	class:dvo_slam::CameraKeyframeTracker
solve	dvo_core/src/core/least_squares.cpp	/^void dvo::core::EvdLeastSquares::solve(dvo::core::Vector6& x)$/;"	f	class:dvo::core::EvdLeastSquares
solve	dvo_core/src/core/least_squares.cpp	/^void dvo::core::NormalEquationsLeastSquares::solve(dvo::core::Vector6& x)$/;"	f	class:dvo::core::NormalEquationsLeastSquares
solve	dvo_core/src/core/least_squares.cpp	/^void dvo::core::PrecomputedNormalEquationsLeastSquares::solve(dvo::core::Vector6 & x)$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
solve	dvo_core/src/core/least_squares.cpp	/^void dvo::core::SvdLeastSquares::solve(dvo::core::Vector6& x)$/;"	f	class:dvo::core::SvdLeastSquares
stages_	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^  StageVector stages_;$/;"	m	struct:dvo_slam::constraints::ConstraintProposalValidator
start	dvo_core/include/dvo/util/stopwatch.h	/^  inline void start()$/;"	f	struct:dvo::util::stopwatch
startSynchronizedImageStream	dvo_ros/src/camera_base.cpp	/^void CameraBase::startSynchronizedImageStream()$/;"	f	class:dvo_ros::CameraBase
stop	dvo_core/include/dvo/util/stopwatch.h	/^  inline void stop()$/;"	f	struct:dvo::util::stopwatch
stopAndPrint	dvo_core/include/dvo/util/stopwatch.h	/^  inline void stopAndPrint()$/;"	f	struct:dvo::util::stopwatch
stopSynchronizedImageStream	dvo_ros/src/camera_base.cpp	/^void CameraBase::stopSynchronizedImageStream()$/;"	f	class:dvo_ros::CameraBase
stopwatch	dvo_core/include/dvo/util/stopwatch.h	/^  stopwatch(std::string name, int interval = 500) : name(name + ": "), count(0), interval(interval)$/;"	f	struct:dvo::util::stopwatch
stopwatch	dvo_core/include/dvo/util/stopwatch.h	/^struct stopwatch$/;"	s	namespace:dvo::util
stopwatch_collection	dvo_core/include/dvo/util/stopwatch.h	/^  stopwatch_collection(const size_t num, std::string base_name, int interval = 500) : num(num)$/;"	f	struct:dvo::util::stopwatch_collection
stopwatch_collection	dvo_core/include/dvo/util/stopwatch.h	/^struct stopwatch_collection$/;"	s	namespace:dvo::util
storage_	dvo_core/include/dvo/core/point_selection.h	/^  std::vector<Storage> storage_;$/;"	m	class:dvo::core::PointSelection
str	dvo_core/src/core/weight_calculation.cpp	/^const char* InfluenceFunctions::str(enum_t type)$/;"	f	class:dvo::core::InfluenceFunctions
str	dvo_core/src/core/weight_calculation.cpp	/^const char* ScaleEstimators::str(enum_t type)$/;"	f	class:dvo::core::ScaleEstimators
stream_	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  std::ostream& stream_;$/;"	m	class:dvo_slam::serialization::EdgeErrorSerializer
stream_	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  std::ostream& stream_;$/;"	m	class:dvo_slam::serialization::TrajectorySerializer
sync	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^boost::mutex& PclCameraTrajectoryVisualizer::sync()$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
sync_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::mutex sync_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
synchronizer_	dvo_ros/include/dvo_ros/camera_base.h	/^  message_filters::Synchronizer<RGBDWithCameraInfoPolicy> synchronizer_;$/;"	m	class:dvo_ros::CameraBase
time_interpolation	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
timestamp	dvo_core/include/dvo/core/rgbd_image.h	/^  double timestamp;$/;"	m	class:dvo::core::RgbdImage
timestamp	dvo_core/src/core/rgbd_image.cpp	/^double RgbdImagePyramid::timestamp() const$/;"	f	class:dvo::core::RgbdImagePyramid
timestamp	dvo_slam/include/dvo_slam/keyframe.h	/^  ros::Time timestamp() const$/;"	f	class:dvo_slam::Keyframe
timestamp	dvo_slam/include/dvo_slam/timestamped.h	/^  ros::Time timestamp;$/;"	m	class:dvo_slam::Timestamped
tl	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  tf::TransformListener tl;$/;"	m	class:dvo_ros::CameraDenseTracker
tl	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  tf::TransformListener tl;$/;"	m	class:dvo_slam::CameraKeyframeTracker
toAffine	dvo_slam/src/keyframe_graph.cpp	/^static Eigen::Affine3d toAffine(const Eigen::Isometry3d& pose)$/;"	f	namespace:dvo_slam::internal
toAffine	dvo_slam/src/local_map.cpp	/^static Eigen::Affine3d toAffine(const Eigen::Isometry3d& pose)$/;"	f	namespace:dvo_slam::internal
toEigen	dvo_core/src/core/math_sse.cpp	/^void OptimizedSelfAdjointMatrix6x6f::toEigen(Eigen::Matrix<float, 6, 6>& m) const$/;"	f	class:dvo::core::OptimizedSelfAdjointMatrix6x6f
toIsometry	dvo_slam/src/keyframe_graph.cpp	/^static Eigen::Isometry3d toIsometry(const Eigen::Affine3d& pose)$/;"	f	namespace:dvo_slam::internal
toIsometry	dvo_slam/src/local_map.cpp	/^Eigen::Isometry3d toIsometry(const Eigen::Affine3d& pose)$/;"	f	namespace:dvo_slam::internal
toPoint	dvo_slam/src/visualization/graph_visualizer.cpp	/^  geometry_msgs::Point toPoint(g2o::VertexSE3* v)$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
toPoseEigen	dvo_benchmark/include/dvo_benchmark/tools.h	/^static void toPoseEigen(const Groundtruth& gt, Eigen::Transform<NumType, 3, Eigen::Affine>& pose)$/;"	f	namespace:dvo_benchmark
toPoseMsg	dvo_benchmark/include/dvo_benchmark/tools.h	/^static void toPoseMsg(const Groundtruth& gt, geometry_msgs::Pose& pose)$/;"	f	namespace:dvo_benchmark
toPoseTf	dvo_benchmark/include/dvo_benchmark/tools.h	/^static void toPoseTf(const Groundtruth& gt, tf::Pose& pose)$/;"	f	namespace:dvo_benchmark
toggle	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  void toggle()$/;"	f	struct:dvo::visualization::Switch
tracker	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  boost::shared_ptr<dvo::DenseTracker> tracker;$/;"	m	class:dvo_ros::CameraDenseTracker
tracker_	dvo_ros/include/dvo_ros/camera_tracker_nodelet.h	/^  std::auto_ptr<dvo_ros::CameraDenseTracker> tracker_;$/;"	m	class:dvo_ros::CameraTrackerNodelet
tracker_	dvo_slam/include/dvo_slam/constraints/constraint_proposal_validator.h	/^  dvo::DenseTracker tracker_;$/;"	m	struct:dvo_slam::constraints::ConstraintProposalValidator
tracker_cfg	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  dvo::DenseTracker::Config tracker_cfg;$/;"	m	class:dvo_ros::CameraDenseTracker
tracker_cfg	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo::DenseTracker::Config tracker_cfg;$/;"	m	class:dvo_slam::CameraKeyframeTracker
tracker_mutex_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  boost::mutex tracker_mutex_;$/;"	m	class:dvo_ros::CameraDenseTracker
tracker_mutex_	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  boost::mutex tracker_mutex_;$/;"	m	class:dvo_slam::CameraKeyframeTracker
tracker_reconfigure_server_	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  TrackerReconfigureServer tracker_reconfigure_server_;$/;"	m	class:dvo_slam::CameraKeyframeTracker
trackingConfig	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^ConstraintProposalValidator::Stage& ConstraintProposalValidator::Stage::trackingConfig(const dvo::DenseTracker::Config& cfg)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator::Stage
trackingConfiguration	dvo_slam/src/keyframe_tracker.cpp	/^const dvo::DenseTracker::Config& KeyframeTracker::trackingConfiguration() const$/;"	f	class:dvo_slam::KeyframeTracker
trajectory	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^TrajectoryVisualizer::Ptr NoopCameraTrajectoryVisualizer::trajectory(std::string name)$/;"	f	class:dvo::visualization::NoopCameraTrajectoryVisualizer
trajectory	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  TrajectoryVisualizer::Ptr trajectory(std::string name)$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
trajectory	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^dvo::visualization::TrajectoryVisualizer::Ptr PclCameraTrajectoryVisualizer::trajectory(std::string name)$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
trajectory	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  TrajectoryVisualizer::Ptr trajectory(std::string name)$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl
trajectory	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^dvo::visualization::TrajectoryVisualizer::Ptr RosCameraTrajectoryVisualizer::trajectory(std::string name)$/;"	f	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
trajectory_out_	dvo_benchmark/src/benchmark.cpp	/^  std::ostream *trajectory_out_;$/;"	m	class:BenchmarkNode	file:
trajectory_out_	dvo_benchmark/src/benchmark_slam.cpp	/^  std::ostream *trajectory_out_;$/;"	m	class:BenchmarkNode	file:
trajectory_visualizers_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  TrajectoryVisualizerMap trajectory_visualizers_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
trajectory_visualizers_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  TrajectoryVisualizerMap trajectory_visualizers_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
tryGetTransform	dvo_ros/include/dvo_ros/util/util.h	/^static void tryGetTransform(Eigen::Affine3d& result, tf::TransformListener& tl, std::string target_frame, std::string source_frame, double seconds_to_wait = 5)$/;"	f	namespace:dvo_ros::util
tryGetTransform	dvo_ros/include/dvo_ros/util/util.h	/^static void tryGetTransform(tf::Transform& result, tf::TransformListener& tl, std::string target_frame, std::string source_frame, double seconds_to_wait = 5)$/;"	f	namespace:dvo_ros::util
update	dvo_core/include/dvo/core/least_squares.h	/^  virtual void update(const Eigen::Matrix<NumType, 2, 6>& J, const Eigen::Matrix<NumType, 2, 1>& res, const Eigen::Matrix<NumType, 2, 2>& weight) {};$/;"	f	class:dvo::core::LeastSquaresInterface
update	dvo_core/include/dvo/util/revertable.h	/^  T& update()$/;"	f	class:dvo::util::Revertable
update	dvo_core/src/core/least_squares.cpp	/^void dvo::core::NormalEquationsLeastSquares::update(const Eigen::Matrix<NumType, 2, 6>& J, const Eigen::Matrix<NumType, 2, 1>& res, const Eigen::Matrix<NumType, 2, 2>& weight)$/;"	f	class:dvo::core::NormalEquationsLeastSquares
update	dvo_core/src/core/least_squares.cpp	/^void dvo::core::NormalEquationsLeastSquares::update(const dvo::core::Vector6& J, const NumType& res, const NumType& weight)$/;"	f	class:dvo::core::NormalEquationsLeastSquares
update	dvo_core/src/core/least_squares.cpp	/^void dvo::core::SvdLeastSquares::update(const dvo::core::Vector6& J, const NumType& res, const NumType& weight)$/;"	f	class:dvo::core::SvdLeastSquares
update	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  virtual CameraVisualizer& update(const dvo::core::RgbdImage& img, const Eigen::Affine3d& pose)$/;"	f	class:dvo::visualization::NoopCameraVisualizer
update	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  virtual CameraVisualizer& update(const dvo::core::RgbdImage& img, const Eigen::Affine3d& pose)$/;"	f	class:dvo::visualization::internal::PclCameraVisualizer
update	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual CameraVisualizer& update(const dvo::core::RgbdImage& img, const Eigen::Affine3d& pose)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer
update	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void update(const ros::TimerEvent& e)$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
update	dvo_slam/src/keyframe_tracker.cpp	/^  void update(const dvo::core::RgbdImagePyramid::Ptr& current, const ros::Time& current_time, Eigen::Affine3d& absolute_transformation)$/;"	f	class:dvo_slam::KeyframeTracker::Impl
update	dvo_slam/src/keyframe_tracker.cpp	/^void KeyframeTracker::update(const dvo::core::RgbdImagePyramid::Ptr& current, const ros::Time& current_time, Eigen::Affine3d& absolute_transformation)$/;"	f	class:dvo_slam::KeyframeTracker
update	dvo_slam/src/local_tracker.cpp	/^void LocalTracker::update(const dvo::core::RgbdImagePyramid::Ptr& image, dvo::core::AffineTransformd& pose)$/;"	f	class:dvo_slam::LocalTracker
update	dvo_slam/src/visualization/graph_visualizer.cpp	/^  void update()$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
update	dvo_slam/src/visualization/graph_visualizer.cpp	/^void GraphVisualizer::update()$/;"	f	class:dvo_slam::visualization::GraphVisualizer
updateConfigFromDynamicReconfigure	dvo_ros/include/dvo_ros/util/configtools.h	/^void updateConfigFromDynamicReconfigure(const dvo_ros::CameraDenseTrackerConfig& config, dvo::DenseTracker::Config& tracker_cfg)$/;"	f	namespace:dvo_ros::util
updateConfigFromDynamicReconfigure	dvo_slam/src/config.cpp	/^void updateConfigFromDynamicReconfigure(const KeyframeSlamConfig& cfg, KeyframeTrackerConfig& frontend_cfg, KeyframeGraphConfig& backend_cfg)$/;"	f	namespace:dvo_slam
updateKeyframePosesFromGraph	dvo_slam/src/keyframe_graph.cpp	/^  void updateKeyframePosesFromGraph()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
updateMarkerColor	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void updateMarkerColor()$/;"	f	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer	file:
updateMarkerColor	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void updateMarkerColor(visualization_msgs::InteractiveMarker& marker)$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
updateVisualization	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  void updateVisualization()$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
updateVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void updateVisualizer(pcl::visualization::PCLVisualizer& visualizer)$/;"	f	class:dvo::visualization::internal::PclTrajectoryVisualizer
updateVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  void updateVisualizer(pcl::visualization::PCLVisualizer& visualizer, PointCloudAggregator& aggregator)$/;"	f	class:dvo::visualization::internal::PclCameraVisualizer
update_timer_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  ros::Timer update_timer_;$/;"	m	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl	file:
use_dense_tracking_estimate_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  bool use_dense_tracking_estimate_;$/;"	m	class:dvo_ros::CameraDenseTracker
user_override_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  bool user_override_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
util	dvo_core/include/dvo/util/histogram.h	/^namespace util$/;"	n	namespace:dvo
util	dvo_core/include/dvo/util/id_generator.h	/^namespace util$/;"	n	namespace:dvo
util	dvo_core/include/dvo/util/revertable.h	/^namespace util$/;"	n	namespace:dvo
util	dvo_core/include/dvo/util/stopwatch.h	/^namespace util$/;"	n	namespace:dvo
util	dvo_core/src/util/histogram.cpp	/^namespace util$/;"	n	namespace:dvo	file:
util	dvo_core/src/util/id_generator.cpp	/^namespace util$/;"	n	namespace:dvo	file:
util	dvo_ros/include/dvo_ros/util/configtools.h	/^namespace util$/;"	n	namespace:dvo_ros
util	dvo_ros/include/dvo_ros/util/util.h	/^namespace dvo_ros { namespace util {$/;"	n	namespace:dvo_ros
validate	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^void ConstraintProposalValidator::validate(ConstraintProposalVector& proposals, bool debug)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator
validate	dvo_slam/src/constraints/constraint_proposal_validator.cpp	/^void ConstraintProposalValidator::validate(Stage& stage, ConstraintProposalVector& proposals, bool debug)$/;"	f	class:dvo_slam::constraints::ConstraintProposalValidator
validateKeyframeConstraintsParallel	dvo_slam/src/keyframe_graph.cpp	/^  void validateKeyframeConstraintsParallel(const KeyframeVector& constraint_candidates, const KeyframePtr& keyframe, ConstraintProposalVector& proposals)$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl	file:
validation_tracker_cfg_	dvo_slam/src/keyframe_graph.cpp	/^  dvo::DenseTracker::Config validation_tracker_cfg_, constraint_tracker_cfg_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
validator	dvo_slam/src/keyframe_graph.cpp	/^    ConstraintProposalValidatorPtr& validator()$/;"	f	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction	file:
validator_pool_	dvo_slam/src/keyframe_graph.cpp	/^  ConstraintProposalValidatorPool validator_pool_;$/;"	m	class:dvo_slam::internal::KeyframeGraphImpl	file:
validators_	dvo_slam/src/keyframe_graph.cpp	/^    ConstraintProposalValidatorPool& validators_;$/;"	m	struct:dvo_slam::internal::KeyframeGraphImpl::ValidateConstraintProposalReduction	file:
value	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual inline float value(const float& x) const { return 1.0f; };$/;"	f	class:dvo::core::UnitInfluenceFunction
value	dvo_core/include/dvo/util/revertable.h	/^  T old, value;$/;"	m	class:dvo::util::Revertable
value	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  bool value() const$/;"	f	struct:dvo::visualization::Switch
value	dvo_core/src/core/weight_calculation.cpp	/^inline float HuberInfluenceFunction::value(const float& x) const$/;"	f	class:dvo::core::HuberInfluenceFunction
value	dvo_core/src/core/weight_calculation.cpp	/^inline float TDistributionInfluenceFunction::value(const float & x) const$/;"	f	class:dvo::core::TDistributionInfluenceFunction
value	dvo_core/src/core/weight_calculation.cpp	/^inline float TukeyInfluenceFunction::value(const float& x) const$/;"	f	class:dvo::core::TukeyInfluenceFunction
value	dvo_slam/src/tracking_result_evaluation.cpp	/^double EntropyRatioTrackingResultEvaluation::value(const dvo::DenseTracker::Result& r) const$/;"	f	class:dvo_slam::EntropyRatioTrackingResultEvaluation
value	dvo_slam/src/tracking_result_evaluation.cpp	/^double LogLikelihoodTrackingResultEvaluation::value(const dvo::DenseTracker::Result& r) const$/;"	f	class:dvo_slam::LogLikelihoodTrackingResultEvaluation
value	dvo_slam/src/tracking_result_evaluation.cpp	/^double NormalizedLogLikelihoodTrackingResultEvaluation::value(const dvo::DenseTracker::Result& r) const$/;"	f	class:dvo_slam::NormalizedLogLikelihoodTrackingResultEvaluation
value_	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^  bool value_, changed_;$/;"	m	struct:dvo::visualization::Switch
var_	dvo_core/include/dvo/util/id_generator.h	/^  int var_;$/;"	m	class:dvo::util::IdGenerator
vis_	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  dvo::visualization::CameraTrajectoryVisualizerInterface* vis_;$/;"	m	class:dvo_ros::CameraDenseTracker
vis_	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  dvo_ros::visualization::RosCameraTrajectoryVisualizer* vis_;$/;"	m	class:dvo_slam::CameraKeyframeTracker
visibility_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  Option visibility_;$/;"	m	class:dvo::visualization::internal::PclCameraVisualizer	file:
visibility_	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  Option visibility_;$/;"	m	class:dvo_ros::visualization::internal::RosCameraVisualizer	file:
visible_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  double visible_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
visualization	dvo_core/include/dvo/visualization/async_point_cloud_builder.h	/^namespace visualization$/;"	n	namespace:dvo
visualization	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^namespace visualization$/;"	n	namespace:dvo
visualization	dvo_core/include/dvo/visualization/pcl_camera_trajectory_visualizer.h	/^namespace visualization$/;"	n	namespace:dvo
visualization	dvo_core/include/dvo/visualization/point_cloud_aggregator.h	/^namespace visualization$/;"	n	namespace:dvo
visualization	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^namespace visualization$/;"	n	namespace:dvo	file:
visualization	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^namespace visualization$/;"	n	namespace:dvo	file:
visualization	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^namespace visualization$/;"	n	namespace:dvo	file:
visualization	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^namespace visualization$/;"	n	namespace:dvo	file:
visualization	dvo_ros/include/dvo_ros/visualization/ros_camera_trajectory_visualizer.h	/^namespace visualization$/;"	n	namespace:dvo_ros
visualization	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^namespace visualization$/;"	n	namespace:dvo_ros	file:
visualization	dvo_slam/include/dvo_slam/visualization/graph_visualizer.h	/^namespace visualization$/;"	n	namespace:dvo_slam
visualization	dvo_slam/src/visualization/graph_visualizer.cpp	/^namespace visualization$/;"	n	namespace:dvo_slam	file:
visualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  pcl::visualization::PCLVisualizer& visualizer()$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
visualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^pcl::visualization::PCLVisualizer& PclCameraTrajectoryVisualizer::visualizer()$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
visualizer_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::shared_ptr<pcl::visualization::PCLVisualizer> visualizer_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
visualizer_	dvo_slam/src/keyframe_tracker.cpp	/^  dvo_slam::visualization::GraphVisualizer* visualizer_;$/;"	m	class:dvo_slam::KeyframeTracker::Impl	file:
visualizer_	dvo_slam/src/visualization/graph_visualizer.cpp	/^  dvo_ros::visualization::RosCameraTrajectoryVisualizer& visualizer_;$/;"	m	class:dvo_slam::visualization::internal::GraphVisualizerImpl	file:
visualizer_thread_	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  boost::shared_ptr<boost::thread> visualizer_thread_;$/;"	m	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl	file:
vote	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintProposal::Vote ConstraintRatioVoter::vote(const ConstraintProposal& proposal, bool provide_reason)$/;"	f	class:dvo_slam::constraints::ConstraintRatioVoter
vote	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintProposal::Vote CrossValidationVoter::vote(const ConstraintProposal& proposal, bool provide_reason)$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
vote	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintProposal::Vote NaNResultVoter::vote(const ConstraintProposal& proposal, bool provide_reason)$/;"	f	class:dvo_slam::constraints::NaNResultVoter
vote	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintProposal::Vote OdometryConstraintVoter::vote(const ConstraintProposal& proposal, bool provide_reason)$/;"	f	class:dvo_slam::constraints::OdometryConstraintVoter
vote	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintProposal::Vote TrackingResultEvaluationVoter::vote(const ConstraintProposal& proposal, bool provide_reason)$/;"	f	class:dvo_slam::constraints::TrackingResultEvaluationVoter
warpDepthForward	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::warpDepthForward(const AffineTransform& transformationx, const IntrinsicMatrix& intrinsics, RgbdImage& result, cv::Mat_<cv::Vec3d>& cloud)$/;"	f	class:dvo::core::RgbdImage
warpDepthForwardAdvanced	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::warpDepthForwardAdvanced(const AffineTransform& transformation, const IntrinsicMatrix& intrinsics, RgbdImage& result)$/;"	f	class:dvo::core::RgbdImage
warpIntensity	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::warpIntensity(const AffineTransform& transformationd, const PointCloud& reference_pointcloud, const IntrinsicMatrix& intrinsics, RgbdImage& result, PointCloud& transformed_pointcloud)$/;"	f	class:dvo::core::RgbdImage
warpIntensityForward	dvo_core/src/core/rgbd_image.cpp	/^void RgbdImage::warpIntensityForward(const AffineTransform& transformationx, const IntrinsicMatrix& intrinsics, RgbdImage& result, cv::Mat_<cv::Vec3d>& cloud)$/;"	f	class:dvo::core::RgbdImage
warpIntensitySse	dvo_core/src/core/rgbd_image_sse.cpp	/^void RgbdImage::warpIntensitySse(const AffineTransform& transformation, const PointCloud& reference_pointcloud, const IntrinsicMatrix& intrinsics, RgbdImage& result)$/;"	f	class:dvo::core::RgbdImage
warpIntensitySse	dvo_core/src/core/rgbd_image_sse.cpp	/^void RgbdImage::warpIntensitySse(const AffineTransform& transformation, const PointCloud& reference_pointcloud, const IntrinsicMatrix& intrinsics, RgbdImage& result, PointCloud& transformed_pointcloud)$/;"	f	class:dvo::core::RgbdImage
warpIntensitySseImpl	dvo_core/src/core/rgbd_image_sse.cpp	/^void RgbdImage::warpIntensitySseImpl(const AffineTransform& transformationx, const PointCloud& reference_pointcloud, const IntrinsicMatrix& intrinsics, RgbdImage& result, PointCloud& transformed_pointcloud)$/;"	f	class:dvo::core::RgbdImage
watches	dvo_core/include/dvo/util/stopwatch.h	/^  std::vector<stopwatch*> watches;$/;"	m	struct:dvo::util::stopwatch_collection
weight_calculation_	dvo_core/include/dvo/dense_tracking.h	/^  dvo::core::WeightCalculation weight_calculation_;$/;"	m	class:dvo::DenseTracker
weights	dvo_core/include/dvo/dense_tracking.h	/^  WeightVectorType weights;$/;"	m	class:dvo::DenseTracker
width	dvo_core/include/dvo/core/rgbd_image.h	/^  size_t width, height;$/;"	m	class:dvo::core::RgbdImage
width	dvo_core/src/core/rgbd_image.cpp	/^size_t RgbdCamera::width() const$/;"	f	class:dvo::core::RgbdCamera
width	dvo_ros/include/dvo_ros/camera_dense_tracking.h	/^  uint32_t width;$/;"	m	class:dvo_ros::CameraDenseTracker
width	dvo_slam/include/dvo_slam/camera_keyframe_tracking.h	/^  uint32_t width;$/;"	m	class:dvo_slam::CameraKeyframeTracker
width_	dvo_core/include/dvo/core/rgbd_image.h	/^  size_t width_, height_;$/;"	m	class:dvo::core::RgbdCamera
write	dvo_slam/include/dvo_slam/timestamped.h	/^  virtual bool write(std::ostream& os) const$/;"	f	class:dvo_slam::Timestamped
x	dvo_core/include/dvo/core/rgbd_image.h	/^      float x, y, z;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon1::__anon2
y	dvo_core/include/dvo/core/rgbd_image.h	/^      float x, y, z;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon1::__anon2
z	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
z	dvo_core/include/dvo/core/rgbd_image.h	/^      float x, y, z;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon1::__anon2
zdx	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
zdy	dvo_core/include/dvo/core/rgbd_image.h	/^      float i, z, idx, idy, zdx, zdy, time_interpolation;$/;"	m	struct:dvo::core::PointWithIntensityAndDepth::__anon3::__anon4
~ApproximateTDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~ApproximateTDistributionScaleEstimator() {};$/;"	f	class:dvo::core::ApproximateTDistributionScaleEstimator
~AsyncPointCloudBuilder	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^AsyncPointCloudBuilder::~AsyncPointCloudBuilder()$/;"	f	class:dvo::visualization::AsyncPointCloudBuilder
~BuildPointCloudTask	dvo_core/src/visualization/async_point_cloud_builder.cpp	/^  virtual ~BuildPointCloudTask()$/;"	f	class:dvo::visualization::BuildPointCloudTask
~CameraBase	dvo_ros/src/camera_base.cpp	/^CameraBase::~CameraBase()$/;"	f	class:dvo_ros::CameraBase
~CameraDenseTracker	dvo_ros/src/camera_dense_tracking.cpp	/^CameraDenseTracker::~CameraDenseTracker()$/;"	f	class:dvo_ros::CameraDenseTracker
~CameraKeyframeTracker	dvo_slam/src/camera_keyframe_tracking.cpp	/^CameraKeyframeTracker::~CameraKeyframeTracker()$/;"	f	class:dvo_slam::CameraKeyframeTracker
~CameraTrackerNodelet	dvo_ros/src/camera_tracker_nodelet.cpp	/^CameraTrackerNodelet::~CameraTrackerNodelet()$/;"	f	class:dvo_ros::CameraTrackerNodelet
~CameraTrajectoryVisualizerInterface	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  virtual ~CameraTrajectoryVisualizerInterface() {};$/;"	f	class:dvo::visualization::CameraTrajectoryVisualizerInterface
~CameraVisualizer	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  virtual ~CameraVisualizer() {};$/;"	f	class:dvo::visualization::CameraVisualizer
~ConstraintProposalVoter	dvo_slam/include/dvo_slam/constraints/constraint_proposal_voter.h	/^  virtual ~ConstraintProposalVoter() {};$/;"	f	struct:dvo_slam::constraints::ConstraintProposalVoter
~ConstraintRatioVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^ConstraintRatioVoter::~ConstraintRatioVoter() {}$/;"	f	class:dvo_slam::constraints::ConstraintRatioVoter
~CrossValidationVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^CrossValidationVoter::~CrossValidationVoter() {}$/;"	f	class:dvo_slam::constraints::CrossValidationVoter
~EdgeErrorSerializer	dvo_slam/src/serialization/map_serializer.cpp	/^EdgeErrorSerializer::~EdgeErrorSerializer()$/;"	f	class:dvo_slam::serialization::EdgeErrorSerializer
~EntropyRatioTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  virtual ~EntropyRatioTrackingResultEvaluation() {};$/;"	f	class:dvo_slam::EntropyRatioTrackingResultEvaluation
~EvdLeastSquares	dvo_core/src/core/least_squares.cpp	/^dvo::core::EvdLeastSquares::~EvdLeastSquares() { }$/;"	f	class:dvo::core::EvdLeastSquares
~FileReader	dvo_benchmark/include/dvo_benchmark/file_reader.h	/^  virtual ~FileReader()$/;"	f	class:dvo_benchmark::FileReader
~FileSerializer	dvo_slam/include/dvo_slam/serialization/map_serializer.h	/^  virtual ~FileSerializer()$/;"	f	class:dvo_slam::serialization::FileSerializer
~GraphVisualizer	dvo_slam/src/visualization/graph_visualizer.cpp	/^GraphVisualizer::~GraphVisualizer()$/;"	f	class:dvo_slam::visualization::GraphVisualizer
~GraphVisualizerImpl	dvo_slam/src/visualization/graph_visualizer.cpp	/^  ~GraphVisualizerImpl()$/;"	f	class:dvo_slam::visualization::internal::GraphVisualizerImpl
~Groundtruth	dvo_benchmark/include/dvo_benchmark/groundtruth.h	/^  virtual ~Groundtruth() {}$/;"	f	class:dvo_benchmark::Groundtruth
~HuberInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~HuberInfluenceFunction() {};$/;"	f	class:dvo::core::HuberInfluenceFunction
~InfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~InfluenceFunction() {};$/;"	f	class:dvo::core::InfluenceFunction
~Keyframe	dvo_slam/include/dvo_slam/keyframe.h	/^  virtual ~Keyframe() {};$/;"	f	class:dvo_slam::Keyframe
~KeyframeConstraintSearchInterface	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^  virtual ~KeyframeConstraintSearchInterface() {}$/;"	f	class:dvo_slam::KeyframeConstraintSearchInterface
~KeyframeGraph	dvo_slam/src/keyframe_graph.cpp	/^KeyframeGraph::~KeyframeGraph()$/;"	f	class:dvo_slam::KeyframeGraph
~KeyframeGraphImpl	dvo_slam/src/keyframe_graph.cpp	/^  ~KeyframeGraphImpl()$/;"	f	class:dvo_slam::internal::KeyframeGraphImpl
~LeastSquaresInterface	dvo_core/include/dvo/core/least_squares.h	/^  virtual ~LeastSquaresInterface() {};$/;"	f	class:dvo::core::LeastSquaresInterface
~LocalMap	dvo_slam/src/local_map.cpp	/^LocalMap::~LocalMap()$/;"	f	class:dvo_slam::LocalMap
~LocalTracker	dvo_slam/src/local_tracker.cpp	/^LocalTracker::~LocalTracker()$/;"	f	class:dvo_slam::LocalTracker
~LogLikelihoodTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  virtual ~LogLikelihoodTrackingResultEvaluation() {};$/;"	f	class:dvo_slam::LogLikelihoodTrackingResultEvaluation
~MADScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~MADScaleEstimator() {};$/;"	f	class:dvo::core::MADScaleEstimator
~MapSerializerInterface	dvo_slam/src/serialization/map_serializer_interface.cpp	/^MapSerializerInterface::~MapSerializerInterface()$/;"	f	class:dvo_slam::serialization::MapSerializerInterface
~MessageSerializer	dvo_slam/src/serialization/map_serializer.cpp	/^MessageSerializer::~MessageSerializer()$/;"	f	class:dvo_slam::serialization::MessageSerializer
~NaNResultVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^NaNResultVoter::~NaNResultVoter() {}$/;"	f	class:dvo_slam::constraints::NaNResultVoter
~NearestNeighborConstraintSearch	dvo_slam/include/dvo_slam/keyframe_constraint_search.h	/^  virtual ~NearestNeighborConstraintSearch() {};$/;"	f	class:dvo_slam::NearestNeighborConstraintSearch
~NoopCameraTrajectoryVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^NoopCameraTrajectoryVisualizer::~NoopCameraTrajectoryVisualizer()$/;"	f	class:dvo::visualization::NoopCameraTrajectoryVisualizer
~NoopCameraVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  virtual ~NoopCameraVisualizer() {};$/;"	f	class:dvo::visualization::NoopCameraVisualizer
~NoopTrajectoryVisualizer	dvo_core/src/visualization/camera_trajectory_visualizer.cpp	/^  virtual ~NoopTrajectoryVisualizer() {}$/;"	f	class:dvo::visualization::NoopTrajectoryVisualizer
~NormalDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~NormalDistributionScaleEstimator() {};$/;"	f	class:dvo::core::NormalDistributionScaleEstimator
~NormalEquationsLeastSquares	dvo_core/src/core/least_squares.cpp	/^dvo::core::NormalEquationsLeastSquares::~NormalEquationsLeastSquares() { }$/;"	f	class:dvo::core::NormalEquationsLeastSquares
~NormalizedLogLikelihoodTrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  virtual ~NormalizedLogLikelihoodTrackingResultEvaluation() {};$/;"	f	class:dvo_slam::NormalizedLogLikelihoodTrackingResultEvaluation
~OdometryConstraintVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^OdometryConstraintVoter::~OdometryConstraintVoter() {}$/;"	f	class:dvo_slam::constraints::OdometryConstraintVoter
~OptimizedTDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~OptimizedTDistributionScaleEstimator() {};$/;"	f	class:dvo::core::OptimizedTDistributionScaleEstimator
~PclCameraTrajectoryVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^PclCameraTrajectoryVisualizer::~PclCameraTrajectoryVisualizer()$/;"	f	class:dvo::visualization::PclCameraTrajectoryVisualizer
~PclCameraTrajectoryVisualizerImpl	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  ~PclCameraTrajectoryVisualizerImpl()$/;"	f	struct:dvo::visualization::internal::PclCameraTrajectoryVisualizerImpl
~PclCameraVisualizer	dvo_core/src/visualization/pcl_camera_trajetory_visualizer.cpp	/^  virtual ~PclCameraVisualizer()$/;"	f	class:dvo::visualization::internal::PclCameraVisualizer
~PointCloudAggregator	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^PointCloudAggregator::~PointCloudAggregator() {}$/;"	f	class:dvo::visualization::PointCloudAggregator
~PointCloudAggregatorImpl	dvo_core/src/visualization/point_cloud_aggregator.cpp	/^  ~PointCloudAggregatorImpl() {}$/;"	f	class:dvo::visualization::internal::PointCloudAggregatorImpl
~PointSelection	dvo_core/src/core/point_selection.cpp	/^PointSelection::~PointSelection()$/;"	f	class:dvo::core::PointSelection
~PointSelectionPredicate	dvo_core/include/dvo/core/point_selection.h	/^  virtual ~PointSelectionPredicate() {}$/;"	f	class:dvo::core::PointSelectionPredicate
~PrecomputedLeastSquaresInterface	dvo_core/include/dvo/core/least_squares.h	/^  virtual ~PrecomputedLeastSquaresInterface() {};$/;"	f	class:dvo::core::PrecomputedLeastSquaresInterface
~PrecomputedNormalEquationsLeastSquares	dvo_core/src/core/least_squares.cpp	/^dvo::core::PrecomputedNormalEquationsLeastSquares::~PrecomputedNormalEquationsLeastSquares() { }$/;"	f	class:dvo::core::PrecomputedNormalEquationsLeastSquares
~RgbdCamera	dvo_core/src/core/rgbd_image.cpp	/^RgbdCamera::~RgbdCamera()$/;"	f	class:dvo::core::RgbdCamera
~RgbdCameraPyramid	dvo_core/src/core/rgbd_image.cpp	/^RgbdCameraPyramid::~RgbdCameraPyramid()$/;"	f	class:dvo::core::RgbdCameraPyramid
~RgbdImage	dvo_core/src/core/rgbd_image.cpp	/^RgbdImage::~RgbdImage()$/;"	f	class:dvo::core::RgbdImage
~RgbdImagePyramid	dvo_core/src/core/rgbd_image.cpp	/^RgbdImagePyramid::~RgbdImagePyramid()$/;"	f	class:dvo::core::RgbdImagePyramid
~RgbdPair	dvo_benchmark/include/dvo_benchmark/rgbd_pair.h	/^  virtual ~RgbdPair() {};$/;"	f	class:dvo_benchmark::RgbdPair
~RosCameraTrajectoryVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^RosCameraTrajectoryVisualizer::~RosCameraTrajectoryVisualizer()$/;"	f	class:dvo_ros::visualization::RosCameraTrajectoryVisualizer
~RosCameraTrajectoryVisualizerImpl	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  ~RosCameraTrajectoryVisualizerImpl()$/;"	f	struct:dvo_ros::visualization::internal::RosCameraTrajectoryVisualizerImpl
~RosCameraVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual ~RosCameraVisualizer()$/;"	f	class:dvo_ros::visualization::internal::RosCameraVisualizer
~RosTrajectoryVisualizer	dvo_ros/src/visualization/ros_camera_trajectory_visualizer.cpp	/^  virtual ~RosTrajectoryVisualizer()$/;"	f	class:dvo_ros::visualization::internal::RosTrajectoryVisualizer
~ScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~ScaleEstimator() {};$/;"	f	class:dvo::core::ScaleEstimator
~SurfacePyramid	dvo_core/src/core/surface_pyramid.cpp	/^SurfacePyramid::~SurfacePyramid()$/;"	f	class:dvo::core::SurfacePyramid
~SvdLeastSquares	dvo_core/src/core/least_squares.cpp	/^dvo::core::SvdLeastSquares::~SvdLeastSquares() { }$/;"	f	class:dvo::core::SvdLeastSquares
~TDistributionInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~TDistributionInfluenceFunction() {};$/;"	f	class:dvo::core::TDistributionInfluenceFunction
~TDistributionScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~TDistributionScaleEstimator() {};$/;"	f	class:dvo::core::TDistributionScaleEstimator
~TrackingResultEvaluation	dvo_slam/include/dvo_slam/tracking_result_evaluation.h	/^  virtual ~TrackingResultEvaluation() {};$/;"	f	class:dvo_slam::TrackingResultEvaluation
~TrackingResultEvaluationVoter	dvo_slam/src/constraints/constraint_proposal_voter.cpp	/^TrackingResultEvaluationVoter::~TrackingResultEvaluationVoter() {}$/;"	f	class:dvo_slam::constraints::TrackingResultEvaluationVoter
~TrajectorySerializer	dvo_slam/src/serialization/map_serializer.cpp	/^TrajectorySerializer::~TrajectorySerializer()$/;"	f	class:dvo_slam::serialization::TrajectorySerializer
~TrajectoryVisualizer	dvo_core/include/dvo/visualization/camera_trajectory_visualizer.h	/^  virtual ~TrajectoryVisualizer() {};$/;"	f	class:dvo::visualization::TrajectoryVisualizer
~TukeyInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~TukeyInfluenceFunction() {};$/;"	f	class:dvo::core::TukeyInfluenceFunction
~UnitInfluenceFunction	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~UnitInfluenceFunction() {};$/;"	f	class:dvo::core::UnitInfluenceFunction
~UnitScaleEstimator	dvo_core/include/dvo/core/weight_calculation.h	/^  virtual ~UnitScaleEstimator() {}$/;"	f	class:dvo::core::UnitScaleEstimator
~ValidPointAndGradientThresholdPredicate	dvo_core/include/dvo/core/point_selection.h	/^  virtual ~ValidPointAndGradientThresholdPredicate() {}$/;"	f	class:dvo::core::ValidPointAndGradientThresholdPredicate
~ValidPointPredicate	dvo_core/include/dvo/core/point_selection.h	/^  virtual ~ValidPointPredicate() {}$/;"	f	class:dvo::core::ValidPointPredicate
~stopwatch_collection	dvo_core/include/dvo/util/stopwatch.h	/^  ~stopwatch_collection()$/;"	f	struct:dvo::util::stopwatch_collection
